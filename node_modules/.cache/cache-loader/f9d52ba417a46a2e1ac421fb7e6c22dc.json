{"remainingRequest":"/Users/sserrata/projects/cortex.pan.dev/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/sserrata/projects/cortex.pan.dev/docs/panos_dag_qs.md","dependencies":[{"path":"/Users/sserrata/projects/cortex.pan.dev/docs/panos_dag_qs.md","mtime":1573238912197},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/cache-loader/dist/cjs.js","mtime":1571778479501},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/babel-loader/lib/index.js","mtime":1571778479497},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1573222772737},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1573222772389}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/sserrata/projects/cortex.pan.dev/docs/panos_dag_qs.md"],"names":["React","mdx","frontMatter","id","title","sidebar_label","hide_title","description","keywords","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'panos_dag_qs',\n\ttitle: 'Automating IP Blocking',\n\tsidebar_label: 'Automating IP Blocking',\n\thide_title: false,\n\tdescription: 'Using Dynamic Address Groups to automate IP blocking',\n\tkeywords: [\n\t\t'PAN-OS',\n\t\t'pan-python',\n\t\t'XML API',\n\t\t'xmlapi',\n\t\t'dag',\n\t\t'dynamic address group',\n\t\t'pan-python',\n\t\t'curl',\n\t\t'automation'\n\t]\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Common use cases',\n  id: 'common-use-cases',\n  children: []\n}, {\n  value: 'Requirements',\n  id: 'requirements',\n  children: []\n}, {\n  value: 'Steps',\n  id: 'steps',\n  children: [{\n    value: 'Step 1: Create a Dynamic Address Group',\n    id: 'step-1-create-a-dynamic-address-group',\n    children: []\n  }, {\n    value: 'Step 2: Create a Security Policy',\n    id: 'step-2-create-a-security-policy',\n    children: []\n  }, {\n    value: 'Step 3: Commit the configuration',\n    id: 'step-3-commit-the-configuration',\n    children: []\n  }, {\n    value: 'Step 4: Obtain the Firewall API Key',\n    id: 'step-4-obtain-the-firewall-api-key',\n    children: []\n  }, {\n    value: 'Step 5: Tag IP addresses',\n    id: 'step-5-tag-ip-addresses',\n    children: []\n  }, {\n    value: 'Step 6: Verify',\n    id: 'step-6-verify',\n    children: []\n  }, {\n    value: 'Step 7: Untag IP addresses',\n    id: 'step-7-untag-ip-addresses',\n    children: []\n  }]\n}, {\n  value: 'Conclusion',\n  id: 'conclusion',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`In this Quickstart guide we'll show how to integrate with Palo Alto Networks Next-Generation Firewalls to automatically block communications (incoming, outgoing or both) from/to specific IP addresses. This is a common pattern used in partner and customer integrations to automate remediation based on external factors, such as alerts or Threat Intel data.`}</p>\n    <h2 {...{\n      \"id\": \"common-use-cases\"\n    }}>{`Common use cases`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Isolate a client and prevent it from accessing the Internet (including Command & Control servers) and sensitive internal resources (`}<em parentName=\"li\">{`block outgoing communications`}</em>{`)`}</li>\n      <li parentName=\"ul\">{`Block a remote malicious IP - e.g., a known C2 server (`}<em parentName=\"li\">{`block outgoing communications`}</em>{`)`}</li>\n      <li parentName=\"ul\">{`Block an external IP address that is attacking the corporate network (`}<em parentName=\"li\">{`block incoming communications`}</em>{`)`}</li>\n      <li parentName=\"ul\">{`Allow connections to a specific external IP address - e.g., a known SaaS service (`}<em parentName=\"li\">{`whitelist outgoing communications`}</em>{`)`}</li>\n    </ul>\n    <p>{`This guide leverages the concept of `}<em parentName=\"p\">{`dynamic tags`}</em>{`. In PAN-OS it is possible to dynamically associate (and remove) tags from IP addresses, using several ways, including the XML API. A tag is simply a string that can be used as a match criteria in Dynamic Address Groups, allowing the Firewall to dynamically allow/block traffic without requiring a configuration commit.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`While the exact same approach can be applied for `}<em parentName=\"p\">{`whitelisting`}</em>{` (as in the last examples above), for simplicity, in this article, we'll just refer to `}<em parentName=\"p\">{`blocking`}</em>{`, which is the most common use case, but the same techniques apply for both.`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`This article refers to blocking based on IP address, which is very common in automation, and refers to the `}<strong parentName=\"p\">{`Dynamic Address Group`}</strong>{` (DAG) feature of PAN-OS. If you need to block URLs or domains, other options are available that are not covered by this guide.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"requirements\"\n    }}>{`Requirements`}</h2>\n    <p>{`To follow this guide, it is recommended that that you are familiar with the concepts of Palo Alto Networks Next-Generation Firewalls, Security Policies and APIs. Some basic understanding of XML is also recommended.`}</p>\n    <p>{`Make sure you have a Palo Alto Networks Next-Generation Firewall deployed and that you have administrative access to its Management interface via HTTPS. To avoid potential disruptions, it's recommended to run all the tests on a `}<strong parentName=\"p\">{`non-production`}</strong>{` environment.`}</p>\n    <p>{`No specific programming language expertise is required, although `}<em parentName=\"p\">{`Python`}</em>{` is recommended. Examples with both `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/xmlapi_qs\"\n      }}>{`curl`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/panpython_qs\"\n      }}>{`pan-python`}</a>{` are provided.`}</p>\n    <h2 {...{\n      \"id\": \"steps\"\n    }}>{`Steps`}</h2>\n    <p>{`To block traffic to/from specific IP addresses, you will go through the following steps described in this guide:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Configure a `}<strong parentName=\"li\">{`Dynamic Address Group (DAG)`}</strong>{` that will use a specific `}<em parentName=\"li\">{`tag`}</em>{` for membership.`}</li>\n      <li parentName=\"ul\">{`Create a `}<strong parentName=\"li\">{`Security Policy`}</strong>{` that uses that DAG as the source or destination (depending on the use case)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Commit`}</strong>{` the Firewall configuration to make sure that the changes are applied`}</li>\n      <li parentName=\"ul\">{`Obtain the Next-Generation Firewall's `}<strong parentName=\"li\">{`API Key`}</strong>{` to programmatically interact with the API`}</li>\n      <li parentName=\"ul\">{`Use the `}<strong parentName=\"li\">{`PAN-OS XML API`}</strong>{` to associate IP addresses to the tag you previously created`}</li>\n      <li parentName=\"ul\">{`Verify that the configuration is working`}</li>\n      <li parentName=\"ul\">{`Use API to deassociate the IP Addresses from the tag (cleanup)`}</li>\n    </ul>\n    <p>{`More information about DAGs are available `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.paloaltonetworks.com/pan-os/9-0/pan-os-admin/policy/monitor-changes-in-the-virtual-environment/use-dynamic-address-groups-in-policy.html\"\n      }}>{`here`}</a>{`.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`The scope of this tutorial is to demonstrate how to programmatically tag/untag IPs that can be used in policies. The policies will be created manually via the Web UI. Automating the creation of Security Policies is possible with PAN-OS, although more considerations have to be taken into account (Zones, ordering of rules, etc.), and it is not covered in this guide.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"step-1-create-a-dynamic-address-group\"\n    }}>{`Step 1: Create a Dynamic Address Group`}</h3>\n    <p>{`To create a DAG, follow these steps:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Login on the Next-Generation Firewall with administrative credentials:`}</p>\n        <p parentName=\"li\"><img parentName=\"p\" {...{\n            \"src\": \"/img/01-login.png\",\n            \"alt\": \"Login\",\n            \"title\": \"Login\"\n          }}></img></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Navigate to `}<strong parentName=\"p\">{`Objects`}</strong>{` - `}<strong parentName=\"p\">{`Address Groups`}</strong>{`, then click on `}<strong parentName=\"p\">{`Add`}</strong>{`:`}</p>\n        <p parentName=\"li\"><img parentName=\"p\" {...{\n            \"src\": \"/img/02-add-address.png\",\n            \"alt\": \"Add Address Group\",\n            \"title\": \"Add Address Group\"\n          }}></img></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Enter the `}<strong parentName=\"p\">{`Name`}</strong>{` (`}<em parentName=\"p\">{`testBlock`}</em>{` in the example), select `}<em parentName=\"p\">{`Dynamic`}</em>{` as `}<strong parentName=\"p\">{`Type`}</strong>{`.\nIn the `}<strong parentName=\"p\">{`Match`}</strong>{` window type `}<em parentName=\"p\">{`'malicious'`}</em>{`. Note the single quotes. This is the name of the tag you are going to use for matching. Every IP that is tagged with the `}<em parentName=\"p\">{`malicious`}</em>{` tag will be automatically added in this Dynamic Address Group. Note that you can use the `}<strong parentName=\"p\">{`and`}</strong>{` and `}<strong parentName=\"p\">{`or`}</strong>{` keywords if you want the DAG to match multiple tags. Then click on OK:`}</p>\n        <p parentName=\"li\"><img parentName=\"p\" {...{\n            \"src\": \"/img/03-dynamicgroup.png\",\n            \"alt\": \"Dynamic Group\",\n            \"title\": \"Dynamic Group\"\n          }}></img></p>\n      </li>\n    </ol>\n    <h3 {...{\n      \"id\": \"step-2-create-a-security-policy\"\n    }}>{`Step 2: Create a Security Policy`}</h3>\n    <p>{`As previously mentioned, the way you create a Security Policy will determine how the firewall will behave. The policy created in this example will block all `}<em parentName=\"p\">{`outgoing`}</em>{` connections to malicious IPs (e.g., C2 servers). In this case, the configuration of the policy will be as follows:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Source`}</strong>{`: Trust Zone, Any IP (e.g., Corporate network)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Destination`}</strong>{`: Untrust Zone, `}<strong parentName=\"li\">{`testBlock`}</strong>{` Dynamic Address Group (the IPs you will tag as `}<em parentName=\"li\">{`malicious`}</em>{`)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Application`}</strong>{`: Any`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Service`}</strong>{`: Any`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Actions`}</strong>{`: Block`}</li>\n    </ul>\n    <p>{`To change the use case, for example to block infected clients from reaching the Internet, you can just use the `}<strong parentName=\"p\">{`testBlock`}</strong>{` DAG in the source instead of the destination. To block malicious external IPs from reaching your network from outside, you can just flip the Source and the Destination zones. Add so on.`}</p>\n    <p>{`To Create a Security Policy, follow these steps:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Navigate to `}<strong parentName=\"p\">{`Policies`}</strong>{` - `}<strong parentName=\"p\">{`Security`}</strong>{`, then click on `}<strong parentName=\"p\">{`Add`}</strong>{`:`}</p>\n        <p parentName=\"li\"><img parentName=\"p\" {...{\n            \"src\": \"/img/04-policies.png\",\n            \"alt\": \"Security Policies\",\n            \"title\": \"Security Policies\"\n          }}></img></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Enter the parameters as follows:`}</p>\n      </li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`General`}</strong>{` tab, enter the policy `}<strong parentName=\"p\">{`Name`}</strong>{` (`}<em parentName=\"p\">{`blockDAG`}</em>{` in the example):`}</p>\n        <p parentName=\"li\"><img parentName=\"p\" {...{\n            \"src\": \"/img/05-policygeneral.png\",\n            \"alt\": \"Security Policy - General\",\n            \"title\": \"Security Policy - General\"\n          }}></img></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`Source`}</strong>{` tab, `}<strong parentName=\"p\">{`Add`}</strong>{` the trusted zone (`}<em parentName=\"p\">{`L3-Trust`}</em>{` in the example), leave the `}<strong parentName=\"p\">{`Source Address`}</strong>{` at `}<em parentName=\"p\">{`Any`}</em>{`:`}</p>\n        <p parentName=\"li\"><img parentName=\"p\" {...{\n            \"src\": \"/img/06-policysource.png\",\n            \"alt\": \"Security Policy - Source\",\n            \"title\": \"Security Policy - Source\"\n          }}></img></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`Destination`}</strong>{` tab, `}<strong parentName=\"p\">{`Add`}</strong>{` the untrusted zone (`}<em parentName=\"p\">{`L3-Untrust`}</em>{` in the example), and `}<strong parentName=\"p\">{`Add`}</strong>{` the `}<strong parentName=\"p\">{`testBlock`}</strong>{` DAG as the `}<strong parentName=\"p\">{`Destination Address`}</strong>{`:`}</p>\n        <p parentName=\"li\"><img parentName=\"p\" {...{\n            \"src\": \"/img/07-policydestination.png\",\n            \"alt\": \"Security Policy - Destination\",\n            \"title\": \"Security Policy - Destination\"\n          }}></img></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`Service/URL Category`}</strong>{` tab, select `}<em parentName=\"p\">{`any`}</em>{` as the `}<strong parentName=\"p\">{`Service`}</strong>{`:`}</p>\n        <p parentName=\"li\"><img parentName=\"p\" {...{\n            \"src\": \"/img/08-policyservice.png\",\n            \"alt\": \"Security Policy - Service\",\n            \"title\": \"Security Policy - Service\"\n          }}></img></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`Actions`}</strong>{` tab, select `}<em parentName=\"p\">{`Drop`}</em>{` as the `}<strong parentName=\"p\">{`Action`}</strong>{`, and enable the `}<strong parentName=\"p\">{`Log at Session End`}</strong>{` checkbox:`}</p>\n        <p parentName=\"li\"><img parentName=\"p\" {...{\n            \"src\": \"/img/09-policyactions.png\",\n            \"alt\": \"Security Policy - Action\",\n            \"title\": \"Security Policy - Action\"\n          }}></img></p>\n      </li>\n    </ul>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Click OK and check the newly created policy:`}</p>\n        <p parentName=\"li\"><img parentName=\"p\" {...{\n            \"src\": \"/img/10-policylist.png\",\n            \"alt\": \"Security Policy List\",\n            \"title\": \"Security Policy List\"\n          }}></img></p>\n      </li>\n    </ol>\n    <blockquote>\n      <p parentName=\"blockquote\">{`The ordering of the policy is very important. In this example you must create the block/drop policy on the top of the ruleset. If the policy is shadowed by other rules that allow traffic, it won't be matched and the communications will still be allowed.`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`The name of the Zones can be different in your setup, as well as the network topology. Multiple zones can be present.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"step-3-commit-the-configuration\"\n    }}>{`Step 3: Commit the configuration`}</h3>\n    <p>{`Now that the DAG and the policy have been created, you can `}<strong parentName=\"p\">{`Commit`}</strong>{` the configuration:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/img/11-commit.png\",\n        \"alt\": \"Commit\",\n        \"title\": \"Commit\"\n      }}></img></p>\n    <p>{`The Firewall configuration has been completed! No further commits are required by the IP registration process.`}</p>\n    <h3 {...{\n      \"id\": \"step-4-obtain-the-firewall-api-key\"\n    }}>{`Step 4: Obtain the Firewall API Key`}</h3>\n    <p>{`It is now time to start interacting with the PAN-OS APIs. If you're able to connect to the Firewall management interface as admin, you should also be able to issue commands via the API. If you run into issues, please check if `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/xmlapi_qs\"\n      }}>{`API access is enabled`}</a>{` for your role. After that, you can generate an API key using the `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/xmlapi_qs#get-your-api-key\"\n      }}>{`XML API`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/panpython_apikey\"\n      }}>{`pan-python`}</a>{`.`}</p>\n    <p>{`The API authentication is based on an API Key which is derived from your credentials (username, password and a firewall master key). The API Key doesn't change unless the credentials change, so you can reuse it for subsequent calls. Make sure you store it securely and don't leave it behind in the source code of your scripts.`}</p>\n    <p>{`More information on the API Key is available `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.paloaltonetworks.com/pan-os/9-0/pan-os-panorama-api/get-started-with-the-pan-os-xml-api/get-your-api-key.html\"\n      }}>{`here`}</a>{`.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`For more information about the PAN-OS XML API, please refer to the `}<a parentName=\"p\" {...{\n          \"href\": \"https://docs.paloaltonetworks.com/pan-os/9-0/pan-os-panorama-api/get-started-with-the-pan-os-xml-api.html\"\n        }}>{`official documentation`}</a>{` or follow the `}<a parentName=\"p\" {...{\n          \"href\": \"/docs/xmlapi_qs\"\n        }}>{`quickstart`}</a>{`.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"step-5-tag-ip-addresses\"\n    }}>{`Step 5: Tag IP addresses`}</h3>\n    <p>{`To tag IP Addresses using the XML API, you must invoke the Firewall API endpoint with the following parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`HTTP Method: `}<inlineCode parentName=\"li\">{`POST`}</inlineCode></li>\n      <li parentName=\"ul\">{`URL: `}<inlineCode parentName=\"li\">{`/api`}</inlineCode></li>\n      <li parentName=\"ul\">{`URL Parameters:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`type`}</strong>{`: `}<inlineCode parentName=\"li\">{`user-id`}</inlineCode></li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`key`}</strong>{`: `}<inlineCode parentName=\"li\">{`your API Key`}</inlineCode></li>\n        </ul></li>\n      <li parentName=\"ul\">{`POST Parameters:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`cmd`}</strong>{`: `}<inlineCode parentName=\"li\">{`XML document with registration information`}</inlineCode></li>\n        </ul></li>\n      <li parentName=\"ul\">{`Headers:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Content-Type`}</strong>{`: `}<inlineCode parentName=\"li\">{`application/x-www-form-urlencoded`}</inlineCode></li>\n        </ul></li>\n    </ul>\n    <p>{`You will need to craft an XML document similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<uid-message>\n  <type>update</type>\n  <payload>\n    <register>\n      <entry ip=\"10.0.0.1\" persistent=\"1\">\n        <tag>\n          <member timeout=\"0\">malicious</member>\n        </tag>\n      </entry>\n      <entry ip=\"10.0.0.2\" persistent=\"0\">\n        <tag>\n          <member timeout=\"3600\">malicious</member>\n        </tag>\n      </entry>\n    </register>\n  </payload>\n</uid-message>\n`}</code></pre>\n    <p>{`The following rules apply:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`For each IP address you want to register, you can specify multiple `}<em parentName=\"li\">{`tags`}</em>{`.`}</li>\n      <li parentName=\"ul\">{`Only single IP Addresses are supported (no CIDRs/Ranges)`}</li>\n      <li parentName=\"ul\">{`For each IP address, you can specify the optional `}<strong parentName=\"li\">{`persistent`}</strong>{` parameter. The default is `}<em parentName=\"li\">{`1`}</em>{`, which means that the tagging will survive reboots of the Firewall.`}</li>\n      <li parentName=\"ul\">{`Starting from PAN-OS 9.0, for each tag, you can specify the optional `}<strong parentName=\"li\">{`timeout`}</strong>{` parameter, to specify the expiration in seconds of the tag. The default is `}<em parentName=\"li\">{`0`}</em>{`, which means 'never expire'. The maximum value is `}<em parentName=\"li\">{`2592000`}</em>{` (30 days).`}</li>\n    </ul>\n    <p>{`The document above applies the `}<em parentName=\"p\">{`malicious`}</em>{` tag to IP addresses `}<inlineCode parentName=\"p\">{`10.0.0.1`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`10.0.0.2`}</inlineCode>{`, the first in a `}<em parentName=\"p\">{`persistent`}</em>{` way with no expiration, the latter in a `}<em parentName=\"p\">{`non-persistent`}</em>{` way with an automatic expiration time of 1 hour.`}</p>\n    <p>{`You can now push the document to the PAN-OS XML API to register the IPs.`}</p>\n    <h4 {...{\n      \"id\": \"method-1-curl\"\n    }}>{`Method 1: curl`}</h4>\n    <p>{`Create a document, similar to the one above, called `}<inlineCode parentName=\"p\">{`uid-register.xml`}</inlineCode>{`.`}</p>\n    <p>{`Then call `}<strong parentName=\"p\">{`curl`}</strong>{` with the following parameters:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -k -X POST 'https://<your_firewall_url>/api/?type=user-id&key=<your_api_key>' --data-urlencode cmd@uid-register.xml\n`}</code></pre>\n    <p>{`The successful response will be similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<response status=\"success\">\n  <result>\n    <uid-response>\n      <version>2.0</version>\n        <payload>\n          <register></register>\n        </payload>\n    </uid-response>\n  </result>\n</response>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"method-2-pan-python\"\n    }}>{`Method 2: pan-python`}</h4>\n    <p>{`Create a document, similar to the one above, called `}<inlineCode parentName=\"p\">{`uid-register.xml`}</inlineCode>{`.`}</p>\n    <p>{`Then use `}<em parentName=\"p\">{`panxapi.py`}</em>{` to set the tags:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`panxapi.py -U uid-register.xml -h <yout_firewall_ip> -K <your_api_key>\n`}</code></pre>\n    <p>{`Example output:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`dynamic-update: success\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"step-6-verify\"\n    }}>{`Step 6: Verify`}</h3>\n    <p>{`To verify the successful tagging, you can either use the UI or the CLI. If the membership is correct, it means that the Dynamic Address Group has been populated with the IPs you tagged.`}</p>\n    <p>{`You should also test some network connections to make sure that the traffic is blocked and the dropped connections show up in the `}<em parentName=\"p\">{`Traffic`}</em>{` logs: if the traffic is not blocked, it might be a problem within the Security Policy configuration (i.e. another policy shadowing the one you created).`}</p>\n    <h4 {...{\n      \"id\": \"method-1-web-ui\"\n    }}>{`Method 1: Web UI`}</h4>\n    <p>{`After logging on the Firewall Web UI as admin, navigate on `}<strong parentName=\"p\">{`Objects`}</strong>{` - `}<strong parentName=\"p\">{`Dynamic Groups`}</strong>{`. Locate the DAG you previously created (`}<em parentName=\"p\">{`testBlock`}</em>{` in the example). Under the `}<em parentName=\"p\">{`Addresses`}</em>{` column, click on `}<strong parentName=\"p\">{`more...`}</strong></p>\n    <p>{`If successful, it will display the IP addresses currently associated with the DAG, as shown in the following screenshot:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/img/12-checkdag.png\",\n        \"alt\": \"Successful IP Registration\",\n        \"title\": \"Successful IP Registration\"\n      }}></img></p>\n    <h4 {...{\n      \"id\": \"method-2-cli\"\n    }}>{`Method 2: CLI`}</h4>\n    <p>{`You can login on the Firewall via SSH as admin and run the following commands to check if the DAGs have been populated successfully and the IPs have been tagged:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`show object dynamic-address-group all`}</inlineCode>{` to check the DAG membership`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`show object registered-ip all`}</inlineCode>{` to check the IP tagging`}</li>\n    </ul>\n    <p>{`Check DAG membership:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`show object dynamic-address-group all\n`}</code></pre>\n    <p>{`Example output:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-console\"\n      }}>{`Dynamic address groups in vsys vsys1:\n----------------------------------------------------\n\n----------------defined in vsys --------------------\n        testBlock\n                filter: 'malicious'\n\n                        10.0.0.1 (R)\n                        10.0.0.2 (R)\n                members: total 2\n\n----------------defined in shared-------------------\nO: address object; R: registered ip; D: dynamic group; S: static group\n`}</code></pre>\n    <p>{`Check ip tagging:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`show object registered-ip all\n`}</code></pre>\n    <p>{`Example output:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-console\"\n      }}>{`registered IP                             Tags\n----------------------------------------  -----------------\n\n10.0.0.1 #\n                                         \"malicious (never expire)\"\n\n10.0.0.2\n                                         \"malicious (expire in 2980 seconds)\"\n\nTotal: 2 registered addresses\n*: received from user-id agent  #: persistent\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`For the `}<inlineCode parentName=\"p\">{`10.0.0.2`}</inlineCode>{` note the expiration time and the non persistency.`}</p>\n    </blockquote>\n    <h4 {...{\n      \"id\": \"method-3-using-the-xml-api\"\n    }}>{`Method 3: using the XML API`}</h4>\n    <p>{`You can also issue the same CLI commands using an `}<strong parentName=\"p\">{`operational commands`}</strong>{` XML API request.`}</p>\n    <p>{`Here are some examples using `}<em parentName=\"p\">{`curl`}</em>{`:`}</p>\n    <p><strong parentName=\"p\">{`Dynamic Address Groups:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -k -X POST 'https://<your_firewall_ip>/api/?type=op&key=<your_api_key>&cmd=<show><object><dynamic-address-group><all></all></dynamic-address-group></object></show>'\n`}</code></pre>\n    <p>{`The output will be similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<response cmd=\"status\" status=\"success\">\n  <result>\n    <dyn-addr-grp>\n      <entry>\n        <vsys>vsys1</vsys>\n        <group-name>testBlock</group-name>\n        <filter>'malicious'</filter>\n        <member-list>\n          <entry name=\"10.0.0.1\" type=\"registered-ip\"/>\n          <entry name=\"10.0.0.2\" type=\"registered-ip\"/>\n        </member-list>\n      </entry>\n    </dyn-addr-grp>\n  </result>\n  </response>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Registered IPs:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -k -X POST 'https://<your_firewall_ip>/api/?type=op&key=<your_api_key>&cmd=<show><object><registered-ip><all></all></registered-ip></object></show>'\n`}</code></pre>\n    <p>{`The output will be similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<response status=\"success\">\n  <result>\n    <entry ip=\"10.0.0.1\" from_agent=\"0\" persistent=\"1\">\n      <tag>\n        <member>malicious</member>\n      </tag>\n    </entry>\n    <entry ip=\"10.0.0.2\" from_agent=\"0\" persistent=\"0\">\n      <tag>\n        <member>malicious</member>\n      </tag>\n    </entry>\n    <count>2</count>\n  </result>\n</response>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"step-7-untag-ip-addresses\"\n    }}>{`Step 7: Untag IP addresses`}</h3>\n    <p>{`If you want to remove the tags from existing IP addresses, the procedure is very similar. Just create an XML document with `}<strong parentName=\"p\">{`unregister`}</strong>{` commands as part of the `}<strong parentName=\"p\">{`payload`}</strong>{`.`}</p>\n    <p>{`The following example will unregister both IP addresses registered in the previous steps:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<uid-message>\n  <type>update</type>\n  <payload>\n    <unregister>\n      <entry ip=\"10.0.0.1\">\n        <tag>\n          <member>malicious</member>\n        </tag>\n      </entry>\n      <entry ip=\"10.0.0.2\">\n        <tag>\n          <member>malicious</member>\n        </tag>\n      </entry>\n    </unregister>\n  </payload>\n</uid-message>\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`You can also mix registration and unregistration messages in the same XML document.`}</p>\n    </blockquote>\n    <p>{`You can now push the document to the PAN-OS XML API in the same way as before.`}</p>\n    <h4 {...{\n      \"id\": \"method-1-curl-1\"\n    }}>{`Method 1: curl`}</h4>\n    <p>{`Create a document, similar to the one above, called `}<inlineCode parentName=\"p\">{`uid-unregister.xml`}</inlineCode>{`.`}</p>\n    <p>{`Then run `}<strong parentName=\"p\">{`curl`}</strong>{` with the following parameters:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -k -X POST 'https://<your_firewall_url>/api/?type=user-id&key=<your_api_key>' --data-urlencode cmd@uid-unregister.xml\n`}</code></pre>\n    <p>{`The successful response will be similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<response status=\"success\">\n  <result>\n    <uid-response>\n      <version>2.0</version>\n        <payload>\n          <unregister></unregister>\n        </payload>\n    </uid-response>\n  </result>\n</response>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"method-2-pan-python-1\"\n    }}>{`Method 2: pan-python`}</h4>\n    <p>{`Create a document, similar to the one above, called `}<inlineCode parentName=\"p\">{`uid-unregister.xml`}</inlineCode>{`.`}</p>\n    <p>{`Then use `}<em parentName=\"p\">{`panxapi.py`}</em>{` to unset the tags:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`panxapi.py -U uid-unregister.xml -h <your_firewall_ip> -K <your_api_key>\n`}</code></pre>\n    <p>{`Example output:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-console\"\n      }}>{`dynamic-update: success\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"conclusion\"\n    }}>{`Conclusion`}</h2>\n    <p>{`In this QuickStart we demonstrated how to perform dynamic blacklisting (or whitelisting) of IP addresses using Palo Alto Networks Next-Generation Firewalls.`}</p>\n    <p>{`Specifically, you learned how to:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Create Dynamic Address Groups (DAGs) based on tags`}</li>\n      <li parentName=\"ul\">{`Create Security Policies that leverage DAGs to block specific traffic`}</li>\n      <li parentName=\"ul\">{`Use the PAN-OS XML API to:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Obtain an API Key to programmatically access the Firewalls`}</li>\n          <li parentName=\"ul\">{`Associate Tags to IPs`}</li>\n          <li parentName=\"ul\">{`Verify the successful association of tags to IPs`}</li>\n          <li parentName=\"ul\">{`Disassociate Tags from IPs`}</li>\n        </ul></li>\n    </ul>\n    <p>{`We hope you enjoyed this guide. Please provide feedback and suggestions in order for us to improve the content.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}