{"remainingRequest":"/Users/sserrata/projects/cortex.pan.dev/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/sserrata/projects/cortex.pan.dev/docs/panpython_op.md","dependencies":[{"path":"/Users/sserrata/projects/cortex.pan.dev/docs/panpython_op.md","mtime":1573238912200},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/cache-loader/dist/cjs.js","mtime":1571778479501},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/babel-loader/lib/index.js","mtime":1571778479497},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1573222772737},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1573222772389}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0KCmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnOwpleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXIgPSB7CiAgaWQ6ICdwYW5weXRob25fb3AnLAogIHRpdGxlOiAnT3BlcmF0aW9uYWwgQ29tbWFuZHMnLAogIHNpZGViYXJfbGFiZWw6ICdPcGVyYXRpb25hbCBDb21tYW5kcycsCiAgaGlkZV90aXRsZTogZmFsc2UsCiAgZGVzY3JpcHRpb246ICdQZXJmb3JtaW5nIG9wZXJhdGlvbmFsIGNvbW1hbmRzIHdpdGggcGFuLXB5dGhvbicsCiAga2V5d29yZHM6IFsncGFuLW9zJywgJ3Bhbm9zJywgJ3htbCcsICdhcGknLCAncXVpY2tzdGFydCcsICdwYW4tcHl0aG9uJywgJ3NkaycsICdhcGlrZXknLCAna2V5JywgJ3B5dGhvbicsICdvcCcsICdvcGVyYXRpb25hbCddLAogIGltYWdlOiAnL2ltZy9wYW5vc19hcGlzLnN2ZycKfTsKLyogQGpzeCBtZHggKi8KCmV4cG9ydCBjb25zdCByaWdodFRvYyA9IFt7CiAgdmFsdWU6ICdPcGVyYXRpb25hbCBDb21tYW5kcycsCiAgaWQ6ICdvcGVyYXRpb25hbC1jb21tYW5kcycsCiAgY2hpbGRyZW46IFtdCn0sIHsKICB2YWx1ZTogJ1Nob3cgU3lzdGVtIEluZm8nLAogIGlkOiAnc2hvdy1zeXN0ZW0taW5mbycsCiAgY2hpbGRyZW46IFtdCn1dOwoKY29uc3QgbWFrZVNob3J0Y29kZSA9IG5hbWUgPT4gZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcykgewogIGNvbnNvbGUud2FybigiQ29tcG9uZW50ICIgKyBuYW1lICsgIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7CiAgcmV0dXJuIG1keCgiZGl2IiwgcHJvcHMpOwp9OwoKY29uc3QgbGF5b3V0UHJvcHMgPSB7CiAgcmlnaHRUb2MKfTsKY29uc3QgTURYTGF5b3V0ID0gIndyYXBwZXIiOwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHsKICBjb21wb25lbnRzLAogIC4uLnByb3BzCn0pIHsKICByZXR1cm4gbWR4KE1EWExheW91dCwgX2V4dGVuZHMoe30sIGxheW91dFByb3BzLCBwcm9wcywgewogICAgY29tcG9uZW50czogY29tcG9uZW50cywKICAgIG1keFR5cGU6ICJNRFhMYXlvdXQiCiAgfSksIG1keCgiaDIiLCB7CiAgICAiaWQiOiAib3BlcmF0aW9uYWwtY29tbWFuZHMiCiAgfSwgIk9wZXJhdGlvbmFsIENvbW1hbmRzIiksIG1keCgicCIsIG51bGwsICJUaGUgIiwgbWR4KCJzdHJvbmciLCB7CiAgICBwYXJlbnROYW1lOiAicCIKICB9LCAicGFueGFwaS5weSIpLCAiICIsIG1keCgic3Ryb25nIiwgewogICAgcGFyZW50TmFtZTogInAiCiAgfSwgIi1vIiksICIgb3B0aW9uIHBlcmZvcm1zIHRoZSAiLCBtZHgoImlubGluZUNvZGUiLCB7CiAgICBwYXJlbnROYW1lOiAicCIKICB9LCAidHlwZT1vcCIpLCAiIEFQSSByZXF1ZXN0IHRvXG5leGVjdXRlIG9wZXJhdGlvbmFsIGNvbW1hbmRzIChDTEkpLiBUaGUgY29tbWFuZCBpcyBzcGVjaWZpZWQgd2l0aCB0aGVcbiIsIG1keCgiZW0iLCB7CiAgICBwYXJlbnROYW1lOiAicCIKICB9LCAiY21kIiksICIgYXJndW1lbnQsIHdoaWNoIGlzIGFuIFhNTCByZXByZXNlbnRhdGlvbiBvZiB0aGUgY29tbWFuZCBsaW5lLiBUaGVcbiIsIG1keCgic3Ryb25nIiwgewogICAgcGFyZW50TmFtZTogInAiCiAgfSwgIi1YIiksICIgb3B0aW9uIGNvbnZlcnRzIGEgQ0xJLXN0eWxlICIsIG1keCgiZW0iLCB7CiAgICBwYXJlbnROYW1lOiAicCIKICB9LCAiY21kIiksICIgYXJndW1lbnQgdG8gWE1MIChpbiBzb21lIGNhc2VzXG50aGUgZXhwZWN0ZWQgWE1MIGRvY3VtZW50IGNhbm5vdCBiZSBkZXJpdmVkKS4iKSwgbWR4KCJoMiIsIHsKICAgICJpZCI6ICJzaG93LXN5c3RlbS1pbmZvIgogIH0sICJTaG93IFN5c3RlbSBJbmZvIiksIG1keCgicHJlIiwgbnVsbCwgbWR4KCJjb2RlIiwgX2V4dGVuZHMoewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7fSksICJwYW54YXBpLnB5IC1YanJvICdzaG93IHN5c3RlbSBpbmZvJ1xuIikpLCBtZHgoInAiLCBudWxsLCAiRXhhbXBsZSBvdXRwdXQ6IiksIG1keCgicHJlIiwgbnVsbCwgbWR4KCJjb2RlIiwgX2V4dGVuZHMoewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7fSksICJvcDogc3VjY2Vzc1xue1xuICBcInN5c3RlbVwiOiB7XG4gICAgXCJhcHAtcmVsZWFzZS1kYXRlXCI6IFwiMjAxOC8wMy8yMCAxNTo1NzoyMSBQRFRcIixcbiAgICBcImFwcC12ZXJzaW9uXCI6IFwiNzkzLTQ1OTRcIixcbiAgICBcImF2LXJlbGVhc2UtZGF0ZVwiOiBcIjIwMTgvMDMvMjUgMDk6NTg6MjIgUERUXCIsXG4gICAgXCJhdi12ZXJzaW9uXCI6IFwiMjU2MC0zMDU2XCIsXG4gICAgXCJjbG91ZC1tb2RlXCI6IFwibm9uLWNsb3VkXCIsXG4gICAgXCJkZWZhdWx0LWdhdGV3YXlcIjogXCIxOTIuMTY4LjEuMjU0XCIsXG4gICAgXCJkZXZpY2VuYW1lXCI6IFwiUEEtVk1cIixcbiAgICBcImZhbWlseVwiOiBcInZtXCIsXG4gICAgXCJnbG9iYWwtcHJvdGVjdC1jbGllbnQtcGFja2FnZS12ZXJzaW9uXCI6IFwiMC4wLjBcIixcbiAgICBcImdsb2JhbC1wcm90ZWN0LWNsaWVudGxlc3MtdnBuLXJlbGVhc2UtZGF0ZVwiOiBudWxsLFxuICAgIFwiZ2xvYmFsLXByb3RlY3QtY2xpZW50bGVzcy12cG4tdmVyc2lvblwiOiBcIjBcIixcbiAgICBcImdsb2JhbC1wcm90ZWN0LWRhdGFmaWxlLXJlbGVhc2UtZGF0ZVwiOiBcInVua25vd25cIixcbiAgICBcImdsb2JhbC1wcm90ZWN0LWRhdGFmaWxlLXZlcnNpb25cIjogXCJ1bmtub3duXCIsXG4gICAgXCJob3N0bmFtZVwiOiBcIlBBLVZNXCIsXG4gICAgXCJpcC1hZGRyZXNzXCI6IFwiMTkyLjE2OC4xLjEwM1wiLFxuICAgIFwiaXB2Ni1hZGRyZXNzXCI6IFwidW5rbm93blwiLFxuICAgIFwiaXB2Ni1kZWZhdWx0LWdhdGV3YXlcIjogbnVsbCxcbiAgICBcImlwdjYtbGluay1sb2NhbC1hZGRyZXNzXCI6IFwiZmU4MDo6MjBjOjI5ZmY6ZmUxMDpiNmEvNjRcIixcbiAgICBcImlzLWRoY3BcIjogZmFsc2UsXG4gICAgXCJsb2dkYi12ZXJzaW9uXCI6IFwiOC4xLjhcIixcbiAgICBcIm1hYy1hZGRyZXNzXCI6IFwiMDA6MGM6Mjk6MTA6MGI6NmFcIixcbiAgICBcIm1vZGVsXCI6IFwiUEEtVk1cIixcbiAgICBcIm11bHRpLXZzeXNcIjogXCJvZmZcIixcbiAgICBcIm5ldG1hc2tcIjogXCIyNTUuMjU1LjI1NS4wXCIsXG4gICAgXCJvcGVyYXRpb25hbC1tb2RlXCI6IFwibm9ybWFsXCIsXG4gICAgXCJwbGF0Zm9ybS1mYW1pbHlcIjogXCJ2bVwiLFxuICAgIFwicHVibGljLWlwLWFkZHJlc3NcIjogXCJ1bmtub3duXCIsXG4gICAgXCJzZXJpYWxcIjogXCIwMTUzNTEwMDAwMDYzODhcIixcbiAgICBcInN3LXZlcnNpb25cIjogXCI4LjEuMFwiLFxuICAgIFwidGhyZWF0LXJlbGVhc2UtZGF0ZVwiOiBcIjIwMTgvMDMvMjAgMTU6NTc6MjEgUERUXCIsXG4gICAgXCJ0aHJlYXQtdmVyc2lvblwiOiBcIjc5My00NTk0XCIsXG4gICAgXCJ0aW1lXCI6IFwiVGh1IEFwciAgNSAxNzoyNDowMSAyMDE4XFxuXCIsXG4gICAgXCJ1cHRpbWVcIjogXCIyOSBkYXlzLCAyMDoxOTo1MVwiLFxuICAgIFwidXJsLWRiXCI6IFwicGFsb2FsdG9uZXR3b3Jrc1wiLFxuICAgIFwidXJsLWZpbHRlcmluZy12ZXJzaW9uXCI6IFwiMjAxODA0MDUuNDAwMDNcIixcbiAgICBcInZtLWNwdWlkXCI6IFwiRVNYOkUzMDYwNTAwRkZGQkFCMUZcIixcbiAgICBcInZtLWxpY2Vuc2VcIjogXCJWTS01MFwiLFxuICAgIFwidm0tbWFjLWJhc2VcIjogXCJFNDpBNzo0OTowQToxODowMFwiLFxuICAgIFwidm0tbWFjLWNvdW50XCI6IFwiMjU2XCIsXG4gICAgXCJ2bS1tb2RlXCI6IFwiVk1XYXJlIEVTWGlcIixcbiAgICBcInZtLXV1aWRcIjogXCI1NjREQjhCRC0zMzE1LTExMTktNTYwOC1FMzZEOEUxMDBCNkFcIixcbiAgICBcInZwbi1kaXNhYmxlLW1vZGVcIjogXCJvZmZcIixcbiAgICBcIndmLXByaXZhdGUtcmVsZWFzZS1kYXRlXCI6IFwidW5rbm93blwiLFxuICAgIFwid2YtcHJpdmF0ZS12ZXJzaW9uXCI6IFwiMFwiLFxuICAgIFwid2lsZGZpcmUtcmVsZWFzZS1kYXRlXCI6IFwiMjAxOC8wMy8yNiAwOToxNTowNiBQRFRcIixcbiAgICBcIndpbGRmaXJlLXZlcnNpb25cIjogXCIyMjk4MTMtMjMyMjQ4XCJcbiAgfVxufVxuIikpLCBtZHgoInAiLCBudWxsLCAiVGhpcyBleGFtcGxlIHVzZWQgIiwgbWR4KCJpbmxpbmVDb2RlIiwgewogICAgcGFyZW50TmFtZTogInAiCiAgfSwgIi1qciIpLCAiIHRvIHNlbGVjdCB0aGUgcmVzdWx0IGNvbnRlbnQgb2YgdGhlIHJlc3BvbnNlIGFzXG5KU09OLiBSZXNwb25zZSBvdXRwdXQgb3B0aW9ucyBpbmNsdWRlIChmcm9tICIsIG1keCgiaW5saW5lQ29kZSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIgogIH0sICJwYW54YXBpLnB5IC0taGVscCIpLCAiKToiKSwgbWR4KCJwcmUiLCBudWxsLCBtZHgoImNvZGUiLCBfZXh0ZW5kcyh7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHt9KSwgIi14ICAgICAgICAgICAgICAgICAgICBwcmludCBYTUwgcmVzcG9uc2UgdG8gc3Rkb3V0XG4tcCAgICAgICAgICAgICAgICAgICAgcHJpbnQgWE1MIHJlc3BvbnNlIGluIFB5dGhvbiB0byBzdGRvdXRcbi1qICAgICAgICAgICAgICAgICAgICBwcmludCBYTUwgcmVzcFxuIikpKTsKfQo7Ck1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOw=="},{"version":3,"sources":["/Users/sserrata/projects/cortex.pan.dev/docs/panpython_op.md"],"names":["React","mdx","frontMatter","id","title","sidebar_label","hide_title","description","keywords","image","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":";;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA,OAAO,MAAMC,WAAW,GAAG;AAC5BC,EAAAA,EAAE,EAAE,cADwB;AAE5BC,EAAAA,KAAK,EAAE,sBAFqB;AAG5BC,EAAAA,aAAa,EAAE,sBAHa;AAI5BC,EAAAA,UAAU,EAAE,KAJgB;AAK5BC,EAAAA,WAAW,EAAE,iDALe;AAM5BC,EAAAA,QAAQ,EAAE,CACT,QADS,EAET,OAFS,EAGT,KAHS,EAIT,KAJS,EAKT,YALS,EAMT,YANS,EAOT,KAPS,EAQT,QARS,EAST,KATS,EAUT,QAVS,EAWT,IAXS,EAYT,aAZS,CANkB;AAoB5BC,EAAAA,KAAK,EAAE;AApBqB,CAApB;AAsBP;;AAEF,OAAO,MAAMC,QAAQ,GAAG,CAAC;AACvBC,EAAAA,KAAK,EAAE,sBADgB;AAEvBR,EAAAA,EAAE,EAAE,sBAFmB;AAGvBS,EAAAA,QAAQ,EAAE;AAHa,CAAD,EAIrB;AACDD,EAAAA,KAAK,EAAE,kBADN;AAEDR,EAAAA,EAAE,EAAE,kBAFH;AAGDS,EAAAA,QAAQ,EAAE;AAHT,CAJqB,CAAjB;;AASP,MAAMC,aAAa,GAAGC,IAAI,IAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,EAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,SAAO,WAASE,KAAT,CAAP;AACD,CAHD;;AAKA,MAAMG,WAAW,GAAG;AAClBT,EAAAA;AADkB,CAApB;AAGA,MAAMU,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,CAAoB;AACjCC,EAAAA,UADiC;AAEjC,KAAGN;AAF8B,CAApB,EAGZ;AACD,SAAO,IAAC,SAAD,eAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC;AAAvE,MAEL,UAAQ;AACN,UAAM;AADA,GAAR,yBAFK,EAKL,uBAAW;AAAQ,IAAA,UAAU,EAAC;AAAnB,kBAAX,OAA8D;AAAQ,IAAA,UAAU,EAAC;AAAnB,UAA9D,2BAA6H;AAAY,IAAA,UAAU,EAAC;AAAvB,eAA7H,8FAEF;AAAI,IAAA,UAAU,EAAC;AAAf,WAFE,0EAGF;AAAQ,IAAA,UAAU,EAAC;AAAnB,UAHE,mCAGqE;AAAI,IAAA,UAAU,EAAC;AAAf,WAHrE,mFALK,EAUL,UAAQ;AACN,UAAM;AADA,GAAR,qBAVK,EAaL,iBAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B,2CAAL,CAbK,EAeL,iCAfK,EAgBL,iBAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B,+8DAAL,CAhBK,EAoEL,qCAAyB;AAAY,IAAA,UAAU,EAAC;AAAvB,WAAzB,oGAC0C;AAAY,IAAA,UAAU,EAAC;AAAvB,yBAD1C,OApEK,EAsEL,iBAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B,8JAAL,CAtEK,CAAP;AA2ED;AAED;AACAD,UAAU,CAACE,cAAX,GAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'panpython_op',\n\ttitle: 'Operational Commands',\n\tsidebar_label: 'Operational Commands',\n\thide_title: false,\n\tdescription: 'Performing operational commands with pan-python',\n\tkeywords: [\n\t\t'pan-os',\n\t\t'panos',\n\t\t'xml',\n\t\t'api',\n\t\t'quickstart',\n\t\t'pan-python',\n\t\t'sdk',\n\t\t'apikey',\n\t\t'key',\n\t\t'python',\n\t\t'op',\n\t\t'operational'\n\t],\n\timage: '/img/panos_apis.svg'\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Operational Commands',\n  id: 'operational-commands',\n  children: []\n}, {\n  value: 'Show System Info',\n  id: 'show-system-info',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"operational-commands\"\n    }}>{`Operational Commands`}</h2>\n    <p>{`The `}<strong parentName=\"p\">{`panxapi.py`}</strong>{` `}<strong parentName=\"p\">{`-o`}</strong>{` option performs the `}<inlineCode parentName=\"p\">{`type=op`}</inlineCode>{` API request to\nexecute operational commands (CLI). The command is specified with the\n`}<em parentName=\"p\">{`cmd`}</em>{` argument, which is an XML representation of the command line. The\n`}<strong parentName=\"p\">{`-X`}</strong>{` option converts a CLI-style `}<em parentName=\"p\">{`cmd`}</em>{` argument to XML (in some cases\nthe expected XML document cannot be derived).`}</p>\n    <h2 {...{\n      \"id\": \"show-system-info\"\n    }}>{`Show System Info`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`panxapi.py -Xjro 'show system info'\n`}</code></pre>\n    <p>{`Example output:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`op: success\n{\n  \"system\": {\n    \"app-release-date\": \"2018/03/20 15:57:21 PDT\",\n    \"app-version\": \"793-4594\",\n    \"av-release-date\": \"2018/03/25 09:58:22 PDT\",\n    \"av-version\": \"2560-3056\",\n    \"cloud-mode\": \"non-cloud\",\n    \"default-gateway\": \"192.168.1.254\",\n    \"devicename\": \"PA-VM\",\n    \"family\": \"vm\",\n    \"global-protect-client-package-version\": \"0.0.0\",\n    \"global-protect-clientless-vpn-release-date\": null,\n    \"global-protect-clientless-vpn-version\": \"0\",\n    \"global-protect-datafile-release-date\": \"unknown\",\n    \"global-protect-datafile-version\": \"unknown\",\n    \"hostname\": \"PA-VM\",\n    \"ip-address\": \"192.168.1.103\",\n    \"ipv6-address\": \"unknown\",\n    \"ipv6-default-gateway\": null,\n    \"ipv6-link-local-address\": \"fe80::20c:29ff:fe10:b6a/64\",\n    \"is-dhcp\": false,\n    \"logdb-version\": \"8.1.8\",\n    \"mac-address\": \"00:0c:29:10:0b:6a\",\n    \"model\": \"PA-VM\",\n    \"multi-vsys\": \"off\",\n    \"netmask\": \"255.255.255.0\",\n    \"operational-mode\": \"normal\",\n    \"platform-family\": \"vm\",\n    \"public-ip-address\": \"unknown\",\n    \"serial\": \"015351000006388\",\n    \"sw-version\": \"8.1.0\",\n    \"threat-release-date\": \"2018/03/20 15:57:21 PDT\",\n    \"threat-version\": \"793-4594\",\n    \"time\": \"Thu Apr  5 17:24:01 2018\\\\n\",\n    \"uptime\": \"29 days, 20:19:51\",\n    \"url-db\": \"paloaltonetworks\",\n    \"url-filtering-version\": \"20180405.40003\",\n    \"vm-cpuid\": \"ESX:E3060500FFFBAB1F\",\n    \"vm-license\": \"VM-50\",\n    \"vm-mac-base\": \"E4:A7:49:0A:18:00\",\n    \"vm-mac-count\": \"256\",\n    \"vm-mode\": \"VMWare ESXi\",\n    \"vm-uuid\": \"564DB8BD-3315-1119-5608-E36D8E100B6A\",\n    \"vpn-disable-mode\": \"off\",\n    \"wf-private-release-date\": \"unknown\",\n    \"wf-private-version\": \"0\",\n    \"wildfire-release-date\": \"2018/03/26 09:15:06 PDT\",\n    \"wildfire-version\": \"229813-232248\"\n  }\n}\n`}</code></pre>\n    <p>{`This example used `}<inlineCode parentName=\"p\">{`-jr`}</inlineCode>{` to select the result content of the response as\nJSON. Response output options include (from `}<inlineCode parentName=\"p\">{`panxapi.py --help`}</inlineCode>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`-x                    print XML response to stdout\n-p                    print XML response in Python to stdout\n-j                    print XML resp\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}