{"remainingRequest":"/Users/sserrata/projects/cortex.pan.dev/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/theme-live-codeblock/src/theme/CodeBlock/index.js","dependencies":[{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/theme-live-codeblock/src/theme/CodeBlock/index.js","mtime":1573224384488},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/cache-loader/dist/cjs.js","mtime":1571778479501},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/babel-loader/lib/index.js","mtime":1571778479497}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0KCi8qKgogKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy4KICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlCiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovCmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7CmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnOwppbXBvcnQgSGlnaGxpZ2h0LCB7IGRlZmF1bHRQcm9wcyB9IGZyb20gJ3ByaXNtLXJlYWN0LXJlbmRlcmVyJzsKaW1wb3J0IGRlZmF1bHRUaGVtZSBmcm9tICdwcmlzbS1yZWFjdC1yZW5kZXJlci90aGVtZXMvcGFsZW5pZ2h0JzsKaW1wb3J0IENsaXBib2FyZCBmcm9tICdjbGlwYm9hcmQnOwppbXBvcnQgcmFuZ2VQYXJzZXIgZnJvbSAncGFyc2UtbnVtZXJpYy1yYW5nZSc7CmltcG9ydCB1c2VEb2N1c2F1cnVzQ29udGV4dCBmcm9tICdAZG9jdXNhdXJ1cy91c2VEb2N1c2F1cnVzQ29udGV4dCc7CmltcG9ydCBQbGF5Z3JvdW5kIGZyb20gJ0B0aGVtZS9QbGF5Z3JvdW5kJzsKaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlcy5tb2R1bGUuY3NzJzsKY29uc3QgaGlnaGxpZ2h0TGluZXNSYW5nZVJlZ2V4ID0gL3soW1xkLC1dKyl9LzsKZXhwb3J0IGRlZmF1bHQgKCh7CiAgY2hpbGRyZW4sCiAgY2xhc3NOYW1lOiBsYW5ndWFnZUNsYXNzTmFtZSwKICBsaXZlLAogIG1ldGFzdHJpbmcsCiAgLi4ucHJvcHMKfSkgPT4gewogIGNvbnN0IHsKICAgIHNpdGVDb25maWc6IHsKICAgICAgdGhlbWVDb25maWc6IHsKICAgICAgICBwcmlzbSA9IHt9CiAgICAgIH0KICAgIH0KICB9ID0gdXNlRG9jdXNhdXJ1c0NvbnRleHQoKTsKICBjb25zdCBbc2hvd0NvcGllZCwgc2V0U2hvd0NvcGllZF0gPSB1c2VTdGF0ZShmYWxzZSk7CiAgY29uc3QgdGFyZ2V0ID0gdXNlUmVmKG51bGwpOwogIGNvbnN0IGJ1dHRvbiA9IHVzZVJlZihudWxsKTsKICBsZXQgaGlnaGxpZ2h0TGluZXMgPSBbXTsKCiAgaWYgKG1ldGFzdHJpbmcgJiYgaGlnaGxpZ2h0TGluZXNSYW5nZVJlZ2V4LnRlc3QobWV0YXN0cmluZykpIHsKICAgIGNvbnN0IGhpZ2hsaWdodExpbmVzUmFuZ2UgPSBtZXRhc3RyaW5nLm1hdGNoKGhpZ2hsaWdodExpbmVzUmFuZ2VSZWdleClbMV07CiAgICBoaWdobGlnaHRMaW5lcyA9IHJhbmdlUGFyc2VyLnBhcnNlKGhpZ2hsaWdodExpbmVzUmFuZ2UpLmZpbHRlcihuID0+IG4gPiAwKTsKICB9CgogIHVzZUVmZmVjdCgoKSA9PiB7CiAgICBsZXQgY2xpcGJvYXJkOwoKICAgIGlmIChidXR0b24uY3VycmVudCkgewogICAgICBjbGlwYm9hcmQgPSBuZXcgQ2xpcGJvYXJkKGJ1dHRvbi5jdXJyZW50LCB7CiAgICAgICAgdGFyZ2V0OiAoKSA9PiB0YXJnZXQuY3VycmVudAogICAgICB9KTsKICAgIH0KCiAgICByZXR1cm4gKCkgPT4gewogICAgICBpZiAoY2xpcGJvYXJkKSB7CiAgICAgICAgY2xpcGJvYXJkLmRlc3Ryb3koKTsKICAgICAgfQogICAgfTsKICB9LCBbYnV0dG9uLmN1cnJlbnQsIHRhcmdldC5jdXJyZW50XSk7CgogIGlmIChsaXZlKSB7CiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChQbGF5Z3JvdW5kLCBfZXh0ZW5kcyh7CiAgICAgIHNjb3BlOiB7IC4uLlJlYWN0CiAgICAgIH0sCiAgICAgIGNvZGU6IGNoaWxkcmVuLnRyaW0oKSwKICAgICAgdGhlbWU6IHByaXNtLnRoZW1lIHx8IGRlZmF1bHRUaGVtZQogICAgfSwgcHJvcHMpKTsKICB9CgogIGxldCBsYW5ndWFnZSA9IGxhbmd1YWdlQ2xhc3NOYW1lICYmIGxhbmd1YWdlQ2xhc3NOYW1lLnJlcGxhY2UoL2xhbmd1YWdlLS8sICcnKTsKCiAgaWYgKCFsYW5ndWFnZSAmJiBwcmlzbS5kZWZhdWx0TGFuZ3VhZ2UpIHsKICAgIGxhbmd1YWdlID0gcHJpc20uZGVmYXVsdExhbmd1YWdlOwogIH0KCiAgY29uc3QgaGFuZGxlQ29weUNvZGUgPSAoKSA9PiB7CiAgICB3aW5kb3cuZ2V0U2VsZWN0aW9uKCkuZW1wdHkoKTsKICAgIHNldFNob3dDb3BpZWQodHJ1ZSk7CiAgICBzZXRUaW1lb3V0KCgpID0+IHNldFNob3dDb3BpZWQoZmFsc2UpLCAyMDAwKTsKICB9OwoKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChIaWdobGlnaHQsIF9leHRlbmRzKHt9LCBkZWZhdWx0UHJvcHMsIHsKICAgIHRoZW1lOiBwcmlzbS50aGVtZSB8fCBkZWZhdWx0VGhlbWUsCiAgICBjb2RlOiBjaGlsZHJlbi50cmltKCksCiAgICBsYW5ndWFnZTogbGFuZ3VhZ2UKICB9KSwgKHsKICAgIGNsYXNzTmFtZSwKICAgIHN0eWxlLAogICAgdG9rZW5zLAogICAgZ2V0TGluZVByb3BzLAogICAgZ2V0VG9rZW5Qcm9wcwogIH0pID0+IFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIGNsYXNzTmFtZTogc3R5bGVzLmNvZGVCbG9ja1dyYXBwZXIKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KCJwcmUiLCB7CiAgICByZWY6IHRhcmdldCwKICAgIGNsYXNzTmFtZTogY2xhc3NuYW1lcyhjbGFzc05hbWUsIHN0eWxlcy5jb2RlQmxvY2spLAogICAgc3R5bGU6IHN0eWxlCiAgfSwgdG9rZW5zLm1hcCgobGluZSwgaSkgPT4gewogICAgY29uc3QgbGluZVByb3BzID0gZ2V0TGluZVByb3BzKHsKICAgICAgbGluZSwKICAgICAga2V5OiBpCiAgICB9KTsKCiAgICBpZiAoaGlnaGxpZ2h0TGluZXMuaW5jbHVkZXMoaSArIDEpKSB7CiAgICAgIGxpbmVQcm9wcy5jbGFzc05hbWUgPSBsaW5lUHJvcHMuY2xhc3NOYW1lICsgIiBkb2N1c2F1cnVzLWhpZ2hsaWdodC1jb2RlLWxpbmUiOwogICAgfQoKICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCBfZXh0ZW5kcyh7CiAgICAgIGtleTogaQogICAgfSwgbGluZVByb3BzKSwgbGluZS5tYXAoKHRva2VuLCBrZXkpID0+IFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCBfZXh0ZW5kcyh7CiAgICAgIGtleToga2V5CiAgICB9LCBnZXRUb2tlblByb3BzKHsKICAgICAgdG9rZW4sCiAgICAgIGtleQogICAgfSkpKSkpOwogIH0pKSwgUmVhY3QuY3JlYXRlRWxlbWVudCgiYnV0dG9uIiwgewogICAgcmVmOiBidXR0b24sCiAgICB0eXBlOiAiYnV0dG9uIiwKICAgICJhcmlhLWxhYmVsIjogIkNvcHkgY29kZSB0byBjbGlwYm9hcmQiLAogICAgY2xhc3NOYW1lOiBzdHlsZXMuY29weUJ1dHRvbiwKICAgIG9uQ2xpY2s6IGhhbmRsZUNvcHlDb2RlCiAgfSwgc2hvd0NvcGllZCA/ICdDb3BpZWQnIDogJ0NvcHknKSkpOwp9KTs="},{"version":3,"sources":["/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/theme-live-codeblock/src/theme/CodeBlock/index.js"],"names":["React","useEffect","useState","useRef","classnames","Highlight","defaultProps","defaultTheme","Clipboard","rangeParser","useDocusaurusContext","Playground","styles","highlightLinesRangeRegex","children","className","languageClassName","live","metastring","props","siteConfig","themeConfig","prism","showCopied","setShowCopied","target","button","highlightLines","test","highlightLinesRange","match","parse","filter","n","clipboard","current","destroy","trim","theme","language","replace","defaultLanguage","handleCopyCode","window","getSelection","empty","setTimeout","style","tokens","getLineProps","getTokenProps","codeBlockWrapper","codeBlock","map","line","i","lineProps","key","includes","token","copyButton"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, {useEffect, useState, useRef} from 'react';\nimport classnames from 'classnames';\nimport Highlight, {defaultProps} from 'prism-react-renderer';\nimport defaultTheme from 'prism-react-renderer/themes/palenight';\nimport Clipboard from 'clipboard';\nimport rangeParser from 'parse-numeric-range';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport Playground from '@theme/Playground';\nimport styles from './styles.module.css';\n\nconst highlightLinesRangeRegex = /{([\\d,-]+)}/;\n\nexport default ({\n  children,\n  className: languageClassName,\n  live,\n  metastring,\n  ...props\n}) => {\n  const {\n    siteConfig: {\n      themeConfig: {prism = {}},\n    },\n  } = useDocusaurusContext();\n  const [showCopied, setShowCopied] = useState(false);\n  const target = useRef(null);\n  const button = useRef(null);\n  let highlightLines = [];\n\n  if (metastring && highlightLinesRangeRegex.test(metastring)) {\n    const highlightLinesRange = metastring.match(highlightLinesRangeRegex)[1];\n    highlightLines = rangeParser.parse(highlightLinesRange).filter(n => n > 0);\n  }\n\n  useEffect(() => {\n    let clipboard;\n\n    if (button.current) {\n      clipboard = new Clipboard(button.current, {\n        target: () => target.current,\n      });\n    }\n\n    return () => {\n      if (clipboard) {\n        clipboard.destroy();\n      }\n    };\n  }, [button.current, target.current]);\n\n  if (live) {\n    return (\n      <Playground\n        scope={{...React}}\n        code={children.trim()}\n        theme={prism.theme || defaultTheme}\n        {...props}\n      />\n    );\n  }\n\n  let language =\n    languageClassName && languageClassName.replace(/language-/, '');\n\n  if (!language && prism.defaultLanguage) {\n    language = prism.defaultLanguage;\n  }\n\n  const handleCopyCode = () => {\n    window.getSelection().empty();\n    setShowCopied(true);\n\n    setTimeout(() => setShowCopied(false), 2000);\n  };\n\n  return (\n    <Highlight\n      {...defaultProps}\n      theme={prism.theme || defaultTheme}\n      code={children.trim()}\n      language={language}>\n      {({className, style, tokens, getLineProps, getTokenProps}) => (\n        <div className={styles.codeBlockWrapper}>\n          <pre\n            ref={target}\n            className={classnames(className, styles.codeBlock)}\n            style={style}>\n            {tokens.map((line, i) => {\n              const lineProps = getLineProps({line, key: i});\n\n              if (highlightLines.includes(i + 1)) {\n                lineProps.className = `${lineProps.className} docusaurus-highlight-code-line`;\n              }\n\n              return (\n                <div key={i} {...lineProps}>\n                  {line.map((token, key) => (\n                    <span key={key} {...getTokenProps({token, key})} />\n                  ))}\n                </div>\n              );\n            })}\n          </pre>\n          <button\n            ref={button}\n            type=\"button\"\n            aria-label=\"Copy code to clipboard\"\n            className={styles.copyButton}\n            onClick={handleCopyCode}>\n            {showCopied ? 'Copied' : 'Copy'}\n          </button>\n        </div>\n      )}\n    </Highlight>\n  );\n};\n"]}]}