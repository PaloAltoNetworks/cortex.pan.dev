{"remainingRequest":"/Users/sserrata/projects/cortex.pan.dev/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/theme-live-codeblock/src/theme/CodeBlock/index.js","dependencies":[{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/theme-live-codeblock/src/theme/CodeBlock/index.js","mtime":1573224384488},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/cache-loader/dist/cjs.js","mtime":1571778479501},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/babel-loader/lib/index.js","mtime":1571778479497}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2V4dGVuZHMoKXtfZXh0ZW5kcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0YXJnZXQpe2Zvcih2YXIgaT0xO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspe3ZhciBzb3VyY2U9YXJndW1lbnRzW2ldO2Zvcih2YXIga2V5IGluIHNvdXJjZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSxrZXkpKXt0YXJnZXRba2V5XT1zb3VyY2Vba2V5XTt9fX1yZXR1cm4gdGFyZ2V0O307cmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9LyoqCiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnQgUmVhY3Qse3VzZUVmZmVjdCx1c2VTdGF0ZSx1c2VSZWZ9ZnJvbSdyZWFjdCc7aW1wb3J0IGNsYXNzbmFtZXMgZnJvbSdjbGFzc25hbWVzJztpbXBvcnQgSGlnaGxpZ2h0LHtkZWZhdWx0UHJvcHN9ZnJvbSdwcmlzbS1yZWFjdC1yZW5kZXJlcic7aW1wb3J0IGRlZmF1bHRUaGVtZSBmcm9tJ3ByaXNtLXJlYWN0LXJlbmRlcmVyL3RoZW1lcy9wYWxlbmlnaHQnO2ltcG9ydCBDbGlwYm9hcmQgZnJvbSdjbGlwYm9hcmQnO2ltcG9ydCByYW5nZVBhcnNlciBmcm9tJ3BhcnNlLW51bWVyaWMtcmFuZ2UnO2ltcG9ydCB1c2VEb2N1c2F1cnVzQ29udGV4dCBmcm9tJ0Bkb2N1c2F1cnVzL3VzZURvY3VzYXVydXNDb250ZXh0JztpbXBvcnQgUGxheWdyb3VuZCBmcm9tJ0B0aGVtZS9QbGF5Z3JvdW5kJztpbXBvcnQgc3R5bGVzIGZyb20nLi9zdHlsZXMubW9kdWxlLmNzcyc7Y29uc3QgaGlnaGxpZ2h0TGluZXNSYW5nZVJlZ2V4PS97KFtcZCwtXSspfS87ZXhwb3J0IGRlZmF1bHQoKHtjaGlsZHJlbixjbGFzc05hbWU6bGFuZ3VhZ2VDbGFzc05hbWUsbGl2ZSxtZXRhc3RyaW5nLC4uLnByb3BzfSk9Pntjb25zdHtzaXRlQ29uZmlnOnt0aGVtZUNvbmZpZzp7cHJpc209e319fX09dXNlRG9jdXNhdXJ1c0NvbnRleHQoKTtjb25zdFtzaG93Q29waWVkLHNldFNob3dDb3BpZWRdPXVzZVN0YXRlKGZhbHNlKTtjb25zdCB0YXJnZXQ9dXNlUmVmKG51bGwpO2NvbnN0IGJ1dHRvbj11c2VSZWYobnVsbCk7bGV0IGhpZ2hsaWdodExpbmVzPVtdO2lmKG1ldGFzdHJpbmcmJmhpZ2hsaWdodExpbmVzUmFuZ2VSZWdleC50ZXN0KG1ldGFzdHJpbmcpKXtjb25zdCBoaWdobGlnaHRMaW5lc1JhbmdlPW1ldGFzdHJpbmcubWF0Y2goaGlnaGxpZ2h0TGluZXNSYW5nZVJlZ2V4KVsxXTtoaWdobGlnaHRMaW5lcz1yYW5nZVBhcnNlci5wYXJzZShoaWdobGlnaHRMaW5lc1JhbmdlKS5maWx0ZXIobj0+bj4wKTt9dXNlRWZmZWN0KCgpPT57bGV0IGNsaXBib2FyZDtpZihidXR0b24uY3VycmVudCl7Y2xpcGJvYXJkPW5ldyBDbGlwYm9hcmQoYnV0dG9uLmN1cnJlbnQse3RhcmdldDooKT0+dGFyZ2V0LmN1cnJlbnR9KTt9cmV0dXJuKCk9PntpZihjbGlwYm9hcmQpe2NsaXBib2FyZC5kZXN0cm95KCk7fX07fSxbYnV0dG9uLmN1cnJlbnQsdGFyZ2V0LmN1cnJlbnRdKTtpZihsaXZlKXtyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChQbGF5Z3JvdW5kLF9leHRlbmRzKHtzY29wZTp7Li4uUmVhY3R9LGNvZGU6Y2hpbGRyZW4udHJpbSgpLHRoZW1lOnByaXNtLnRoZW1lfHxkZWZhdWx0VGhlbWV9LHByb3BzKSk7fWxldCBsYW5ndWFnZT1sYW5ndWFnZUNsYXNzTmFtZSYmbGFuZ3VhZ2VDbGFzc05hbWUucmVwbGFjZSgvbGFuZ3VhZ2UtLywnJyk7aWYoIWxhbmd1YWdlJiZwcmlzbS5kZWZhdWx0TGFuZ3VhZ2Upe2xhbmd1YWdlPXByaXNtLmRlZmF1bHRMYW5ndWFnZTt9Y29uc3QgaGFuZGxlQ29weUNvZGU9KCk9Pnt3aW5kb3cuZ2V0U2VsZWN0aW9uKCkuZW1wdHkoKTtzZXRTaG93Q29waWVkKHRydWUpO3NldFRpbWVvdXQoKCk9PnNldFNob3dDb3BpZWQoZmFsc2UpLDIwMDApO307cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSGlnaGxpZ2h0LF9leHRlbmRzKHt9LGRlZmF1bHRQcm9wcyx7dGhlbWU6cHJpc20udGhlbWV8fGRlZmF1bHRUaGVtZSxjb2RlOmNoaWxkcmVuLnRyaW0oKSxsYW5ndWFnZTpsYW5ndWFnZX0pLCh7Y2xhc3NOYW1lLHN0eWxlLHRva2VucyxnZXRMaW5lUHJvcHMsZ2V0VG9rZW5Qcm9wc30pPT5SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6c3R5bGVzLmNvZGVCbG9ja1dyYXBwZXJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoInByZSIse3JlZjp0YXJnZXQsY2xhc3NOYW1lOmNsYXNzbmFtZXMoY2xhc3NOYW1lLHN0eWxlcy5jb2RlQmxvY2spLHN0eWxlOnN0eWxlfSx0b2tlbnMubWFwKChsaW5lLGkpPT57Y29uc3QgbGluZVByb3BzPWdldExpbmVQcm9wcyh7bGluZSxrZXk6aX0pO2lmKGhpZ2hsaWdodExpbmVzLmluY2x1ZGVzKGkrMSkpe2xpbmVQcm9wcy5jbGFzc05hbWU9bGluZVByb3BzLmNsYXNzTmFtZSsiIGRvY3VzYXVydXMtaGlnaGxpZ2h0LWNvZGUtbGluZSI7fXJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLF9leHRlbmRzKHtrZXk6aX0sbGluZVByb3BzKSxsaW5lLm1hcCgodG9rZW4sa2V5KT0+UmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsX2V4dGVuZHMoe2tleTprZXl9LGdldFRva2VuUHJvcHMoe3Rva2VuLGtleX0pKSkpKTt9KSksUmVhY3QuY3JlYXRlRWxlbWVudCgiYnV0dG9uIix7cmVmOmJ1dHRvbix0eXBlOiJidXR0b24iLCJhcmlhLWxhYmVsIjoiQ29weSBjb2RlIHRvIGNsaXBib2FyZCIsY2xhc3NOYW1lOnN0eWxlcy5jb3B5QnV0dG9uLG9uQ2xpY2s6aGFuZGxlQ29weUNvZGV9LHNob3dDb3BpZWQ/J0NvcGllZCc6J0NvcHknKSkpO30pOw=="},{"version":3,"sources":["/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/theme-live-codeblock/src/theme/CodeBlock/index.js"],"names":["React","useEffect","useState","useRef","classnames","Highlight","defaultProps","defaultTheme","Clipboard","rangeParser","useDocusaurusContext","Playground","styles","highlightLinesRangeRegex","children","className","languageClassName","live","metastring","props","siteConfig","themeConfig","prism","showCopied","setShowCopied","target","button","highlightLines","test","highlightLinesRange","match","parse","filter","n","clipboard","current","destroy","trim","theme","language","replace","defaultLanguage","handleCopyCode","window","getSelection","empty","setTimeout","style","tokens","getLineProps","getTokenProps","codeBlockWrapper","codeBlock","map","line","i","lineProps","key","includes","token","copyButton"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, {useEffect, useState, useRef} from 'react';\nimport classnames from 'classnames';\nimport Highlight, {defaultProps} from 'prism-react-renderer';\nimport defaultTheme from 'prism-react-renderer/themes/palenight';\nimport Clipboard from 'clipboard';\nimport rangeParser from 'parse-numeric-range';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport Playground from '@theme/Playground';\nimport styles from './styles.module.css';\n\nconst highlightLinesRangeRegex = /{([\\d,-]+)}/;\n\nexport default ({\n  children,\n  className: languageClassName,\n  live,\n  metastring,\n  ...props\n}) => {\n  const {\n    siteConfig: {\n      themeConfig: {prism = {}},\n    },\n  } = useDocusaurusContext();\n  const [showCopied, setShowCopied] = useState(false);\n  const target = useRef(null);\n  const button = useRef(null);\n  let highlightLines = [];\n\n  if (metastring && highlightLinesRangeRegex.test(metastring)) {\n    const highlightLinesRange = metastring.match(highlightLinesRangeRegex)[1];\n    highlightLines = rangeParser.parse(highlightLinesRange).filter(n => n > 0);\n  }\n\n  useEffect(() => {\n    let clipboard;\n\n    if (button.current) {\n      clipboard = new Clipboard(button.current, {\n        target: () => target.current,\n      });\n    }\n\n    return () => {\n      if (clipboard) {\n        clipboard.destroy();\n      }\n    };\n  }, [button.current, target.current]);\n\n  if (live) {\n    return (\n      <Playground\n        scope={{...React}}\n        code={children.trim()}\n        theme={prism.theme || defaultTheme}\n        {...props}\n      />\n    );\n  }\n\n  let language =\n    languageClassName && languageClassName.replace(/language-/, '');\n\n  if (!language && prism.defaultLanguage) {\n    language = prism.defaultLanguage;\n  }\n\n  const handleCopyCode = () => {\n    window.getSelection().empty();\n    setShowCopied(true);\n\n    setTimeout(() => setShowCopied(false), 2000);\n  };\n\n  return (\n    <Highlight\n      {...defaultProps}\n      theme={prism.theme || defaultTheme}\n      code={children.trim()}\n      language={language}>\n      {({className, style, tokens, getLineProps, getTokenProps}) => (\n        <div className={styles.codeBlockWrapper}>\n          <pre\n            ref={target}\n            className={classnames(className, styles.codeBlock)}\n            style={style}>\n            {tokens.map((line, i) => {\n              const lineProps = getLineProps({line, key: i});\n\n              if (highlightLines.includes(i + 1)) {\n                lineProps.className = `${lineProps.className} docusaurus-highlight-code-line`;\n              }\n\n              return (\n                <div key={i} {...lineProps}>\n                  {line.map((token, key) => (\n                    <span key={key} {...getTokenProps({token, key})} />\n                  ))}\n                </div>\n              );\n            })}\n          </pre>\n          <button\n            ref={button}\n            type=\"button\"\n            aria-label=\"Copy code to clipboard\"\n            className={styles.copyButton}\n            onClick={handleCopyCode}>\n            {showCopied ? 'Copied' : 'Copy'}\n          </button>\n        </div>\n      )}\n    </Highlight>\n  );\n};\n"]}]}