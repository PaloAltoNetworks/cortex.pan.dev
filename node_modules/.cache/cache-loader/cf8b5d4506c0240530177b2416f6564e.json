{"remainingRequest":"/Users/sserrata/projects/cortex.pan.dev/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/core/lib/client/PendingNavigation.js","dependencies":[{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/core/lib/client/PendingNavigation.js","mtime":1573222771293},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/cache-loader/dist/cjs.js","mtime":1571778479501},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/babel-loader/lib/index.js","mtime":1571778479497}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi8KaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgUm91dGUsIHdpdGhSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJzsKaW1wb3J0IG5wcm9ncmVzcyBmcm9tICducHJvZ3Jlc3MnOwppbXBvcnQgY2xpZW50TGlmZWN5Y2xlc0Rpc3BhdGNoZXIgZnJvbSAnLi9jbGllbnQtbGlmZWN5Y2xlcy1kaXNwYXRjaGVyJzsKaW1wb3J0IHByZWxvYWQgZnJvbSAnLi9wcmVsb2FkJzsKaW1wb3J0ICducHJvZ3Jlc3MvbnByb2dyZXNzLmNzcyc7Cm5wcm9ncmVzcy5jb25maWd1cmUoewogIHNob3dTcGlubmVyOiBmYWxzZQp9KTsKCmNsYXNzIFBlbmRpbmdOYXZpZ2F0aW9uIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHsKICBjb25zdHJ1Y3Rvcihwcm9wcykgewogICAgc3VwZXIocHJvcHMpOyAvLyBwcmV2aW91c0xvY2F0aW9uIGRvZXNuJ3QgYWZmZWN0IHJlbmRlcmluZywgaGVuY2Ugbm90IHN0b3JlZCBpbiBzdGF0ZS4KCiAgICB0aGlzLnByZXZpb3VzTG9jYXRpb24gPSBudWxsOwogICAgdGhpcy5wcm9ncmVzc0JhclRpbWVvdXQgPSBudWxsOwogICAgdGhpcy5zdGF0ZSA9IHsKICAgICAgbmV4dFJvdXRlSGFzTG9hZGVkOiB0cnVlCiAgICB9OwogIH0gLy8gSW50ZXJjZXB0IGxvY2F0aW9uIHVwZGF0ZSBhbmQgc3RpbGwgc2hvdyBjdXJyZW50IHJvdXRlIHVudGlsIG5leHQgcm91dGUKICAvLyBpcyBkb25lIGxvYWRpbmcuCgoKICBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzLCBuZXh0U3RhdGUpIHsKICAgIGNvbnN0IHJvdXRlRGlkQ2hhbmdlID0gbmV4dFByb3BzLmxvY2F0aW9uICE9PSB0aGlzLnByb3BzLmxvY2F0aW9uOwogICAgY29uc3QgewogICAgICByb3V0ZXMsCiAgICAgIGRlbGF5ID0gMTAwMAogICAgfSA9IHRoaXMucHJvcHM7IC8vIElmIGByb3V0ZURpZENoYW5nZWAgaXMgdHJ1ZSwgbWVhbnMgdGhlIHJvdXRlciBpcyB0cnlpbmcgdG8gbmF2aWdhdGUgdG8gYSBuZXcKICAgIC8vIHJvdXRlLiBXZSB3aWxsIHByZWxvYWQgdGhlIG5ldyByb3V0ZS4KCiAgICBpZiAocm91dGVEaWRDaGFuZ2UpIHsKICAgICAgdGhpcy5zdGFydFByb2dyZXNzQmFyKGRlbGF5KTsgLy8gU2F2ZSB0aGUgbG9jYXRpb24gZmlyc3QuCgogICAgICB0aGlzLnByZXZpb3VzTG9jYXRpb24gPSB0aGlzLnByb3BzLmxvY2F0aW9uOwogICAgICB0aGlzLnNldFN0YXRlKHsKICAgICAgICBuZXh0Um91dGVIYXNMb2FkZWQ6IGZhbHNlCiAgICAgIH0pOyAvLyBMb2FkIGRhdGEgd2hpbGUgdGhlIG9sZCBzY3JlZW4gcmVtYWlucy4KCiAgICAgIHByZWxvYWQocm91dGVzLCBuZXh0UHJvcHMubG9jYXRpb24ucGF0aG5hbWUpLnRoZW4oKCkgPT4gewogICAgICAgIGNsaWVudExpZmVjeWNsZXNEaXNwYXRjaGVyLm9uUm91dGVVcGRhdGUoewogICAgICAgICAgcHJldmlvdXNMb2NhdGlvbjogdGhpcy5wcmV2aW91c0xvY2F0aW9uLAogICAgICAgICAgbG9jYXRpb246IG5leHRQcm9wcy5sb2NhdGlvbgogICAgICAgIH0pOyAvLyBSb3V0ZSBoYXMgbG9hZGVkLCB3ZSBjYW4gcmVzZXQgcHJldmlvdXNMb2NhdGlvbi4KCiAgICAgICAgdGhpcy5wcmV2aW91c0xvY2F0aW9uID0gbnVsbDsKICAgICAgICB0aGlzLnNldFN0YXRlKHsKICAgICAgICAgIG5leHRSb3V0ZUhhc0xvYWRlZDogdHJ1ZQogICAgICAgIH0sIHRoaXMuc3RvcFByb2dyZXNzQmFyKTsKICAgICAgICBjb25zdCB7CiAgICAgICAgICBoYXNoCiAgICAgICAgfSA9IG5leHRQcm9wcy5sb2NhdGlvbjsKCiAgICAgICAgaWYgKCFoYXNoKSB7CiAgICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnN0IGlkID0gaGFzaC5yZXBsYWNlKCcjJywgJycpOwogICAgICAgICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTsKICAgICAgICAgIGlmIChlbGVtZW50KSBlbGVtZW50LnNjcm9sbEludG9WaWV3KCk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChlID0+IGNvbnNvbGUud2FybihlKSk7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0gLy8gVGhlcmUncyBhIHBlbmRpbmcgcm91dGUgdHJhbnNpdGlvbi4gRG9uJ3QgdXBkYXRlIHVudGlsIGl0J3MgZG9uZS4KCgogICAgaWYgKCFuZXh0U3RhdGUubmV4dFJvdXRlSGFzTG9hZGVkKSB7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0gLy8gUm91dGUgaGFzIGxvYWRlZCwgd2UgY2FuIHVwZGF0ZSBub3cuCgoKICAgIHJldHVybiB0cnVlOwogIH0KCiAgY2xlYXJQcm9ncmVzc0JhclRpbWVvdXQoKSB7CiAgICBpZiAodGhpcy5wcm9ncmVzc0JhclRpbWVvdXQpIHsKICAgICAgY2xlYXJUaW1lb3V0KHRoaXMucHJvZ3Jlc3NCYXJUaW1lb3V0KTsKICAgICAgdGhpcy5wcm9ncmVzc0JhclRpbWVvdXQgPSBudWxsOwogICAgfQogIH0KCiAgc3RhcnRQcm9ncmVzc0JhcihkZWxheSkgewogICAgdGhpcy5jbGVhclByb2dyZXNzQmFyVGltZW91dCgpOwogICAgdGhpcy5wcm9ncmVzc0JhclRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgY2xpZW50TGlmZWN5Y2xlc0Rpc3BhdGNoZXIub25Sb3V0ZVVwZGF0ZURlbGF5ZWQoewogICAgICAgIGxvY2F0aW9uOiB0aGlzLnByb3BzLmxvY2F0aW9uCiAgICAgIH0pOwogICAgICBucHJvZ3Jlc3Muc3RhcnQoKTsKICAgIH0sIGRlbGF5KTsKICB9CgogIHN0b3BQcm9ncmVzc0JhcigpIHsKICAgIHRoaXMuY2xlYXJQcm9ncmVzc0JhclRpbWVvdXQoKTsKICAgIG5wcm9ncmVzcy5kb25lKCk7CiAgfQoKICByZW5kZXIoKSB7CiAgICBjb25zdCB7CiAgICAgIGNoaWxkcmVuLAogICAgICBsb2NhdGlvbgogICAgfSA9IHRoaXMucHJvcHM7CiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgewogICAgICBsb2NhdGlvbjogbG9jYXRpb24sCiAgICAgIHJlbmRlcjogKCkgPT4gY2hpbGRyZW4KICAgIH0pOwogIH0KCn0KCmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXIoUGVuZGluZ05hdmlnYXRpb24pOw=="},{"version":3,"sources":["/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/core/lib/client/PendingNavigation.js"],"names":["React","Route","withRouter","nprogress","clientLifecyclesDispatcher","preload","configure","showSpinner","PendingNavigation","Component","constructor","props","previousLocation","progressBarTimeout","state","nextRouteHasLoaded","shouldComponentUpdate","nextProps","nextState","routeDidChange","location","routes","delay","startProgressBar","setState","pathname","then","onRouteUpdate","stopProgressBar","hash","window","scrollTo","id","replace","element","document","getElementById","scrollIntoView","catch","e","console","warn","clearProgressBarTimeout","clearTimeout","setTimeout","onRouteUpdateDelayed","start","done","render","children"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport {Route, withRouter} from 'react-router-dom';\nimport nprogress from 'nprogress';\n\nimport clientLifecyclesDispatcher from './client-lifecycles-dispatcher';\nimport preload from './preload';\n\nimport 'nprogress/nprogress.css';\n\nnprogress.configure({showSpinner: false});\n\nclass PendingNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // previousLocation doesn't affect rendering, hence not stored in state.\n    this.previousLocation = null;\n    this.progressBarTimeout = null;\n    this.state = {\n      nextRouteHasLoaded: true,\n    };\n  }\n\n  // Intercept location update and still show current route until next route\n  // is done loading.\n  shouldComponentUpdate(nextProps, nextState) {\n    const routeDidChange = nextProps.location !== this.props.location;\n    const {routes, delay = 1000} = this.props;\n\n    // If `routeDidChange` is true, means the router is trying to navigate to a new\n    // route. We will preload the new route.\n    if (routeDidChange) {\n      this.startProgressBar(delay);\n      // Save the location first.\n      this.previousLocation = this.props.location;\n      this.setState({\n        nextRouteHasLoaded: false,\n      });\n\n      // Load data while the old screen remains.\n      preload(routes, nextProps.location.pathname)\n        .then(() => {\n          clientLifecyclesDispatcher.onRouteUpdate({\n            previousLocation: this.previousLocation,\n            location: nextProps.location,\n          });\n          // Route has loaded, we can reset previousLocation.\n          this.previousLocation = null;\n          this.setState(\n            {\n              nextRouteHasLoaded: true,\n            },\n            this.stopProgressBar,\n          );\n          const {hash} = nextProps.location;\n          if (!hash) {\n            window.scrollTo(0, 0);\n          } else {\n            const id = hash.replace('#', '');\n            const element = document.getElementById(id);\n            if (element) element.scrollIntoView();\n          }\n        })\n        .catch(e => console.warn(e));\n      return false;\n    }\n\n    // There's a pending route transition. Don't update until it's done.\n    if (!nextState.nextRouteHasLoaded) {\n      return false;\n    }\n\n    // Route has loaded, we can update now.\n    return true;\n  }\n\n  clearProgressBarTimeout() {\n    if (this.progressBarTimeout) {\n      clearTimeout(this.progressBarTimeout);\n      this.progressBarTimeout = null;\n    }\n  }\n\n  startProgressBar(delay) {\n    this.clearProgressBarTimeout();\n    this.progressBarTimeout = setTimeout(() => {\n      clientLifecyclesDispatcher.onRouteUpdateDelayed({\n        location: this.props.location,\n      });\n      nprogress.start();\n    }, delay);\n  }\n\n  stopProgressBar() {\n    this.clearProgressBarTimeout();\n    nprogress.done();\n  }\n\n  render() {\n    const {children, location} = this.props;\n    return <Route location={location} render={() => children} />;\n  }\n}\n\nexport default withRouter(PendingNavigation);\n"]}]}