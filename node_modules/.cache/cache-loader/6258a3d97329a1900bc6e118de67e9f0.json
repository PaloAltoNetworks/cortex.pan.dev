{"remainingRequest":"/Users/sserrata/projects/cortex.pan.dev/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/core/lib/client/docusaurus.js","dependencies":[{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/core/lib/client/docusaurus.js","mtime":1574264075548},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/cache-loader/dist/cjs.js","mtime":1571778479501},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/babel-loader/lib/index.js","mtime":1571778479497}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjsvKioKICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZQogKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2ltcG9ydHttYXRjaFJvdXRlc31mcm9tJ3JlYWN0LXJvdXRlci1jb25maWcnO2ltcG9ydCByb3V0ZXNDaHVua05hbWVzIGZyb20nQGdlbmVyYXRlZC9yb3V0ZXNDaHVua05hbWVzJztpbXBvcnQgcm91dGVzIGZyb20nQGdlbmVyYXRlZC9yb3V0ZXMnO2ltcG9ydCBwcmVmZXRjaEhlbHBlciBmcm9tJy4vcHJlZmV0Y2gnO2ltcG9ydCBwcmVsb2FkSGVscGVyIGZyb20nLi9wcmVsb2FkJztpbXBvcnQgZmxhdCBmcm9tJy4vZmxhdCc7Y29uc3QgZmV0Y2hlZD17fTtjb25zdCBsb2FkZWQ9e307Y29uc3QgaXNTbG93Q29ubmVjdGlvbj0oKT0+ey8vIGlmIHVzZXIgaXMgb24gc2xvdyBvciBjb25zdHJhaW5lZCBjb25uZWN0aW9uCmlmKCJjb25uZWN0aW9uImluIG5hdmlnYXRvcil7aWYoKG5hdmlnYXRvci5jb25uZWN0aW9uLmVmZmVjdGl2ZVR5cGV8fCIiKS5pbmRleE9mKCIyZyIpIT09LTEmJm5hdmlnYXRvci5jb25uZWN0aW9uLnNhdmVEYXRhKXtyZXR1cm4gdHJ1ZTt9fXJldHVybiBmYWxzZTt9O2NvbnN0IGNhblByZWZldGNoPXJvdXRlUGF0aD0+IWlzU2xvd0Nvbm5lY3Rpb24oKSYmIWxvYWRlZFtyb3V0ZVBhdGhdJiYhZmV0Y2hlZFtyb3V0ZVBhdGhdO2NvbnN0IGNhblByZWxvYWQ9cm91dGVQYXRoPT4haXNTbG93Q29ubmVjdGlvbigpJiYhbG9hZGVkW3JvdXRlUGF0aF07Y29uc3QgZG9jdXNhdXJ1cz17cHJlZmV0Y2g6cm91dGVQYXRoPT57aWYoIWNhblByZWZldGNoKHJvdXRlUGF0aCkpe3JldHVybiBmYWxzZTt9Ly8gRmluZCBhbGwgd2VicGFjayBjaHVuayBuYW1lcyBuZWVkZWQKY29uc3QgbWF0Y2hlcz1tYXRjaFJvdXRlcyhyb3V0ZXMscm91dGVQYXRoKTtjb25zdCBjaHVua05hbWVzTmVlZGVkPW1hdGNoZXMucmVkdWNlKChhcnIsbWF0Y2gpPT57Y29uc3QgY2h1bms9cm91dGVzQ2h1bmtOYW1lc1ttYXRjaC5yb3V0ZS5wYXRoXTtpZighY2h1bmspe3JldHVybiBhcnI7fWNvbnN0IGNodW5rTmFtZXM9T2JqZWN0LnZhbHVlcyhmbGF0KGNodW5rKSk7cmV0dXJuIGFyci5jb25jYXQoY2h1bmtOYW1lcyk7fSxbXSk7Ly8gUHJlZmV0Y2ggYWxsIHdlYnBhY2sgY2h1bmsgYXNzZXRzIGZpbGUgbmVlZGVkCmNvbnN0IGNodW5rQXNzZXRzTmVlZGVkPWNodW5rTmFtZXNOZWVkZWQucmVkdWNlKChhcnIsY2h1bmtOYW1lKT0+e2NvbnN0IGNodW5rQXNzZXRzPXdpbmRvdy5fX2NodW5rTWFwcGluZ1tjaHVua05hbWVdfHxbXTtyZXR1cm4gYXJyLmNvbmNhdChjaHVua0Fzc2V0cyk7fSxbXSk7UHJvbWlzZS5hbGwoY2h1bmtBc3NldHNOZWVkZWQubWFwKHByZWZldGNoSGVscGVyKSkudGhlbigoKT0+e2ZldGNoZWRbcm91dGVQYXRoXT10cnVlO30pO3JldHVybiB0cnVlO30scHJlbG9hZDpyb3V0ZVBhdGg9PntpZighY2FuUHJlbG9hZChyb3V0ZVBhdGgpKXtyZXR1cm4gZmFsc2U7fWxvYWRlZFtyb3V0ZVBhdGhdPXRydWU7cHJlbG9hZEhlbHBlcihyb3V0ZXMscm91dGVQYXRoKTtyZXR1cm4gdHJ1ZTt9fTtleHBvcnQgZGVmYXVsdCBkb2N1c2F1cnVzOw=="},{"version":3,"sources":["/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/core/lib/client/docusaurus.js"],"names":["matchRoutes","routesChunkNames","routes","prefetchHelper","preloadHelper","flat","fetched","loaded","isSlowConnection","navigator","connection","effectiveType","indexOf","saveData","canPrefetch","routePath","canPreload","docusaurus","prefetch","matches","chunkNamesNeeded","reduce","arr","match","chunk","route","path","chunkNames","Object","values","concat","chunkAssetsNeeded","chunkName","chunkAssets","window","__chunkMapping","Promise","all","map","then","preload"],"mappings":"yCAAA;;;;;GAMA,OAAQA,WAAR,KAA0B,qBAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,6BAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,YAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,WAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA,KAAMC,CAAAA,OAAO,CAAG,EAAhB,CACA,KAAMC,CAAAA,MAAM,CAAG,EAAf,CAEA,KAAMC,CAAAA,gBAAgB,CAAG,IAAM,CAC7B;AACA,GAAI,cAAgBC,CAAAA,SAApB,CAA+B,CAC7B,GACE,CAACA,SAAS,CAACC,UAAV,CAAqBC,aAArB,IAAD,EAA2CC,OAA3C,SAA6D,CAAC,CAA9D,EACAH,SAAS,CAACC,UAAV,CAAqBG,QAFvB,CAGE,CACA,MAAO,KAAP,CACD,CACF,CACD,MAAO,MAAP,CACD,CAXD,CAaA,KAAMC,CAAAA,WAAW,CAAGC,SAAS,EAC3B,CAACP,gBAAgB,EAAjB,EAAuB,CAACD,MAAM,CAACQ,SAAD,CAA9B,EAA6C,CAACT,OAAO,CAACS,SAAD,CADvD,CAGA,KAAMC,CAAAA,UAAU,CAAGD,SAAS,EAAI,CAACP,gBAAgB,EAAjB,EAAuB,CAACD,MAAM,CAACQ,SAAD,CAA9D,CAEA,KAAME,CAAAA,UAAU,CAAG,CACjBC,QAAQ,CAAEH,SAAS,EAAI,CACrB,GAAI,CAACD,WAAW,CAACC,SAAD,CAAhB,CAA6B,CAC3B,MAAO,MAAP,CACD,CAED;AACA,KAAMI,CAAAA,OAAO,CAAGnB,WAAW,CAACE,MAAD,CAASa,SAAT,CAA3B,CACA,KAAMK,CAAAA,gBAAgB,CAAGD,OAAO,CAACE,MAAR,CAAe,CAACC,GAAD,CAAMC,KAAN,GAAgB,CACtD,KAAMC,CAAAA,KAAK,CAAGvB,gBAAgB,CAACsB,KAAK,CAACE,KAAN,CAAYC,IAAb,CAA9B,CACA,GAAI,CAACF,KAAL,CAAY,CACV,MAAOF,CAAAA,GAAP,CACD,CAED,KAAMK,CAAAA,UAAU,CAAGC,MAAM,CAACC,MAAP,CAAcxB,IAAI,CAACmB,KAAD,CAAlB,CAAnB,CACA,MAAOF,CAAAA,GAAG,CAACQ,MAAJ,CAAWH,UAAX,CAAP,CACD,CARwB,CAQtB,EARsB,CAAzB,CAUA;AACA,KAAMI,CAAAA,iBAAiB,CAAGX,gBAAgB,CAACC,MAAjB,CAAwB,CAACC,GAAD,CAAMU,SAAN,GAAoB,CACpE,KAAMC,CAAAA,WAAW,CAAGC,MAAM,CAACC,cAAP,CAAsBH,SAAtB,GAAoC,EAAxD,CACA,MAAOV,CAAAA,GAAG,CAACQ,MAAJ,CAAWG,WAAX,CAAP,CACD,CAHyB,CAGvB,EAHuB,CAA1B,CAIAG,OAAO,CAACC,GAAR,CAAYN,iBAAiB,CAACO,GAAlB,CAAsBnC,cAAtB,CAAZ,EAAmDoC,IAAnD,CAAwD,IAAM,CAC5DjC,OAAO,CAACS,SAAD,CAAP,CAAqB,IAArB,CACD,CAFD,EAGA,MAAO,KAAP,CACD,CA3BgB,CA4BjByB,OAAO,CAAEzB,SAAS,EAAI,CACpB,GAAI,CAACC,UAAU,CAACD,SAAD,CAAf,CAA4B,CAC1B,MAAO,MAAP,CACD,CACDR,MAAM,CAACQ,SAAD,CAAN,CAAoB,IAApB,CACAX,aAAa,CAACF,MAAD,CAASa,SAAT,CAAb,CACA,MAAO,KAAP,CACD,CAnCgB,CAAnB,CAsCA,cAAeE,CAAAA,UAAf","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport {matchRoutes} from 'react-router-config';\nimport routesChunkNames from '@generated/routesChunkNames';\nimport routes from '@generated/routes';\nimport prefetchHelper from './prefetch';\nimport preloadHelper from './preload';\nimport flat from './flat';\n\nconst fetched = {};\nconst loaded = {};\n\nconst isSlowConnection = () => {\n  // if user is on slow or constrained connection\n  if (`connection` in navigator) {\n    if (\n      (navigator.connection.effectiveType || ``).indexOf(`2g`) !== -1 &&\n      navigator.connection.saveData\n    ) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst canPrefetch = routePath =>\n  !isSlowConnection() && !loaded[routePath] && !fetched[routePath];\n\nconst canPreload = routePath => !isSlowConnection() && !loaded[routePath];\n\nconst docusaurus = {\n  prefetch: routePath => {\n    if (!canPrefetch(routePath)) {\n      return false;\n    }\n\n    // Find all webpack chunk names needed\n    const matches = matchRoutes(routes, routePath);\n    const chunkNamesNeeded = matches.reduce((arr, match) => {\n      const chunk = routesChunkNames[match.route.path];\n      if (!chunk) {\n        return arr;\n      }\n\n      const chunkNames = Object.values(flat(chunk));\n      return arr.concat(chunkNames);\n    }, []);\n\n    // Prefetch all webpack chunk assets file needed\n    const chunkAssetsNeeded = chunkNamesNeeded.reduce((arr, chunkName) => {\n      const chunkAssets = window.__chunkMapping[chunkName] || [];\n      return arr.concat(chunkAssets);\n    }, []);\n    Promise.all(chunkAssetsNeeded.map(prefetchHelper)).then(() => {\n      fetched[routePath] = true;\n    });\n    return true;\n  },\n  preload: routePath => {\n    if (!canPreload(routePath)) {\n      return false;\n    }\n    loaded[routePath] = true;\n    preloadHelper(routes, routePath);\n    return true;\n  },\n};\n\nexport default docusaurus;\n"]}]}