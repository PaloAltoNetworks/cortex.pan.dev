{"remainingRequest":"/Users/sserrata/projects/cortex.pan.dev/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/theme-classic/src/theme/BlogTagsPostsPage/index.js","dependencies":[{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/theme-classic/src/theme/BlogTagsPostsPage/index.js","mtime":1574264290997},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/cache-loader/dist/cjs.js","mtime":1571778479501},{"path":"/Users/sserrata/projects/cortex.pan.dev/node_modules/babel-loader/lib/index.js","mtime":1571778479497}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0IExheW91dCBmcm9tJ0B0aGVtZS9MYXlvdXQnO2ltcG9ydCBCbG9nUG9zdEl0ZW0gZnJvbSdAdGhlbWUvQmxvZ1Bvc3RJdGVtJztpbXBvcnQgTGluayBmcm9tJ0Bkb2N1c2F1cnVzL0xpbmsnO2Z1bmN0aW9uIEJsb2dUYWdzUG9zdFBhZ2UocHJvcHMpe2NvbnN0e21ldGFkYXRhLGl0ZW1zfT1wcm9wcztjb25zdHthbGxUYWdzUGF0aCxuYW1lOnRhZ05hbWUsY291bnR9PW1ldGFkYXRhO3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExheW91dCx7dGl0bGU6IkJsb2cgfCBUYWdnZWQgXCIiK3RhZ05hbWUrIlwiIixkZXNjcmlwdGlvbjoiQmxvZyB8IFRhZ2dlZCBcIiIrdGFnTmFtZSsiXCIifSxSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6ImNvbnRhaW5lciBtYXJnaW4tdmVydC0teGwifSxSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6InJvdyJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZToiY29sIGNvbC0tOCBjb2wtLW9mZnNldC0yIn0sUmVhY3QuY3JlYXRlRWxlbWVudCgiaDEiLG51bGwsY291bnQsIiBwb3N0KHMpIHRhZ2dlZCB3aXRoIFwiIix0YWdOYW1lLCJcIiIpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluayx7aHJlZjphbGxUYWdzUGF0aH0sIlZpZXcgQWxsIFRhZ3MiKSxSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6Im1hcmdpbi12ZXJ0LS14bCJ9LGl0ZW1zLm1hcCgoe2NvbnRlbnQ6QmxvZ1Bvc3RDb250ZW50LG1ldGFkYXRhOmJsb2dQb3N0TWV0YWRhdGF9KT0+UmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJtYXJnaW4tdmVydC0teGwiLGtleTpibG9nUG9zdE1ldGFkYXRhLnBlcm1hbGlua30sUmVhY3QuY3JlYXRlRWxlbWVudChCbG9nUG9zdEl0ZW0se2Zyb250TWF0dGVyOkJsb2dQb3N0Q29udGVudC5mcm9udE1hdHRlcixtZXRhZGF0YTpibG9nUG9zdE1ldGFkYXRhLHRydW5jYXRlZDp0cnVlfSxSZWFjdC5jcmVhdGVFbGVtZW50KEJsb2dQb3N0Q29udGVudCxudWxsKSkpKSkpKSkpO31leHBvcnQgZGVmYXVsdCBCbG9nVGFnc1Bvc3RQYWdlOw=="},{"version":3,"sources":["/Users/sserrata/projects/cortex.pan.dev/node_modules/@docusaurus/theme-classic/src/theme/BlogTagsPostsPage/index.js"],"names":["React","Layout","BlogPostItem","Link","BlogTagsPostPage","props","metadata","items","allTagsPath","name","tagName","count","map","content","BlogPostContent","blogPostMetadata","permalink","frontMatter"],"mappings":"AAAA;;;;;GAOA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,IAAP,KAAiB,kBAAjB,CAEA,QAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,CAC/B,KAAM,CAACC,QAAD,CAAWC,KAAX,EAAoBF,KAA1B,CACA,KAAM,CAACG,WAAD,CAAcC,IAAI,CAAEC,OAApB,CAA6BC,KAA7B,EAAsCL,QAA5C,CAEA,MACE,qBAAC,MAAD,EACE,KAAK,oBAAoBI,OAApB,KADP,CAEE,WAAW,oBAAoBA,OAApB,KAFb,EAGE,2BAAK,SAAS,CAAC,2BAAf,EACE,2BAAK,SAAS,CAAC,KAAf,EACE,2BAAK,SAAS,CAAC,0BAAf,EACE,8BACGC,KADH,2BACqCD,OADrC,MADF,CAIE,oBAAC,IAAD,EAAM,IAAI,CAAEF,WAAZ,kBAJF,CAKE,2BAAK,SAAS,CAAC,iBAAf,EACGD,KAAK,CAACK,GAAN,CACC,CAAC,CAACC,OAAO,CAAEC,eAAV,CAA2BR,QAAQ,CAAES,gBAArC,CAAD,GACE,2BACE,SAAS,CAAC,iBADZ,CAEE,GAAG,CAAEA,gBAAgB,CAACC,SAFxB,EAGE,oBAAC,YAAD,EACE,WAAW,CAAEF,eAAe,CAACG,WAD/B,CAEE,QAAQ,CAAEF,gBAFZ,CAGE,SAAS,KAHX,EAIE,oBAAC,eAAD,MAJF,CAHF,CAFH,CADH,CALF,CADF,CADF,CAHF,CADF,CAgCD,CAED,cAAeX,CAAAA,gBAAf","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\n\nimport Layout from '@theme/Layout';\nimport BlogPostItem from '@theme/BlogPostItem';\nimport Link from '@docusaurus/Link';\n\nfunction BlogTagsPostPage(props) {\n  const {metadata, items} = props;\n  const {allTagsPath, name: tagName, count} = metadata;\n\n  return (\n    <Layout\n      title={`Blog | Tagged \"${tagName}\"`}\n      description={`Blog | Tagged \"${tagName}\"`}>\n      <div className=\"container margin-vert--xl\">\n        <div className=\"row\">\n          <div className=\"col col--8 col--offset-2\">\n            <h1>\n              {count} post(s) tagged with &quot;{tagName}&quot;\n            </h1>\n            <Link href={allTagsPath}>View All Tags</Link>\n            <div className=\"margin-vert--xl\">\n              {items.map(\n                ({content: BlogPostContent, metadata: blogPostMetadata}) => (\n                  <div\n                    className=\"margin-vert--xl\"\n                    key={blogPostMetadata.permalink}>\n                    <BlogPostItem\n                      frontMatter={BlogPostContent.frontMatter}\n                      metadata={blogPostMetadata}\n                      truncated>\n                      <BlogPostContent />\n                    </BlogPostItem>\n                  </div>\n                ),\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default BlogTagsPostPage;\n"]}]}