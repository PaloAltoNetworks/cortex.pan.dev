"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Copyright (c) 2017-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
const path_1 = __importDefault(require("path"));
const webpack_merge_1 = __importDefault(require("webpack-merge"));
const base_1 = require("./base");
const ChunkManifestPlugin_1 = __importDefault(require("./plugins/ChunkManifestPlugin"));
const LogPlugin_1 = __importDefault(require("./plugins/LogPlugin"));
function createClientConfig(props) {
    const isProd = process.env.NODE_ENV === 'production';
    const config = base_1.createBaseConfig(props, false);
    const clientConfig = webpack_merge_1.default(config, {
        entry: {
            main: path_1.default.resolve(__dirname, '../client/clientEntry.js'),
        },
        optimization: {
            // Keep the runtime chunk separated to enable long term caching
            // https://twitter.com/wSokra/status/969679223278505985
            runtimeChunk: true,
        },
        plugins: [
            // Generate chunk-map.json (mapping of chunk names to their corresponding chunk assets)
            new ChunkManifestPlugin_1.default({
                filename: 'chunk-map.json',
                manifestVariable: '__chunkMapping',
                inlineManifest: !isProd,
            }),
            // Show compilation progress bar and build time.
            new LogPlugin_1.default({
                name: 'Client',
            }),
        ],
    });
    return clientConfig;
}
exports.createClientConfig = createClientConfig;
