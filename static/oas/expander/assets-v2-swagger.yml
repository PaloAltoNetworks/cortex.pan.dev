# This file was generated by OpenAPIDocsIT::writeUpdatedOpenAPI at 2021-06-21T21:34:33.127Z. Do not modify.
openapi: 3.0.1
info:
  title: Expander API - Assets V2
  description: An API for interacting with Network Asset data.
  termsOfService: https://www.expanse.co/master-service-agreement/
  contact:
    name: API Support
    url: https://expander-support.expanse.co
    email: expander-support@expanseinc.com
  version: 2.0.0
servers:
  - url: https://expander.expanse.co
security:
  - JWT: []
paths:
  /api/v1/idToken/:
    get:
      tags:
        - Tokens
      summary: Get ID token
      description: |-
        This route can be accessed with an Expanse-provided refresh
        token to generate a valid JWT Token to be used with the other api
        endpoints.

        Example: `Authorization: Bearer refreshtoken`
      operationId: getIdToken
      responses:
        200:
          description: |-
            Response token can be used as JWT in future requests to other endpoints

            Example: `Authorization: JWT token`
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
      security:
        - Bearer: []
  /api/v2/assets/account-integrations:
    get:
      tags:
        - Account Integrations
      summary: List provider accounts
      description: List provider accounts
      operationId: getAccountIntegrations
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageCloudResourceProviderAccount'
  /api/v2/assets/certificates:
    get:
      tags:
        - Certificate Assets
      summary: Get a paginated list of certificates.
      description: Get a paginated list of certificates. 'details' field of the response
        will be empty but is populated by the fetch endpoint - /api/v2/assets/certificates/{md5Hash}
      operationId: getAllCertAssets
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
        - name: commonNameSearch
          in: query
          description: Search for given domain value via substring match
          required: false
          schema:
            type: string
        - name: recentIp
          in: query
          description: Filter by IP; Returns only assets with a recent IP matching the
            provided filter.
          required: false
          schema:
            type: string
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: formattedIssuerOrg
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given formatted issuer orgs. If not set, filter is ignored.
          required: false
          schema:
            type: string
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: property
          in: query
          description: 'Comma-separated string; Returns only results whose certificate
          property falls in the provided list. NOTE: If omitted, the API will return
          results for all properties the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: minLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: certificateAdvertisementStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's certificate
            advertisement whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_CERTIFICATE_ADVERTISEMENT
                - HAS_CERTIFICATE_ADVERTISEMENT
        - name: serviceStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's service
            whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_SERVICE
                - HAS_ACTIVE_SERVICE
                - NO_ACTIVE_CLOUD_SERVICE
                - HAS_ACTIVE_CLOUD_SERVICE
                - NO_ACTIVE_ON_PREM_SERVICE
                - HAS_ACTIVE_ON_PREM_SERVICE
        - name: issueStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's issue
            statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_ISSUE
                - HAS_ACTIVE_ISSUE
        - name: hostingEnvironment
          in: query
          description: Filter by Hosting Environment
          required: false
          schema:
            type: string
            enum:
              - ON_PREM
              - CLOUD
              - NONE
              - RESERVED_IPS
        - name: hasRelatedCloudResources
          in: query
          description: Filter by whether the asset has a related cloud resource asset
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: boolean
        - name: tagId
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: include
          in: query
          description: 'Comma-separated string; Include the provided fields as part
          of the serialized result.<br/>Values:<br/>`certDetails`: populate all elements
          in `data[*].details`.<br/>If param is not specified, `data[*].details` will
          be empty.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: Sort by specified properties
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageCertificateAsset'
  /api/v2/assets/certificates/count:
    get:
      tags:
        - Certificate Assets
      summary: Get count of certificates.
      description: Count certificates
      operationId: getCertAssetCount
      parameters:
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
        - name: commonNameSearch
          in: query
          description: Search for given domain value via substring match
          required: false
          schema:
            type: string
        - name: recentIp
          in: query
          description: Filter by IP; Returns only assets with a recent IP matching the
            provided filter.
          required: false
          schema:
            type: string
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: formattedIssuerOrg
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given formatted issuer orgs. If not set, filter is ignored.
          required: false
          schema:
            type: string
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: property
          in: query
          description: 'Comma-separated string; Returns only results whose certificate
          property falls in the provided list. NOTE: If omitted, the API will return
          results for all properties the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: minLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: certificateAdvertisementStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's certificate
            advertisement whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_CERTIFICATE_ADVERTISEMENT
                - HAS_CERTIFICATE_ADVERTISEMENT
        - name: serviceStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's service
            whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_SERVICE
                - HAS_ACTIVE_SERVICE
                - NO_ACTIVE_CLOUD_SERVICE
                - HAS_ACTIVE_CLOUD_SERVICE
                - NO_ACTIVE_ON_PREM_SERVICE
                - HAS_ACTIVE_ON_PREM_SERVICE
        - name: issueStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's issue
            statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_ISSUE
                - HAS_ACTIVE_ISSUE
        - name: hostingEnvironment
          in: query
          description: Filter by Hosting Environment
          required: false
          schema:
            type: string
            enum:
              - ON_PREM
              - CLOUD
              - NONE
              - RESERVED_IPS
        - name: hasRelatedCloudResources
          in: query
          description: Filter by whether the asset has a related cloud resource asset
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: boolean
        - name: tagId
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Count'
  /api/v2/assets/certificates/{pemMd5Hash}:
    get:
      tags:
        - Certificate Assets
      summary: Get certificate by md5 hash
      description: Get certificate by md5 hash
      operationId: getCertificateByMd5Hash
      parameters:
        - name: minRecentIpLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: pemMd5Hash
          in: path
          description: MD5 hash for given certificate asset PEM.
          required: true
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAsset'
  /api/v2/assets/certificates/{id}:
    get:
      tags:
        - Certificate Assets
      summary: Get certificate by asset id
      description: Get certificate by asset id
      operationId: getCertificateById
      parameters:
        - name: minRecentIpLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: id
          in: path
          description: Id of asset
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAsset'
  /api/v2/assets/certificates/csv:
    get:
      tags:
        - Certificate Assets
      summary: Get CSV file of certificates
      description: Get CSV file of certificates
      operationId: getAllCertsCsv
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            maximum: 200000
            type: integer
            format: int32
            default: 200000
        - name: commonNameSearch
          in: query
          description: Search for given domain value via substring match
          required: false
          schema:
            type: string
        - name: recentIp
          in: query
          description: Filter by IP; Returns only assets with a recent IP matching the
            provided filter.
          required: false
          schema:
            type: string
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: formattedIssuerOrg
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given formatted issuer orgs. If not set, filter is ignored.
          required: false
          schema:
            type: string
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: property
          in: query
          description: 'Comma-separated string; Returns only results whose certificate
          property falls in the provided list. NOTE: If omitted, the API will return
          results for all properties the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: filename
          in: query
          description: The filename to use for downloads
          required: false
          schema:
            type: string
        - name: minLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: certificateAdvertisementStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's certificate
            advertisement whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_CERTIFICATE_ADVERTISEMENT
                - HAS_CERTIFICATE_ADVERTISEMENT
        - name: serviceStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's service
            whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_SERVICE
                - HAS_ACTIVE_SERVICE
                - NO_ACTIVE_CLOUD_SERVICE
                - HAS_ACTIVE_CLOUD_SERVICE
                - NO_ACTIVE_ON_PREM_SERVICE
                - HAS_ACTIVE_ON_PREM_SERVICE
        - name: issueStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's issue
            statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_ISSUE
                - HAS_ACTIVE_ISSUE
        - name: hostingEnvironment
          in: query
          description: Filter by Hosting Environment
          required: false
          schema:
            type: string
            enum:
              - ON_PREM
              - CLOUD
              - NONE
              - RESERVED_IPS
        - name: hasRelatedCloudResources
          in: query
          description: Filter by whether the asset has a related cloud resource asset
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: boolean
        - name: tagId
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        200:
          description: default response
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/FileDownloadResponseEntityCsvCertificateAsset'
  /api/v2/assets/certificates/{id}/annotations:
    put:
      tags:
        - Certificate Assets
      summary: Update certificate annotations
      description: Update certificate annotations. The request must contain either
        a contact email or id for each contact and tag name or id for each tag. If
        both contact email and id are supplied, only the id will be used. If tag name
        and id are supplied only the id will be used. If the tag name or contact email
        do not exist yet, they will be created.
      operationId: updateCertificateAssetAnnotations
      parameters:
        - name: id
          in: path
          description: Certificate id for given certificate asset
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotations'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotations'
  /api/v2/assets/certificates/tag-assignments/bulk:
    post:
      tags:
        - Certificate Assets
      summary: Bulk tag assignment
      description: Bulk tag assignment
      operationId: bulkTagOperations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRequestBulkTagRequestOperation'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponseOperationStatusBulkTagRequestOperation'
  /api/v2/assets/certificates/contact-assignments/bulk:
    post:
      tags:
        - Certificate Assets
      summary: Bulk assignments and unassignments of contacts
      description: Bulk assignments and unassignments of contacts. Both the asset
        and contact must exist already.
      operationId: bulkUpdateContactAssignments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRequestBulkContactAssignmentOperation'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponseOperationStatusBulkContactAssignmentOperation'
  /api/v2/assets/certificate-issuers:
    get:
      tags:
        - Certificate Issuers
      summary: List certificate issuers
      description: List certificate issuers
      operationId: getCertificateIssuers
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageCertificateIssuer'
  /api/v2/assets/certificate-properties:
    get:
      tags:
        - Certificate Properties
      summary: List available certificate properties
      description: List available certificate properties
      operationId: getCertificateProperties
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageCertificateProperty'
  /api/v2/assets/cloud-resources/tag-assignments/bulk:
    post:
      tags:
        - Cloud Resource Assets
      summary: Bulk tag assignment
      description: Bulk tag assignment
      operationId: bulkTagOperations_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRequestBulkTagRequestOperation'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponseOperationStatusBulkTagRequestOperation'
  /api/v2/assets/cloud-resources/contact-assignments/bulk:
    post:
      tags:
        - Cloud Resource Assets
      summary: Bulk assignments and unassignments of contacts
      description: Bulk assignments and unassignments of contacts. Both the asset
        and contact must exist already.
      operationId: bulkUpdateContactAssignments_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRequestBulkContactAssignmentOperation'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponseOperationStatusBulkContactAssignmentOperation'
  /api/v2/assets/cloud-resources:
    get:
      tags:
        - Cloud Resource Assets
      summary: List cloud resources
      description: Get a paginated list of cloud resources.
      operationId: getCloudResourceAssets
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
        - name: accountIntegrationIds
          in: query
          description: Filter by provider account integrations by IDs
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inetSearch
          in: query
          description: Filter by IP
          required: false
          schema:
            type: string
        - name: domainSearch
          in: query
          description: Search for given domain value via substring match
          required: false
          schema:
            type: string
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: type
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given resource type. If not set, results will include anything regardless
            of resource type.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: region
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given region. If not set, results will include anything regardless
            of region.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: minLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: tagId
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: serviceStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's service
            whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_SERVICE
                - HAS_ACTIVE_SERVICE
                - NO_ACTIVE_CLOUD_SERVICE
                - HAS_ACTIVE_CLOUD_SERVICE
                - NO_ACTIVE_ON_PREM_SERVICE
                - HAS_ACTIVE_ON_PREM_SERVICE
        - name: issueStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's issue
            statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_ISSUE
                - HAS_ACTIVE_ISSUE
        - name: sort
          in: query
          description: Sort by specified properties
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageCloudResourceAsset'
  /api/v2/assets/cloud-resources/count:
    get:
      tags:
        - Cloud Resource Assets
      summary: Count cloud resources
      description: Get count of cloud resources
      operationId: getCloudResourceAssetsCount
      parameters:
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
        - name: accountIntegrationIds
          in: query
          description: Filter by provider account integrations by IDs
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inetSearch
          in: query
          description: Filter by IP
          required: false
          schema:
            type: string
        - name: domainSearch
          in: query
          description: Search for given domain value via substring match
          required: false
          schema:
            type: string
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: type
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given resource type. If not set, results will include anything regardless
            of resource type.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: region
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given region. If not set, results will include anything regardless
            of region.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: minLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: tagId
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: serviceStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's service
            whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_SERVICE
                - HAS_ACTIVE_SERVICE
                - NO_ACTIVE_CLOUD_SERVICE
                - HAS_ACTIVE_CLOUD_SERVICE
                - NO_ACTIVE_ON_PREM_SERVICE
                - HAS_ACTIVE_ON_PREM_SERVICE
        - name: issueStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's issue
            statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_ISSUE
                - HAS_ACTIVE_ISSUE
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Count'
  /api/v2/assets/cloud-resources/{id}:
    get:
      tags:
        - Cloud Resource Assets
      summary: Get cloud resource
      description: Get details about cloud resource
      operationId: getCloudResourceAssetDetails
      parameters:
        - name: id
          in: path
          description: ID of cloud resource asset.
          required: true
          schema:
            type: string
            format: uuid
        - name: minRecentIpLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudResourceAsset'
  /api/v2/assets/cloud-resources/csv:
    get:
      tags:
        - Cloud Resource Assets
      summary: Get CSV file for cloud resources
      description: Get CSV file for cloud resources
      operationId: getCloudResourceAssetsCsv
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            maximum: 200000
            type: integer
            format: int32
            default: 200000
        - name: accountIntegrationIds
          in: query
          description: Filter by provider account integrations by IDs
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inetSearch
          in: query
          description: Filter by IP
          required: false
          schema:
            type: string
        - name: domainSearch
          in: query
          description: Search for given domain value via substring match
          required: false
          schema:
            type: string
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: type
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given resource type. If not set, results will include anything regardless
            of resource type.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: region
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given region. If not set, results will include anything regardless
            of region.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: minLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: tagId
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: serviceStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's service
            whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_SERVICE
                - HAS_ACTIVE_SERVICE
                - NO_ACTIVE_CLOUD_SERVICE
                - HAS_ACTIVE_CLOUD_SERVICE
                - NO_ACTIVE_ON_PREM_SERVICE
                - HAS_ACTIVE_ON_PREM_SERVICE
        - name: issueStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's issue
            statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_ISSUE
                - HAS_ACTIVE_ISSUE
        - name: filename
          in: query
          description: The filename to use for downloads
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/FileDownloadResponseEntityCsvCloudResourceAsset'
  /api/v2/assets/cloud-resources/{id}/annotations:
    put:
      tags:
        - Cloud Resource Assets
      summary: Update cloud resource annotations
      description: Update cloud resource annotations. The request must contain either
        a contact email or id for each contact and tag name or id for each tag. If
        both contact email and id are supplied, only the id will be used. If tag name
        and id are supplied only the id will be used. If the tag name or contact email
        do not exist yet, they will be created.
      operationId: updateCloudResourceAssetAnnotations
      parameters:
        - name: id
          in: path
          description: Cloud resource id for given cloud resource asset
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotations'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotations'
  /api/v2/assets/cloud-resource-types:
    get:
      tags:
        - Cloud Resource Types
      summary: List cloud resource types
      description: List cloud resource types
      operationId: getCloudResourceTypes
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageCloudResourceType'
  /api/v2/assets/domains/tag-assignments/bulk:
    post:
      tags:
        - Domain Assets
      summary: Bulk tag assignment
      description: Bulk tag assignment
      operationId: bulkTagOperations_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRequestBulkTagRequestOperation'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponseOperationStatusBulkTagRequestOperation'
  /api/v2/assets/domains/contact-assignments/bulk:
    post:
      tags:
        - Domain Assets
      summary: Bulk assignments and unassignments of contacts
      description: Bulk assignments and unassignments of contacts. Both the asset
        and contact must exist already.
      operationId: bulkUpdateContactAssignments_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRequestBulkContactAssignmentOperation'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponseOperationStatusBulkContactAssignmentOperation'
  /api/v2/assets/domains:
    get:
      tags:
        - Domain Assets
      summary: List domains
      description: Get a paginated list of domains. 'details' field of the response
        will be empty but is populated by the fetch endpoint - /api/v2/assets/domains/{domainName}
      operationId: getDomainAssets
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
        - name: domainSearch
          in: query
          description: Search for given domain value via substring match
          required: false
          schema:
            type: string
        - name: recentIp
          in: query
          description: Filter by IP; Returns only assets with a recent IP matching the
            provided filter.
          required: false
          schema:
            type: string
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: formattedRegistrarName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given formatted registrar names. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: minLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: dnsResolutionStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's resolution
            whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_DNS_RESOLUTION
                - HAS_DNS_RESOLUTION
        - name: serviceStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's service
            whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_SERVICE
                - HAS_ACTIVE_SERVICE
                - NO_ACTIVE_CLOUD_SERVICE
                - HAS_ACTIVE_CLOUD_SERVICE
                - NO_ACTIVE_ON_PREM_SERVICE
                - HAS_ACTIVE_ON_PREM_SERVICE
        - name: issueStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's issue
            statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_ISSUE
                - HAS_ACTIVE_ISSUE
        - name: hostingEnvironment
          in: query
          description: Filter by Hosting Environment
          required: false
          schema:
            type: string
            enum:
              - ON_PREM
              - CLOUD
              - NONE
              - RESERVED_IPS
        - name: hasRelatedCloudResources
          in: query
          description: Filter by whether the asset has a related cloud resource asset
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: boolean
        - name: isPaidLevelDomain
          in: query
          description: Filter by whether the assets is a paid level domain. This will
            return domains like bar.com, but will exclude foo.bar.com.
          required: false
          schema:
            type: boolean
        - name: tagId
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: Sort by specified properties
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDomainAsset'
  /api/v2/assets/domains/count:
    get:
      tags:
        - Domain Assets
      summary: Count domains
      description: Get count of domains
      operationId: getDomainAssetsCount
      parameters:
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
        - name: domainSearch
          in: query
          description: Search for given domain value via substring match
          required: false
          schema:
            type: string
        - name: recentIp
          in: query
          description: Filter by IP; Returns only assets with a recent IP matching the
            provided filter.
          required: false
          schema:
            type: string
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: formattedRegistrarName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given formatted registrar names. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: minLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: dnsResolutionStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's resolution
            whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_DNS_RESOLUTION
                - HAS_DNS_RESOLUTION
        - name: serviceStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's service
            whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_SERVICE
                - HAS_ACTIVE_SERVICE
                - NO_ACTIVE_CLOUD_SERVICE
                - HAS_ACTIVE_CLOUD_SERVICE
                - NO_ACTIVE_ON_PREM_SERVICE
                - HAS_ACTIVE_ON_PREM_SERVICE
        - name: issueStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's issue
            statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_ISSUE
                - HAS_ACTIVE_ISSUE
        - name: hostingEnvironment
          in: query
          description: Filter by Hosting Environment
          required: false
          schema:
            type: string
            enum:
              - ON_PREM
              - CLOUD
              - NONE
              - RESERVED_IPS
        - name: hasRelatedCloudResources
          in: query
          description: Filter by whether the asset has a related cloud resource asset
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: boolean
        - name: isPaidLevelDomain
          in: query
          description: Filter by whether the assets is a paid level domain. This will
            return domains like bar.com, but will exclude foo.bar.com.
          required: false
          schema:
            type: boolean
        - name: tagId
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Count'
  /api/v2/assets/domains/{domain}:
    get:
      tags:
        - Domain Assets
      summary: Get domain by domain name
      description: Get domain by domain name
      operationId: getDomainAssetDetailsByDomain
      parameters:
        - name: domain
          in: path
          description: Domain name for asset
          required: true
          schema:
            type: string
        - name: minRecentIpLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainAsset'
  /api/v2/assets/domains/{id}:
    get:
      tags:
        - Domain Assets
      summary: Get domain by asset id
      description: Get domain by asset id
      operationId: getDomainAssetDetailsById
      parameters:
        - name: id
          in: path
          description: Id of asset
          required: true
          schema:
            type: string
            format: uuid
        - name: minRecentIpLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainAsset'
  /api/v2/assets/domains/csv:
    get:
      tags:
        - Domain Assets
      summary: Get CSV file for domains
      description: Get CSV file for domains
      operationId: getDomainAssetsCsv
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            maximum: 200000
            type: integer
            format: int32
            default: 200000
        - name: domainSearch
          in: query
          description: Search for given domain value via substring match
          required: false
          schema:
            type: string
        - name: recentIp
          in: query
          description: Filter by IP; Returns only assets with a recent IP matching the
            provided filter.
          required: false
          schema:
            type: string
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: formattedRegistrarName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given formatted registrar names. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: minLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: dnsResolutionStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's resolution
            whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_DNS_RESOLUTION
                - HAS_DNS_RESOLUTION
        - name: serviceStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's service
            whose statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_SERVICE
                - HAS_ACTIVE_SERVICE
                - NO_ACTIVE_CLOUD_SERVICE
                - HAS_ACTIVE_CLOUD_SERVICE
                - NO_ACTIVE_ON_PREM_SERVICE
                - HAS_ACTIVE_ON_PREM_SERVICE
        - name: issueStatus
          in: query
          description: Comma-separated string; Returns only result whose asset's issue
            statuses fall in the provided list.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - NO_ACTIVE_ISSUE
                - HAS_ACTIVE_ISSUE
        - name: hostingEnvironment
          in: query
          description: Filter by Hosting Environment
          required: false
          schema:
            type: string
            enum:
              - ON_PREM
              - CLOUD
              - NONE
              - RESERVED_IPS
        - name: hasRelatedCloudResources
          in: query
          description: Filter by whether the asset has a related cloud resource asset
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: boolean
        - name: isPaidLevelDomain
          in: query
          description: Filter by whether the assets is a paid level domain. This will
            return domains like bar.com, but will exclude foo.bar.com.
          required: false
          schema:
            type: boolean
        - name: tagId
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: filename
          in: query
          description: The filename to use for downloads
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/FileDownloadResponseEntityCsvDomainAsset'
  /api/v2/assets/domains/{id}/annotations:
    put:
      tags:
        - Domain Assets
      summary: Update domain annotations
      description: Update domain annotations. The request must contain either a contact
        email or id for each contact and tag name or id for each tag. If both contact
        email and id are supplied, only the id will be used. If tag name and id are
        supplied only the id will be used. If the tag name or contact email do not
        exist yet, they will be created.
      operationId: updateDomainAssetAnnotations
      parameters:
        - name: id
          in: path
          description: Domain id for given domain asset
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotations'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotations'
  /api/v2/assets/domain-registrars:
    get:
      tags:
        - Domain Registrars
      summary: List domain registrars
      description: List domain registrars
      operationId: getDomainRegistrars
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDomainRegistrar'
  /api/v2/assets/entities:
    get:
      tags:
        - Entities
      summary: List entities
      description: List entities
      operationId: getEntities
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBusinessUnit'
  /api/v2/assets/ip-range/tag-assignments/bulk:
    post:
      tags:
        - Ip Range Assets
      summary: Bulk tag assignment
      description: Bulk tag assignment
      operationId: bulkTagOperations_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRequestBulkTagRequestOperation'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponseOperationStatusBulkTagRequestOperation'
  /api/v2/ip-range/tag-assignments/bulk:
    post:
      tags:
        - Ip Range Assets
      summary: Bulk tag assignment
      description: Bulk tag assignment
      operationId: bulkTagOperations_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRequestBulkTagRequestOperation'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponseOperationStatusBulkTagRequestOperation'
  /api/v2/assets/ip-range/contact-assignments/bulk:
    post:
      tags:
        - Ip Range Assets
      summary: Bulk assignments and unassignments of contacts
      description: Bulk assignments and unassignments of contacts. Both the asset
        and contact must exist already.
      operationId: bulkUpdateContactAssignments_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRequestBulkContactAssignmentOperation'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponseOperationStatusBulkContactAssignmentOperation'
  /api/v2/ip-range/contact-assignments/bulk:
    post:
      tags:
        - Ip Range Assets
      summary: Bulk assignments and unassignments of contacts
      description: Bulk assignments and unassignments of contacts. Both the asset
        and contact must exist already.
      operationId: bulkUpdateContactAssignments_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRequestBulkContactAssignmentOperation'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponseOperationStatusBulkContactAssignmentOperation'
  /api/v2/assets/ip-range/{id}:
    get:
      tags:
        - Ip Range Assets
      summary: Get IP Range
      description: Get an IP Range by ID
      operationId: getIpRangeAsset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: include
          in: query
          description: 'Comma-separated string; Include the provided fields as part
          of the serialized result.<br/>Values:<br/>`certDetails`: populate all elements
          in `data[*].details`.<br/>If param is not specified, `data[*].details` will
          be empty.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalIpRangeAsset'
    delete:
      tags:
        - Ip Range Assets
      summary: Delete IP Range
      description: Delete the given IP Range, and all connections to other data. This
        will only work for user-defined IP Ranges.
      operationId: deleteIpRangeAsset
      parameters:
        - name: id
          in: path
          description: ID for given IP Range.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                type: string
    patch:
      tags:
        - Ip Range Assets
      summary: Partial update of an IP Range
      description: Allows the partial update of the given IP Range.
      operationId: updateIpRangeAsset
      parameters:
        - name: id
          in: path
          description: ID for given IP Range.
          required: true
          schema:
            type: string
            format: uuid
        - name: include
          in: query
          description: 'Comma-separated string; Include the provided fields as part
          of the serialized result.<br/>Values:<br/>`certDetails`: populate all elements
          in `data[*].details`.<br/>If param is not specified, `data[*].details` will
          be empty.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIpRangeRequest'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalIpRangeAsset'
  /api/v2/ip-range/{id}:
    get:
      tags:
        - Ip Range Assets
      summary: Get IP Range
      description: Get an IP Range by ID
      operationId: getIpRangeAsset_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: include
          in: query
          description: 'Comma-separated string; Include the provided fields as part
          of the serialized result.<br/>Values:<br/>`certDetails`: populate all elements
          in `data[*].details`.<br/>If param is not specified, `data[*].details` will
          be empty.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalIpRangeAsset'
    delete:
      tags:
        - Ip Range Assets
      summary: Delete IP Range
      description: Delete the given IP Range, and all connections to other data. This
        will only work for user-defined IP Ranges.
      operationId: deleteIpRangeAsset_1
      parameters:
        - name: id
          in: path
          description: ID for given IP Range.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                type: string
    patch:
      tags:
        - Ip Range Assets
      summary: Partial update of an IP Range
      description: Allows the partial update of the given IP Range.
      operationId: updateIpRangeAsset_1
      parameters:
        - name: id
          in: path
          description: ID for given IP Range.
          required: true
          schema:
            type: string
            format: uuid
        - name: include
          in: query
          description: 'Comma-separated string; Include the provided fields as part
          of the serialized result.<br/>Values:<br/>`certDetails`: populate all elements
          in `data[*].details`.<br/>If param is not specified, `data[*].details` will
          be empty.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIpRangeRequest'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalIpRangeAsset'
  /api/v2/assets/ip-range:
    get:
      tags:
        - Ip Range Assets
      summary: Gets IP Ranges
      description: Get a paginated list of of IP Ranges and associated custom ranges.
      operationId: getIpRangeAssets
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: Offset for pagination
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: include
          in: query
          description: 'Comma-separated string; Include the provided fields as part
          of the serialized result.<br/>Values:<br/>`certDetails`: populate all elements
          in `data[*].details`.<br/>If param is not specified, `data[*].details` will
          be empty.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: tags
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tag-names
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: business-units
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: business-unit-names
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inet
          in: query
          description: Filter by IP
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sort by specified properties
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacyPageExternalIpRangeAsset'
    post:
      tags:
        - Ip Range Assets
      summary: Creates an IP Range
      description: Creates a new custom IP Range. A validation error will be returned
        if the start and end addresses of the custom range do not fit within a top
        level range defined by Expanse.
      operationId: createIpRangeAsset
      parameters:
        - name: include
          in: query
          description: 'Comma-separated string; Include the provided fields as part
          of the serialized result.<br/>Values:<br/>`certDetails`: populate all elements
          in `data[*].details`.<br/>If param is not specified, `data[*].details` will
          be empty.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIpRangeRequest'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalIpRangeAsset'
  /api/v2/ip-range:
    get:
      tags:
        - Ip Range Assets
      summary: Gets IP Ranges
      description: Get a paginated list of of IP Ranges and associated custom ranges.
      operationId: getIpRangeAssets_1
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: Offset for pagination
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: include
          in: query
          description: 'Comma-separated string; Include the provided fields as part
          of the serialized result.<br/>Values:<br/>`certDetails`: populate all elements
          in `data[*].details`.<br/>If param is not specified, `data[*].details` will
          be empty.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: tags
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tag-names
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: business-units
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: business-unit-names
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inet
          in: query
          description: Filter by IP
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sort by specified properties
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacyPageExternalIpRangeAsset'
    post:
      tags:
        - Ip Range Assets
      summary: Creates an IP Range
      description: Creates a new custom IP Range. A validation error will be returned
        if the start and end addresses of the custom range do not fit within a top
        level range defined by Expanse.
      operationId: createIpRangeAsset_1
      parameters:
        - name: include
          in: query
          description: 'Comma-separated string; Include the provided fields as part
          of the serialized result.<br/>Values:<br/>`certDetails`: populate all elements
          in `data[*].details`.<br/>If param is not specified, `data[*].details` will
          be empty.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIpRangeRequest'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalIpRangeAsset'
  /api/v2/assets/ip-range/csv:
    get:
      tags:
        - Ip Range Assets
      summary: Gets IP Ranges CSV
      description: Get a CSV of of IP Ranges and associated custom ranges.
      operationId: getIpRangeAssetsCsv
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 200000
        - name: offset
          in: query
          description: Offset for pagination
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: include
          in: query
          description: 'Comma-separated string; Include the provided fields as part
          of the serialized result.<br/>Values:<br/>`certDetails`: populate all elements
          in `data[*].details`.<br/>If param is not specified, `data[*].details` will
          be empty.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: tags
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tag-names
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: business-units
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: business-unit-names
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inet
          in: query
          description: Filter by IP
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sort by specified properties
          required: false
          schema:
            type: string
            default: startAddress
      responses:
        200:
          description: default response
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/FileDownloadResponseEntityCsvExternalIpRangeAsset'
  /api/v2/ip-range/csv:
    get:
      tags:
        - Ip Range Assets
      summary: Gets IP Ranges CSV
      description: Get a CSV of of IP Ranges and associated custom ranges.
      operationId: getIpRangeAssetsCsv_1
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 200000
        - name: offset
          in: query
          description: Offset for pagination
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: include
          in: query
          description: 'Comma-separated string; Include the provided fields as part
          of the serialized result.<br/>Values:<br/>`certDetails`: populate all elements
          in `data[*].details`.<br/>If param is not specified, `data[*].details` will
          be empty.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: tags
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tag-names
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: business-units
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: business-unit-names
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inet
          in: query
          description: Filter by IP
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sort by specified properties
          required: false
          schema:
            type: string
            default: startAddress
      responses:
        200:
          description: default response
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/FileDownloadResponseEntityCsvExternalIpRangeAsset'
  /api/v2/assets/ip-range/tag:
    post:
      tags:
        - Ip Range Assets
      summary: Create and assign tags to IP Ranges
      description: Create, if needed, and assign tags to IP Ranges
      operationId: assignAndCreateTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssignmentAndCreation'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalIpRangeAsset'
  /api/v2/ip-range/tag:
    post:
      tags:
        - Ip Range Assets
      summary: Create and assign tags to IP Ranges
      description: Create, if needed, and assign tags to IP Ranges
      operationId: assignAndCreateTags_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssignmentAndCreation'
        required: true
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalIpRangeAsset'
  /api/v2/assets/providers:
    get:
      tags:
        - Providers
      summary: List providers
      description: List providers
      operationId: getProviders
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageProviderWithRegions'
  /api/v2/assets/regions:
    get:
      tags:
        - Regions
      summary: List provider regions
      description: List provider regions
      operationId: getProviderRegions
      parameters:
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageProviderRegion'
  /api/v2/assets/ips:
    get:
      tags:
        - Ips
      summary: Get asset ips
      description: This endpoint contains the IP addresses that your organization’s
        domains resolve to and certificates are advertised on. For on-premise IP ranges
        attributed to your organization, please use the v2/ipranges endpoint (defaults
        last 30 days)
      operationId: getIps
      parameters:
        - name: assetKey
          in: query
          description: Filter by asset key
          required: false
          schema:
            type: string
        - name: assetType
          in: query
          description: Filter by asset type
          required: false
          schema:
            type: string
        - name: inetSearch
          in: query
          description: Filter by IP, IP range, IP CIDR or IP wildcard
          required: false
          schema:
            type: string
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: minLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: hostingEnvironment
          in: query
          description: Filter by Hosting Environment
          required: false
          schema:
            type: string
            enum:
              - ON_PREM
              - CLOUD
              - NONE
              - RESERVED_IPS
        - name: sort
          in: query
          description: Sort by specified properties
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageRecentIp'
  /api/v2/assets/ips/count:
    get:
      tags:
        - Ips
      summary: Count ips
      description: Count ips
      operationId: getIpsCount
      parameters:
        - name: assetKey
          in: query
          description: Filter by asset key
          required: false
          schema:
            type: string
        - name: assetType
          in: query
          description: Filter by asset type
          required: false
          schema:
            type: string
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: minLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: hostingEnvironment
          in: query
          description: Filter by Hosting Environment
          required: false
          schema:
            type: string
            enum:
              - ON_PREM
              - CLOUD
              - NONE
              - RESERVED_IPS
        - name: pageToken
          in: query
          description: Page token for pagination
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Count'
  /api/v2/assets/ips/csv:
    get:
      tags:
        - Ips
      summary: Get CSV for asset ips
      description: Download a CSV file of asset IPs. This endpoint contains the IP
        addresses that your organization’s domains resolve to and certificates are
        advertised on. For on-premise IP ranges attributed to your organization, please
        use the v2/ipranges endpoint (defaults 30 days)
      operationId: getIpsCsv
      parameters:
        - name: assetKey
          in: query
          description: Filter by asset key
          required: false
          schema:
            type: string
        - name: assetType
          in: query
          description: Filter by asset type
          required: false
          schema:
            type: string
        - name: inetSearch
          in: query
          description: Filter by IP, IP range, IP CIDR or IP wildcard
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Page size limit
          required: false
          schema:
            type: integer
            format: int32
            default: 200000
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. If not set, filter is ignored.
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: minLastObservedDate
          in: query
          description: Filter by last observed timestamp. Date formatted string (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: hostingEnvironment
          in: query
          description: Filter by Hosting Environment
          required: false
          schema:
            type: string
            enum:
              - ON_PREM
              - CLOUD
              - NONE
              - RESERVED_IPS
        - name: filename
          in: query
          description: The filename to use for downloads
          required: false
          schema:
            type: string
      responses:
        200:
          description: default response
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/FileDownloadResponseEntityCsvRecentIp'
  /api/v1/targetedIps:
    get:
      tags:
        - Targeted IPs
      description: Get all targeted IPs.
      operationId: getTargetedIps
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    CloudResourceProviderAccount:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Meta:
      type: object
      properties:
        nextPageToken:
          type: string
        prevPageToken:
          type: string
    PageCloudResourceProviderAccount:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CloudResourceProviderAccount'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    Pagination:
      type: object
      properties:
        next:
          type: string
        prev:
          type: string
    AccountIntegration:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    Annotations:
      required:
        - contacts
        - note
        - tags
      type: object
      properties:
        contacts:
          maxItems: 100
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        tags:
          maxItems: 100
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        note:
          maxLength: 1024
          minLength: 0
          type: string
    BusinessUnit:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        tenantId:
          type: string
          format: uuid
    Certificate:
      required:
        - id
        - md5Fingerprint
        - md5Hash
        - pemSha1
        - pemSha256
        - sha1Fingerprint
        - sha256Fingerprint
      type: object
      properties:
        id:
          type: string
          format: uuid
        md5Hash:
          type: string
        issuer:
          type: string
        issuerAlternativeNames:
          type: string
        issuerCountry:
          type: string
        issuerEmail:
          type: string
        issuerLocality:
          type: string
        issuerName:
          type: string
        issuerOrg:
          type: string
        formattedIssuerOrg:
          type: string
        issuerOrgUnit:
          type: string
        issuerState:
          type: string
        publicKey:
          type: string
        publicKeyAlgorithm:
          type: string
        publicKeyRsaExponent:
          type: integer
          format: int64
        signatureAlgorithm:
          type: string
        subject:
          type: string
        subjectAlternativeNames:
          type: string
        subjectCountry:
          type: string
        subjectEmail:
          type: string
        subjectLocality:
          type: string
        subjectName:
          type: string
        subjectOrg:
          type: string
        subjectOrgUnit:
          type: string
        subjectState:
          type: string
        serialNumber:
          type: string
        validNotBefore:
          type: string
        validNotAfter:
          type: string
        version:
          type: string
        publicKeyBits:
          type: integer
          format: int32
        pemSha256:
          type: string
        pemSha1:
          type: string
        publicKeyModulus:
          type: string
        publicKeySpki:
          type: string
        sha1Fingerprint:
          type: string
        sha256Fingerprint:
          type: string
        md5Fingerprint:
          type: string
    CertificateAsset:
      type: object
      properties:
        id:
          type: string
          format: uuid
        tenant:
          $ref: '#/components/schemas/BusinessUnit'
        businessUnits:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnit'
        dateAdded:
          type: string
          format: date-time
        firstObserved:
          type: string
          format: date-time
        lastObserved:
          type: string
          format: date-time
        providers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Provider'
        certificate:
          $ref: '#/components/schemas/Certificate'
        commonName:
          type: string
        properties:
          uniqueItems: true
          type: array
          items:
            type: string
        hasLinkedCloudResources:
          type: boolean
        certificateAdvertisementStatus:
          uniqueItems: true
          type: array
          items:
            type: string
        serviceStatus:
          uniqueItems: true
          type: array
          items:
            type: string
        issueStatus:
          uniqueItems: true
          type: array
          items:
            type: string
        details:
          $ref: '#/components/schemas/CertificateAssetDetail'
        annotations:
          $ref: '#/components/schemas/Annotations'
        sourceDetails:
          uniqueItems: true
          type: array
          items:
            type: string
    CertificateAssetDetail:
      type: object
      properties:
        recentIps:
          type: array
          items:
            $ref: '#/components/schemas/RecentIp'
        cloudResources:
          type: array
          items:
            $ref: '#/components/schemas/CloudResourceAsset'
        base64Encoded:
          type: string
    CloudResourceAsset:
      type: object
      properties:
        id:
          type: string
          format: uuid
        tenant:
          $ref: '#/components/schemas/BusinessUnit'
        businessUnits:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnit'
        dateAdded:
          type: string
          format: date-time
        firstObserved:
          type: string
          format: date-time
        lastObserved:
          type: string
          format: date-time
        instanceId:
          type: string
        type:
          type: string
        name:
          type: string
        ips:
          uniqueItems: true
          type: array
          items:
            type: string
        domain:
          type: string
        provider:
          $ref: '#/components/schemas/Provider'
        region:
          type: string
        vpc:
          $ref: '#/components/schemas/Vpc'
        accountIntegration:
          $ref: '#/components/schemas/AccountIntegration'
        providerAccountId:
          type: string
        details:
          $ref: '#/components/schemas/CloudResourceAssetDetails'
        serviceStatus:
          uniqueItems: true
          type: array
          items:
            type: string
        issueStatus:
          uniqueItems: true
          type: array
          items:
            type: string
        annotations:
          $ref: '#/components/schemas/Annotations'
        sourceDetails:
          uniqueItems: true
          type: array
          items:
            type: string
    CloudResourceAssetDetails:
      type: object
      properties:
        recentIps:
          type: array
          items:
            $ref: '#/components/schemas/RecentIp'
    Contact:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          maxLength: 254
          minLength: 0
          type: string
    PageCertificateAsset:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CertificateAsset'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    Provider:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    RecentIp:
      type: object
      properties:
        ip:
          type: string
        domain:
          type: string
        type:
          type: string
        assetType:
          type: string
        assetKey:
          type: string
        provider:
          $ref: '#/components/schemas/Provider'
        lastObserved:
          type: string
          format: date-time
        tenant:
          $ref: '#/components/schemas/BusinessUnit'
        businessUnits:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnit'
        commonName:
          type: string
    Tag:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    Vpc:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Count:
      type: object
      properties:
        count:
          type: integer
          format: int32
    CsvField:
      type: object
      properties:
        fieldPath:
          type: string
        headerName:
          type: string
        converter:
          type: object
    FileDownloadResponseEntityCsvCertificateAsset:
      type: object
      properties:
        data:
          type: object
        filename:
          type: string
        fieldMappings:
          type: array
          items:
            $ref: '#/components/schemas/CsvField'
    BulkRequestBulkTagRequestOperation:
      required:
        - operations
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/BulkTagRequestOperation'
    BulkTagRequestOperation:
      required:
        - assetId
        - operationType
        - tagIds
      type: object
      properties:
        operationType:
          type: string
          enum:
            - ASSIGN
            - UNASSIGN
        tagIds:
          type: array
          items:
            type: string
            format: uuid
        assetId:
          type: string
          format: uuid
    BulkResponseItemOperationStatusBulkTagRequestOperation:
      type: object
      properties:
        status:
          type: string
          enum:
            - SUCCESS
            - FAILURE
        operation:
          $ref: '#/components/schemas/BulkTagRequestOperation'
        error:
          $ref: '#/components/schemas/ErrorMessage'
    BulkResponseMeta:
      type: object
      properties:
        failureCount:
          type: integer
          format: int32
    BulkResponseOperationStatusBulkTagRequestOperation:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BulkResponseMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/BulkResponseItemOperationStatusBulkTagRequestOperation'
    ErrorMessage:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    BulkContactAssignmentOperation:
      required:
        - assetId
        - contactIds
        - operationType
      type: object
      properties:
        operationType:
          type: string
          enum:
            - ASSIGN
            - UNASSIGN
        contactIds:
          type: array
          items:
            type: string
            format: uuid
        assetId:
          type: string
          format: uuid
    BulkRequestBulkContactAssignmentOperation:
      required:
        - operations
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/BulkContactAssignmentOperation'
    BulkResponseItemOperationStatusBulkContactAssignmentOperation:
      type: object
      properties:
        status:
          type: string
          enum:
            - SUCCESS
            - FAILURE
        operation:
          $ref: '#/components/schemas/BulkContactAssignmentOperation'
        error:
          $ref: '#/components/schemas/ErrorMessage'
    BulkResponseOperationStatusBulkContactAssignmentOperation:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BulkResponseMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/BulkResponseItemOperationStatusBulkContactAssignmentOperation'
    CertificateIssuer:
      type: object
      properties:
        name:
          type: string
    PageCertificateIssuer:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CertificateIssuer'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    CertificateProperty:
      type: object
      properties:
        name:
          type: string
    PageCertificateProperty:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CertificateProperty'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    PageCloudResourceAsset:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CloudResourceAsset'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    FileDownloadResponseEntityCsvCloudResourceAsset:
      type: object
      properties:
        data:
          type: object
        filename:
          type: string
        fieldMappings:
          type: array
          items:
            $ref: '#/components/schemas/CsvField'
    CloudResourceType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    PageCloudResourceType:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CloudResourceType'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    DomainAsset:
      type: object
      properties:
        id:
          type: string
          format: uuid
        dateAdded:
          type: string
          format: date-time
        domain:
          type: string
        tenant:
          $ref: '#/components/schemas/BusinessUnit'
        businessUnits:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnit'
        providers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Provider'
        firstObserved:
          type: string
          format: date-time
        lastObserved:
          type: string
          format: date-time
        hasLinkedCloudResources:
          type: boolean
        sourceDomain:
          type: string
        whois:
          type: array
          items:
            $ref: '#/components/schemas/DomainWhois'
        lastSampledIp:
          type: string
        details:
          $ref: '#/components/schemas/DomainAssetDetails'
        lastSubdomainMetadata:
          $ref: '#/components/schemas/SubdomainMetadata'
        dnsResolutionStatus:
          uniqueItems: true
          type: array
          items:
            type: string
        serviceStatus:
          uniqueItems: true
          type: array
          items:
            type: string
        issueStatus:
          uniqueItems: true
          type: array
          items:
            type: string
        annotations:
          $ref: '#/components/schemas/Annotations'
        sourceDetails:
          uniqueItems: true
          type: array
          items:
            type: string
        isPaidLevelDomain:
          type: boolean
        isCollapsed:
          type: boolean
    DomainAssetDetails:
      type: object
      properties:
        recentIps:
          type: array
          items:
            $ref: '#/components/schemas/RecentIp'
        cloudResources:
          type: array
          items:
            $ref: '#/components/schemas/CloudResourceAsset'
    DomainWhois:
      type: object
      properties:
        domain:
          type: string
        registryDomainId:
          type: string
        updatedDate:
          type: string
          format: date-time
        creationDate:
          type: string
          format: date-time
        registryExpiryDate:
          type: string
          format: date-time
        reseller:
          type: string
        registrar:
          $ref: '#/components/schemas/DomainWhoisRegistrar'
        domainStatuses:
          type: array
          items:
            type: string
        nameServers:
          type: array
          items:
            type: string
        registrant:
          $ref: '#/components/schemas/DomainWhoisContact'
        admin:
          $ref: '#/components/schemas/DomainWhoisContact'
        tech:
          $ref: '#/components/schemas/DomainWhoisContact'
        dnssec:
          type: string
    DomainWhoisContact:
      type: object
      properties:
        name:
          type: string
        organization:
          type: string
        street:
          type: string
        city:
          type: string
        province:
          type: string
        postalCode:
          type: string
        country:
          type: string
        phoneNumber:
          type: string
        phoneExtension:
          type: string
        faxNumber:
          type: string
        faxExtension:
          type: string
        emailAddress:
          type: string
        registryId:
          type: string
    DomainWhoisRegistrar:
      type: object
      properties:
        name:
          type: string
        formattedName:
          type: string
        whoisServer:
          type: string
        url:
          type: string
        ianaId:
          type: integer
          format: int32
        registrationExpirationDate:
          type: string
          format: date-time
        abuseContactEmail:
          type: string
        abuseContactPhone:
          type: string
    PageDomainAsset:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DomainAsset'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    SubdomainMetadata:
      type: object
      properties:
        collapseType:
          type: string
        numSubdomains:
          type: integer
          format: int64
        numDistinctIps:
          type: integer
          format: int64
        date:
          type: string
          format: date
    FileDownloadResponseEntityCsvDomainAsset:
      type: object
      properties:
        data:
          type: object
        filename:
          type: string
        fieldMappings:
          type: array
          items:
            $ref: '#/components/schemas/CsvField'
    DomainRegistrar:
      type: object
      properties:
        name:
          type: string
    PageDomainRegistrar:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DomainRegistrar'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    PageBusinessUnit:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnit'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    CountryCode:
      type: object
      properties:
        code:
          type: string
    ExternalIpRangeAsset:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created:
          type: string
          format: date
        modified:
          type: string
          format: date
        ipVersion:
          type: string
        startAddress:
          type: string
        endAddress:
          type: string
        businessUnits:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnit'
        rangeSize:
          type: integer
          format: int64
        responsiveIpCount:
          type: integer
          format: int64
        rangeIntroduced:
          type: string
          format: date
        rangeType:
          type: string
        annotations:
          $ref: '#/components/schemas/IpRangeAnnotationsResponse'
        severityCounts:
          type: array
          items:
            $ref: '#/components/schemas/IpRangeAssetSeverityCount'
        attributionReasons:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IpRangeAssetAttributionReason'
        relatedRegistrationInformation:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IpRangeAssetRegistrationInformation'
        locationInformation:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IpRangeAssetLocationInformation'
        parentId:
          type: string
          format: uuid
        customChildRanges:
          type: array
          items:
            $ref: '#/components/schemas/ExternalIpRangeAsset'
    Geolocation:
      required:
        - countryCode
        - latitude
        - longitude
      type: object
      properties:
        countryCode:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        city:
          type: string
        timeZone:
          type: string
        regionCode:
          type: string
    IpRangeAnnotationsResponse:
      required:
        - additionalNotes
        - note
        - pointsOfContact
        - tags
      type: object
      properties:
        tags:
          maxItems: 100
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IpRangeAssetTag'
        additionalNotes:
          maxLength: 1024
          minLength: 0
          type: string
        note:
          maxLength: 1024
          minLength: 0
          type: string
        pointsOfContact:
          maxItems: 100
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IpRangeContact'
    IpRangeAssetAttributionReason:
      type: object
      properties:
        reason:
          type: string
    IpRangeAssetLocationInformation:
      type: object
      properties:
        ip:
          type: string
        geolocation:
          $ref: '#/components/schemas/Geolocation'
    IpRangeAssetRegistrationInformation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        handle:
          type: string
        startAddress:
          type: string
        endAddress:
          type: string
        ipVersion:
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        name:
          type: string
        parentHandle:
          type: string
        whoisServer:
          type: string
        updatedDate:
          type: string
          format: date
        remarks:
          type: string
        registryEntities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IpRangeAssetRegistryEntity'
    IpRangeAssetRegistryEntity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        handle:
          type: string
        address:
          type: string
        email:
          type: string
        events:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IpRangeAssetRegistryEntityEvent'
        firstRegistered:
          type: string
          format: date
        formattedName:
          type: string
        lastChanged:
          type: string
          format: date-time
        org:
          type: string
        phone:
          type: string
        relatedEntityHandles:
          uniqueItems: true
          type: array
          items:
            type: string
        roles:
          uniqueItems: true
          type: array
          items:
            type: string
        remarks:
          type: string
        statuses:
          type: string
        kind:
          type: string
    IpRangeAssetRegistryEntityEvent:
      type: object
      properties:
        action:
          type: string
        date:
          type: string
          format: date-time
        links:
          uniqueItems: true
          type: array
          items:
            type: string
    IpRangeAssetSeverityCount:
      type: object
      properties:
        type:
          type: string
        count:
          type: integer
          format: int32
    IpRangeAssetTag:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
    IpRangeContact:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          maxLength: 254
          minLength: 0
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        role:
          type: string
    LegacyPageExternalIpRangeAsset:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExternalIpRangeAsset'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    FileDownloadResponseEntityCsvExternalIpRangeAsset:
      type: object
      properties:
        data:
          type: object
        filename:
          type: string
        fieldMappings:
          type: array
          items:
            $ref: '#/components/schemas/CsvField'
    TagAssignmentAndCreation:
      type: object
      properties:
        ipRangeIds:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
    CreateIpRangeRequest:
      required:
        - endAddress
        - startAddress
      type: object
      properties:
        parentId:
          type: string
          format: uuid
        startAddress:
          type: string
        endAddress:
          type: string
        annotations:
          $ref: '#/components/schemas/IpRangeAnnotationsRequest'
    IpRangeAnnotationsRequest:
      type: object
      properties:
        tags:
          maxItems: 100
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        additionalNotes:
          maxLength: 1024
          minLength: 0
          type: string
        note:
          maxLength: 1024
          minLength: 0
          type: string
        pointOfContactIds:
          maxItems: 100
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    UpdateIpRangeRequest:
      type: object
      properties:
        startAddress:
          type: string
        endAddress:
          type: string
        annotations:
          $ref: '#/components/schemas/IpRangeAnnotationsRequest'
    PageProviderWithRegions:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProviderWithRegions'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    ProviderWithRegions:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        regions:
          uniqueItems: true
          type: array
          items:
            type: string
    PageProviderRegion:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProviderRegion'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    ProviderRegion:
      type: object
      properties:
        name:
          type: string
        provider:
          $ref: '#/components/schemas/Provider'
    PageRecentIp:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RecentIp'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    FileDownloadResponseEntityCsvRecentIp:
      type: object
      properties:
        data:
          type: object
        filename:
          type: string
        fieldMappings:
          type: array
          items:
            $ref: '#/components/schemas/CsvField'
  securitySchemes:
    JWT:
      type: apiKey
      description: |-
        To access the API a valid JWT token must be included in every request
        in the ''Authorization'' header. A valid JWT token is generated by the
        API and returned via the `/api/v1/idToken/` route. The value for this header
        should be `JWT <token>`, where the token is the base64-encoded JSON Web
        Token.

        Example: `Authorization: JWT <token>`
      name: Authorization
      in: header
    Bearer:
      type: apiKey
      description: |-
        Provide a valid Expanse-provided refresh token to access `/api/v1/idToken/`.
        This route will generate a JWT token that can be used with the other api
        endpoints.

        Example: `Authorization: Bearer <refreshToken>`
      name: Authorization
      in: header
