# This file was generated by OpenAPIDocsIT::writeUpdatedOpenApi at 2021-11-30T21:53:05.950Z. Do not modify.
openapi: 3.0.1
info:
  title: Services
  description: API for interacting with Services on your network
  termsOfService: https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/legal/palo-alto-networks-end-user-license-agreement-eula.pdf
  contact:
    name: API Support
    url: https://docs.paloaltonetworks.com/cortex/cortex-xpanse/cortex-xpanse-user-guide/apis-and-integrations-main/expander-apis-and-integrations/expander-apis.html#expander-apis
    email: expanse-support@paloaltonetworks.com
  version: 1.0.0
servers:
  - url: https://expander.expanse.co
security:
  - Bearer: []
paths:
  /api/oauth2/RequestToken:
    post:
      tags:
        - Tokens
      summary: Get Access Token from Client Credentials
      description: "This route can be accessed with a `client_id` and `client_secret`\
        \ to generate a valid `access_token` to be used with the other Xpanse api\
        \ endpoints. For more information on how to retrieve client credentials, visit\
        \ the Xpanse [TechDocs](https://docs.paloaltonetworks.com/cortex/cortex-xpanse/cortex-xpanse-user-guide/apis-and-integrations-main/expander-apis-and-integrations/expander-apis.html#expander-apis).\
        \  \n\nExample: `Authorization: Bearer access_token`"
      operationId: getAccessToken
      requestBody:
        description: scope should be `scope-xpanse`, grant_type should be `client_credentials`
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                client_secret:
                  type: string
                scope:
                  type: string
                  example: scope-xpanse
                grant_type:
                  type: string
                  example: client_credentials
      responses:
        "200":
          description: |-
            Response field `access_token` can be used as Bearer in future requests to other Xpanse endpoints.

            Example: `Authorization: Bearer access_token`
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                  expires_in:
                    type: integer
                    example: 3599
      security:
        - ClientCredentials: []
      servers:
        - url: https://api.paloaltonetworks.com
  /api/v1/idToken/:
    get:
      tags:
        - Tokens
      summary: Get ID token from refresh token (Deprecated)
      description: |-
        This route can be accessed with an Xpanse-provided refresh
        token to generate a valid JWT Token to be used with the other api
        endpoints.

        Example: `Authorization: Bearer refreshtoken`
      operationId: getIdToken
      responses:
        "200":
          description: |-
            Response token can be used as JWT in future requests to other endpoints

            Example: `Authorization: JWT token`
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
      security:
        - RefreshToken-Deprecated: []
  /api/v1/services/countryCodes:
    get:
      tags:
        - Service Country Codes
      summary: Get all country codes
      description: Get all country codes
      operationId: getServiceCountryCodes
      parameters:
        - name: limit
          in: query
          description: Maximum page size limit.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token used for pagination.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageCountryCode'
  /api/v1/services/classifications:
    get:
      tags:
        - Service Classifications
      summary: Get a summary of all Service Classifications
      description: Get a summary of all Service Classifications
      operationId: getServiceClassificationSummaries
      parameters:
        - name: limit
          in: query
          description: Maximum page size limit.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token used for pagination.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageServiceClassificationSummary'
  /api/v1/services/services:
    get:
      tags:
        - Expander Services
      summary: Get all Services
      description: Get all Services. By default, the response will exclude some large
        fields. See `include` param for details.
      operationId: getServices
      parameters:
        - name: limit
          in: query
          description: Maximum page size limit.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token used for pagination.
          required: false
          schema:
            type: string
        - name: queryId
          in: query
          description: ID of previously stored query
          required: false
          schema:
            type: string
            format: uuid
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. Cannot be used with providerName! or providerId!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. Cannot be used with providerName! or providerId!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerId!
          in: query
          description: Comma-separated string; Returns only results that were found
            on providers other than the given ones. Cannot be used with providerName
            or providerId.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName!
          in: query
          description: Comma-separated string; Returns only results that were found
            on providers other than the given ones. Cannot be used with providerName
            or providerId.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view. Cannot
          be used with businessUnitId! or businessUnitName!.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.
          Cannot be used with businessUnitId! or businessUnitName!.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: businessUnitId!
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID are other than the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.
          Cannot be used with businessUnitId or businessUnitName.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName!
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name are other than the provided list. NOTE: If omitted, the API
          will return results for all Business Units the user has permissions to view.
          Cannot be used with businessUnitId or businessUnitName.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: tagId
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set. Cannot be used with tagId! or tagName!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set. Cannot be used with tagId! or tagName!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: tagId!
          in: query
          description: Comma-separated string; Returns any assets with a tagId other
            than the provided set. Cannot be used with tagId or tagName.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName!
          in: query
          description: Comma-separated string; Returns any assets with a tagName other
            than the provided set. Cannot be used with tagId or tagName.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: classificationId
          in: query
          description: Comma-separated string; Returns records with the specified service
            classifications. Cannot be used with classificationId!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: classificationId!
          in: query
          description: Comma-separated string; Returns records with service classification
            other than the ones specified. Cannot be used with classificationId.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: ipSearch
          in: query
          description: Search for records with ip values in the specified subnets. Cannot
            be used with ipSearch!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: ipSearch!
          in: query
          description: Search for records with ip values not in the specified subnets.
            Cannot be used with ipSearch.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: domainSearch
          in: query
          description: Comma-separated string; Search for given domain values via substring
            match. Surround with quotation marks for an exact search. Cannot be used
            with domainSearch!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: domainSearch!
          in: query
          description: Comma-separated string; Search for results with domains that
            do not match (by substring) these values. Surround with quotation marks
            for an exact search. Cannot be used with domainSearch.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: contentSearch
          in: query
          description: Search for assets via content match
          required: false
          schema:
            type: string
        - name: countryCode
          in: query
          description: Comma-separated string of ISO-3166 two character country codes;
            Returns any assets with an IP located in a country in the provided set.
            Cannot be used with countryCode!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: countryCode!
          in: query
          description: Comma-separated string of ISO-3166 two character country codes;
            Returns any assets with an IP located in a country other than in the provided
            set. Cannot be used with countryCode.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: activityStatus
          in: query
          description: Status describing state of the service (Active, Inactive). Cannot
            be used with activityStatus!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: activityStatus!
          in: query
          description: Status describing state of the service (Active, Inactive). Cannot
            be used with activityStatus.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: discoveryType
          in: query
          description: Describes the way a service was discovered (ColocatedOnIp, DirectlyDiscovered).
            Cannot be used with discoveryType!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: discoveryType!
          in: query
          description: Describes the way a service was discovered (ColocatedOnIp, DirectlyDiscovered).
            Cannot be used with discoveryType.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: portNumber
          in: query
          description: Comma separated string; Returns assets located on the specified
            port. Cannot be used with portNumber!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: portNumber!
          in: query
          description: Comma separated string; Returns assets located on a port other
            than the specified port(s). Cannot be used with portNumber.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: cloudManagementStatus
          in: query
          description: Comma-separated string; Returns only services whose cloud management
            status matches one of the given value(s). Cannot be used with cloudManagementStatus!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: cloudManagementStatus!
          in: query
          description: Comma-separated string; Returns only services whose cloud management
            status is other than the given value(s). Cannot be used with cloudManagementStatus.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: networkType
          in: query
          description: Comma-separated string; Returns only services whose network type
            matches one of the given value(s). Cannot be used with networkType!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: networkType!
          in: query
          description: Comma-separated string; Returns only services whose network type
            is other than the given value(s). Cannot be used with networkType.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: hostingEnvironment
          in: query
          description: Comma-separated string; Returns only services whose hosting environment
            (OnPrem, Cloud) matches one of the given value(s). Cannot be used with hostingEnvironment!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: hostingEnvironment!
          in: query
          description: Comma-separated string; Returns only services whose hosting environment
            (OnPrem, Cloud) is other than the given value(s). Cannot be used with hostingEnvironment.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inferredCveId
          in: query
          description: Comma-separated string; Returns records with the specified inferred
            CVE IDs.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: include
          in: query
          description: 'Comma-separated string; Include the provided fields as part
          of the serialized result.<br/>Values:<br/>`allClassificationDetails`: populate
          all elements in `data[*].classifications[*].details`.<br/>`latestClassificationDetails`:
          populate latest element in `data[*].classifications[*].details`.<br/>If
          param is not specified, `data[*].classifications[*].details` will be empty.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: Sort order
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageService'
  /api/v1/services/services/count:
    get:
      tags:
        - Expander Services
      summary: Get count of Services
      description: Get count of Services. Counts are limited to 10000. When the limit
        is exceeded, the `overflow` value will be set `true`.
      operationId: getServicesCount
      parameters:
        - name: queryId
          in: query
          description: ID of previously stored query
          required: false
          schema:
            type: string
            format: uuid
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view. Cannot
          be used with businessUnitId! or businessUnitName!.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.
          Cannot be used with businessUnitId! or businessUnitName!.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: businessUnitId!
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID are other than the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.
          Cannot be used with businessUnitId or businessUnitName.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName!
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name are other than the provided list. NOTE: If omitted, the API
          will return results for all Business Units the user has permissions to view.
          Cannot be used with businessUnitId or businessUnitName.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: tagId
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set. Cannot be used with tagId! or tagName!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set. Cannot be used with tagId! or tagName!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: tagId!
          in: query
          description: Comma-separated string; Returns any assets with a tagId other
            than the provided set. Cannot be used with tagId or tagName.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName!
          in: query
          description: Comma-separated string; Returns any assets with a tagName other
            than the provided set. Cannot be used with tagId or tagName.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. Cannot be used with providerName! or providerId!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. Cannot be used with providerName! or providerId!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerId!
          in: query
          description: Comma-separated string; Returns only results that were found
            on providers other than the given ones. Cannot be used with providerName
            or providerId.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName!
          in: query
          description: Comma-separated string; Returns only results that were found
            on providers other than the given ones. Cannot be used with providerName
            or providerId.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: classificationId
          in: query
          description: Comma-separated string; Returns records with the specified service
            classifications. Cannot be used with classificationId!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: classificationId!
          in: query
          description: Comma-separated string; Returns records with service classification
            other than the ones specified. Cannot be used with classificationId.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: ipSearch
          in: query
          description: Search for records with ip values in the specified subnets. Cannot
            be used with ipSearch!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: ipSearch!
          in: query
          description: Search for records with ip values not in the specified subnets.
            Cannot be used with ipSearch.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: domainSearch
          in: query
          description: Comma-separated string; Search for given domain values via substring
            match. Surround with quotation marks for an exact search. Cannot be used
            with domainSearch!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: domainSearch!
          in: query
          description: Comma-separated string; Search for results with domains that
            do not match (by substring) these values. Surround with quotation marks
            for an exact search. Cannot be used with domainSearch.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: contentSearch
          in: query
          description: Search for assets via content match
          required: false
          schema:
            type: string
        - name: countryCode
          in: query
          description: Comma-separated string of ISO-3166 two character country codes;
            Returns any assets with an IP located in a country in the provided set.
            Cannot be used with countryCode!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: countryCode!
          in: query
          description: Comma-separated string of ISO-3166 two character country codes;
            Returns any assets with an IP located in a country other than in the provided
            set. Cannot be used with countryCode.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: activityStatus
          in: query
          description: Status describing state of the service (Active, Inactive). Cannot
            be used with activityStatus!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: activityStatus!
          in: query
          description: Status describing state of the service (Active, Inactive). Cannot
            be used with activityStatus.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: discoveryType
          in: query
          description: Describes the way a service was discovered (ColocatedOnIp, DirectlyDiscovered).
            Cannot be used with discoveryType!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: discoveryType!
          in: query
          description: Describes the way a service was discovered (ColocatedOnIp, DirectlyDiscovered).
            Cannot be used with discoveryType.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: portNumber
          in: query
          description: Comma separated string; Returns assets located on the specified
            port. Cannot be used with portNumber!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: portNumber!
          in: query
          description: Comma separated string; Returns assets located on a port other
            than the specified port(s). Cannot be used with portNumber.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: cloudManagementStatus
          in: query
          description: Comma-separated string; Returns only services whose cloud management
            status matches one of the given value(s). Cannot be used with cloudManagementStatus!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: cloudManagementStatus!
          in: query
          description: Comma-separated string; Returns only services whose cloud management
            status is other than the given value(s). Cannot be used with cloudManagementStatus.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: networkType
          in: query
          description: Comma-separated string; Returns only services whose network type
            matches one of the given value(s). Cannot be used with networkType!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: networkType!
          in: query
          description: Comma-separated string; Returns only services whose network type
            is other than the given value(s). Cannot be used with networkType.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: hostingEnvironment
          in: query
          description: Comma-separated string; Returns only services whose hosting environment
            (OnPrem, Cloud) matches one of the given value(s). Cannot be used with hostingEnvironment!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: hostingEnvironment!
          in: query
          description: Comma-separated string; Returns only services whose hosting environment
            (OnPrem, Cloud) is other than the given value(s). Cannot be used with hostingEnvironment.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inferredCveId
          in: query
          description: Comma-separated string; Returns records with the specified inferred
            CVE IDs.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesCount'
  /api/v1/services/services/{id}:
    get:
      tags:
        - Expander Services
      summary: Get a Service by ID
      description: Get a Service by ID
      operationId: getServiceById
      parameters:
        - name: id
          in: path
          description: The ID of the service model, in a UUID format.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
  /api/v1/services/services/counts:
    get:
      tags:
        - Expander Services
      summary: Get bulk counts of services
      description: Get bulk counts of services. Returns the counts of services matching
        the provided filters for each value of the fields specified by the include
        parameter, up to 100 per value. At this time, the only supported value for
        the include parameter is classificationId. Filters for the field specified
        by the include parameter are ignored when computing counts for that field.
      operationId: getBulkServiceCounts
      parameters:
        - name: queryId
          in: query
          description: ID of previously stored query
          required: false
          schema:
            type: string
            format: uuid
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view. Cannot
          be used with businessUnitId! or businessUnitName!.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.
          Cannot be used with businessUnitId! or businessUnitName!.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: businessUnitId!
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID are other than the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.
          Cannot be used with businessUnitId or businessUnitName.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName!
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name are other than the provided list. NOTE: If omitted, the API
          will return results for all Business Units the user has permissions to view.
          Cannot be used with businessUnitId or businessUnitName.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: tagId
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set. Cannot be used with tagId! or tagName!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set. Cannot be used with tagId! or tagName!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: tagId!
          in: query
          description: Comma-separated string; Returns any assets with a tagId other
            than the provided set. Cannot be used with tagId or tagName.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName!
          in: query
          description: Comma-separated string; Returns any assets with a tagName other
            than the provided set. Cannot be used with tagId or tagName.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. Cannot be used with providerName! or providerId!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. Cannot be used with providerName! or providerId!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerId!
          in: query
          description: Comma-separated string; Returns only results that were found
            on providers other than the given ones. Cannot be used with providerName
            or providerId.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName!
          in: query
          description: Comma-separated string; Returns only results that were found
            on providers other than the given ones. Cannot be used with providerName
            or providerId.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: classificationId
          in: query
          description: Comma-separated string; Returns records with the specified service
            classifications. Cannot be used with classificationId!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: classificationId!
          in: query
          description: Comma-separated string; Returns records with service classification
            other than the ones specified. Cannot be used with classificationId.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: ipSearch
          in: query
          description: Search for records with ip values in the specified subnets. Cannot
            be used with ipSearch!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: ipSearch!
          in: query
          description: Search for records with ip values not in the specified subnets.
            Cannot be used with ipSearch.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: domainSearch
          in: query
          description: Comma-separated string; Search for given domain values via substring
            match. Surround with quotation marks for an exact search. Cannot be used
            with domainSearch!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: domainSearch!
          in: query
          description: Comma-separated string; Search for results with domains that
            do not match (by substring) these values. Surround with quotation marks
            for an exact search. Cannot be used with domainSearch.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: contentSearch
          in: query
          description: Search for assets via content match
          required: false
          schema:
            type: string
        - name: countryCode
          in: query
          description: Comma-separated string of ISO-3166 two character country codes;
            Returns any assets with an IP located in a country in the provided set.
            Cannot be used with countryCode!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: countryCode!
          in: query
          description: Comma-separated string of ISO-3166 two character country codes;
            Returns any assets with an IP located in a country other than in the provided
            set. Cannot be used with countryCode.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: activityStatus
          in: query
          description: Status describing state of the service (Active, Inactive). Cannot
            be used with activityStatus!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: activityStatus!
          in: query
          description: Status describing state of the service (Active, Inactive). Cannot
            be used with activityStatus.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: discoveryType
          in: query
          description: Describes the way a service was discovered (ColocatedOnIp, DirectlyDiscovered).
            Cannot be used with discoveryType!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: discoveryType!
          in: query
          description: Describes the way a service was discovered (ColocatedOnIp, DirectlyDiscovered).
            Cannot be used with discoveryType.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: portNumber
          in: query
          description: Comma separated string; Returns assets located on the specified
            port. Cannot be used with portNumber!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: portNumber!
          in: query
          description: Comma separated string; Returns assets located on a port other
            than the specified port(s). Cannot be used with portNumber.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: cloudManagementStatus
          in: query
          description: Comma-separated string; Returns only services whose cloud management
            status matches one of the given value(s). Cannot be used with cloudManagementStatus!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: cloudManagementStatus!
          in: query
          description: Comma-separated string; Returns only services whose cloud management
            status is other than the given value(s). Cannot be used with cloudManagementStatus.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: networkType
          in: query
          description: Comma-separated string; Returns only services whose network type
            matches one of the given value(s). Cannot be used with networkType!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: networkType!
          in: query
          description: Comma-separated string; Returns only services whose network type
            is other than the given value(s). Cannot be used with networkType.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: hostingEnvironment
          in: query
          description: Comma-separated string; Returns only services whose hosting environment
            (OnPrem, Cloud) matches one of the given value(s). Cannot be used with hostingEnvironment!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: hostingEnvironment!
          in: query
          description: Comma-separated string; Returns only services whose hosting environment
            (OnPrem, Cloud) is other than the given value(s). Cannot be used with hostingEnvironment.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inferredCveId
          in: query
          description: Comma-separated string; Returns records with the specified inferred
            CVE IDs.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: include
          in: query
          description: Comma-separated string; Include counts for all possible values
            of the provided fields.
          required: true
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkCounts'
  /api/v1/services/services/csv:
    get:
      tags:
        - Expander Services
      summary: Get CSV file for services
      description: Get CSV file for services. The maximum CSV size is 200000. If the
        filters you have selected exceed that amount, the CSV will be truncated.
      operationId: getServicesCsv
      parameters:
        - name: limit
          in: query
          description: Maximum page size limit.
          required: false
          schema:
            maximum: 200000
            type: integer
            format: int32
            default: 200000
        - name: queryId
          in: query
          description: ID of previously stored query
          required: false
          schema:
            type: string
            format: uuid
        - name: businessUnitId
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID falls in the provided list. NOTE: If omitted, the API will return
          results for all Business Units the user has permissions to view. Cannot
          be used with businessUnitId! or businessUnitName!.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name falls in the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.
          Cannot be used with businessUnitId! or businessUnitName!.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: businessUnitId!
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s ID are other than the provided list. NOTE: If omitted, the API will
          return results for all Business Units the user has permissions to view.
          Cannot be used with businessUnitId or businessUnitName.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: businessUnitName!
          in: query
          description: 'Comma-separated string; Returns only results whose Business
          Unit''s Name are other than the provided list. NOTE: If omitted, the API
          will return results for all Business Units the user has permissions to view.
          Cannot be used with businessUnitId or businessUnitName.'
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: tagId
          in: query
          description: Comma-separated string; Returns any assets with a tagId in the
            provided set. Cannot be used with tagId! or tagName!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName
          in: query
          description: Comma-separated string; Returns any assets with a tagName in
            the provided set. Cannot be used with tagId! or tagName!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: tagId!
          in: query
          description: Comma-separated string; Returns any assets with a tagId other
            than the provided set. Cannot be used with tagId or tagName.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
        - name: tagName!
          in: query
          description: Comma-separated string; Returns any assets with a tagName other
            than the provided set. Cannot be used with tagId or tagName.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerId
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. Cannot be used with providerName! or providerId!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName
          in: query
          description: Comma-separated string; Returns only results that were found
            on the given providers. Cannot be used with providerName! or providerId!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerId!
          in: query
          description: Comma-separated string; Returns only results that were found
            on providers other than the given ones. Cannot be used with providerName
            or providerId.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: providerName!
          in: query
          description: Comma-separated string; Returns only results that were found
            on providers other than the given ones. Cannot be used with providerName
            or providerId.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: classificationId
          in: query
          description: Comma-separated string; Returns records with the specified service
            classifications. Cannot be used with classificationId!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: classificationId!
          in: query
          description: Comma-separated string; Returns records with service classification
            other than the ones specified. Cannot be used with classificationId.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: ipSearch
          in: query
          description: Search for records with ip values in the specified subnets. Cannot
            be used with ipSearch!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: ipSearch!
          in: query
          description: Search for records with ip values not in the specified subnets.
            Cannot be used with ipSearch.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: domainSearch
          in: query
          description: Comma-separated string; Search for given domain values via substring
            match. Surround with quotation marks for an exact search. Cannot be used
            with domainSearch!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: domainSearch!
          in: query
          description: Comma-separated string; Search for results with domains that
            do not match (by substring) these values. Surround with quotation marks
            for an exact search. Cannot be used with domainSearch.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: contentSearch
          in: query
          description: Search for assets via content match
          required: false
          schema:
            type: string
        - name: countryCode
          in: query
          description: Comma-separated string of ISO-3166 two character country codes;
            Returns any assets with an IP located in a country in the provided set.
            Cannot be used with countryCode!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: countryCode!
          in: query
          description: Comma-separated string of ISO-3166 two character country codes;
            Returns any assets with an IP located in a country other than in the provided
            set. Cannot be used with countryCode.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: activityStatus
          in: query
          description: Status describing state of the service (Active, Inactive). Cannot
            be used with activityStatus!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: activityStatus!
          in: query
          description: Status describing state of the service (Active, Inactive). Cannot
            be used with activityStatus.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: discoveryType
          in: query
          description: Describes the way a service was discovered (ColocatedOnIp, DirectlyDiscovered).
            Cannot be used with discoveryType!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: discoveryType!
          in: query
          description: Describes the way a service was discovered (ColocatedOnIp, DirectlyDiscovered).
            Cannot be used with discoveryType.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: portNumber
          in: query
          description: Comma separated string; Returns assets located on the specified
            port. Cannot be used with portNumber!.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: portNumber!
          in: query
          description: Comma separated string; Returns assets located on a port other
            than the specified port(s). Cannot be used with portNumber.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: cloudManagementStatus
          in: query
          description: Comma-separated string; Returns only services whose cloud management
            status matches one of the given value(s). Cannot be used with cloudManagementStatus!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: cloudManagementStatus!
          in: query
          description: Comma-separated string; Returns only services whose cloud management
            status is other than the given value(s). Cannot be used with cloudManagementStatus.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: networkType
          in: query
          description: Comma-separated string; Returns only services whose network type
            matches one of the given value(s). Cannot be used with networkType!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: networkType!
          in: query
          description: Comma-separated string; Returns only services whose network type
            is other than the given value(s). Cannot be used with networkType.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: hostingEnvironment
          in: query
          description: Comma-separated string; Returns only services whose hosting environment
            (OnPrem, Cloud) matches one of the given value(s). Cannot be used with hostingEnvironment!.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: hostingEnvironment!
          in: query
          description: Comma-separated string; Returns only services whose hosting environment
            (OnPrem, Cloud) is other than the given value(s). Cannot be used with hostingEnvironment.
          required: false
          schema:
            maxItems: 3
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: inferredCveId
          in: query
          description: Comma-separated string; Returns records with the specified inferred
            CVE IDs.
          required: false
          schema:
            maxItems: 500
            minItems: 0
            uniqueItems: true
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: Sort order
          required: false
          schema:
            type: string
        - name: filename
          in: query
          description: The filename to use for downloads
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/FileDownloadResponseEntityCsvService'
  /api/v1/services/updates:
    get:
      tags:
        - Expander Services
      summary: Get all service updates
      description: Get all service updates
      operationId: getServiceUpdates
      parameters:
        - name: createdAfter
          in: query
          description: Returns only results created after the provided timestamp (YYYY-MM-DDTHH:MM:SSZ)
            inclusive.
          required: false
          schema:
            type: string
            format: date-time
        - name: createdBefore
          in: query
          description: Returns only results created before the provided timestamp (YYYY-MM-DDTHH:MM:SSZ)
            inclusive. Must be a timestamp after createdAfter (if that is specified)
          required: false
          schema:
            type: string
            format: date-time
        - name: include
          in: query
          description: 'Comma-separated string; Include the provided fields as part
          of the serialized result.<br/>Values:<br/>`allClassificationDetails`: populate
          all elements in `data[*].classifications[*].details`.<br/>`latestClassificationDetails`:
          populate latest element in `data[*].classifications[*].details`.<br/>If
          param is not specified, `data[*].classifications[*].details` will be empty.'
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Maximum page size limit.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token used for pagination.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageServiceUpdateEntry'
  /api/v1/services/queries:
    post:
      tags:
        - Expander Services
      summary: Save a query filter
      description: Save a query filter to use later.
      operationId: createQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterParameters'
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: Path to created resource
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredQuery'
components:
  schemas:
    CountryCode:
      required:
        - countryCode
        - name
      type: object
      properties:
        countryCode:
          type: string
        name:
          type: string
    Meta:
      type: object
      properties:
        nextPageToken:
          type: string
        prevPageToken:
          type: string
    PageCountryCode:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CountryCode'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    Pagination:
      type: object
      properties:
        next:
          type: string
        prev:
          type: string
        current:
          type: string
    Column:
      required:
        - description
        - id
        - jsonPath
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        jsonPath:
          type: string
        renderExpression:
          type: string
    PageServiceClassificationSummary:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ServiceClassificationSummary'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    ServiceClassificationSummary:
      required:
        - columns
        - description
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        columns:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Column'
    Annotations:
      required:
        - tags
      type: object
      properties:
        tags:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TagReference'
    AssetReference:
      required:
        - assetKey
        - assetType
        - displayName
        - id
        - referenceReason
        - sourceDetails
      type: object
      properties:
        id:
          type: string
          format: uuid
        assetKey:
          type: string
        assetType:
          type: string
        displayName:
          type: string
        referenceReason:
          $ref: '#/components/schemas/ReferenceReason'
        sourceDetails:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SourceReference'
    BusinessUnit:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    Certificate:
      required:
        - md5Fingerprint
        - sha1Fingerprint
        - sha256Fingerprint
      type: object
      properties:
        issuer:
          type: string
        issuerAlternativeNames:
          type: string
        issuerCountry:
          type: string
        issuerEmail:
          type: string
        issuerLocality:
          type: string
        issuerName:
          type: string
        issuerOrg:
          type: string
        formattedIssuerOrg:
          type: string
        issuerOrgUnit:
          type: string
        issuerState:
          type: string
        publicKey:
          type: string
        publicKeyAlgorithm:
          type: string
        publicKeyRsaExponent:
          type: integer
          format: int64
        signatureAlgorithm:
          type: string
        subject:
          type: string
        subjectAlternativeNames:
          type: string
        subjectCountry:
          type: string
        subjectEmail:
          type: string
        subjectLocality:
          type: string
        subjectName:
          type: string
        subjectOrg:
          type: string
        subjectOrgUnit:
          type: string
        subjectState:
          type: string
        serialNumber:
          type: string
        validNotBefore:
          type: string
        validNotAfter:
          type: string
        version:
          type: string
        publicKeyBits:
          type: integer
          format: int32
        publicKeyModulus:
          type: string
        publicKeySpki:
          type: string
        sha1Fingerprint:
          type: string
        sha256Fingerprint:
          type: string
        md5Fingerprint:
          type: string
    CloudManagementStatus:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Detail:
      required:
        - firstObserved
        - lastObserved
      type: object
      properties:
        value:
          type: object
        firstObserved:
          type: string
          format: date-time
        lastObserved:
          type: string
          format: date-time
    DiscoveryDetail:
      required:
        - description
        - type
      type: object
      properties:
        type:
          type: string
        description:
          type: string
    DiscoveryInfo:
      required:
        - details
        - type
      type: object
      properties:
        type:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/DiscoveryDetail'
    Geolocation:
      required:
        - countryCode
        - latitude
        - longitude
      type: object
      properties:
        countryCode:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        city:
          type: string
        timeZone:
          type: string
        regionCode:
          type: string
    HostingEnvironment:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    InferredCve:
      required:
        - activityStatus
        - cveId
        - firstObserved
        - lastObserved
      type: object
      properties:
        cveId:
          type: string
        cvssScoreV2:
          type: number
          format: double
        cveSeverityV2:
          type: string
        cvssScoreV3:
          type: number
          format: double
        cveSeverityV3:
          type: string
        activityStatus:
          type: string
        firstObserved:
          type: string
          format: date-time
        lastObserved:
          type: string
          format: date-time
        matchMetadata:
          $ref: '#/components/schemas/InferredCveMatchMetadata'
    InferredCveMatchMetadata:
      required:
        - confidence
        - matchType
        - product
      type: object
      properties:
        matchType:
          type: string
        product:
          type: string
        vendor:
          type: string
        version:
          type: string
        confidence:
          type: string
    NetworkType:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    PageService:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Service'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    Provider:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    RecentCertificate:
      required:
        - activityStatus
        - certificate
        - firstObserved
        - lastObserved
      type: object
      properties:
        certificate:
          $ref: '#/components/schemas/Certificate'
        assetId:
          type: string
          format: uuid
        firstObserved:
          type: string
          format: date-time
        lastObserved:
          type: string
          format: date-time
        activityStatus:
          type: string
    RecentDomain:
      required:
        - activityStatus
        - domain
        - firstObserved
        - lastObserved
      type: object
      properties:
        domain:
          type: string
        assetId:
          type: string
          format: uuid
        lastObserved:
          type: string
          format: date-time
        firstObserved:
          type: string
          format: date-time
        activityStatus:
          type: string
    RecentIp:
      required:
        - activityStatus
        - firstObserved
        - ip
        - lastObserved
        - provider
        - transportProtocol
      type: object
      properties:
        ip:
          type: string
        assetId:
          type: string
          format: uuid
        transportProtocol:
          type: string
        geolocation:
          $ref: '#/components/schemas/Geolocation'
        provider:
          $ref: '#/components/schemas/Provider'
        firstObserved:
          type: string
          format: date-time
        lastObserved:
          type: string
          format: date-time
        activityStatus:
          type: string
    RecentTlsVersion:
      required:
        - activityStatus
        - cipherSuite
        - firstObserved
        - lastObserved
        - tlsVersion
      type: object
      properties:
        tlsVersion:
          type: string
        cipherSuite:
          type: string
        firstObserved:
          type: string
          format: date-time
        lastObserved:
          type: string
          format: date-time
        activityStatus:
          type: string
    ReferenceReason:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Service:
      required:
        - activityStatus
        - annotations
        - assets
        - businessUnits
        - certificates
        - classifications
        - cloudManagementStatus
        - discoveryInfo
        - domains
        - firstObserved
        - hostingEnvironment
        - id
        - inferredCves
        - ips
        - lastObserved
        - name
        - networkType
        - portNumber
        - serviceType
        - tlsVersions
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        portNumber:
          type: integer
          format: int32
        activityStatus:
          type: string
        businessUnits:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnit'
        ips:
          type: array
          items:
            $ref: '#/components/schemas/RecentIp'
        inferredCves:
          type: array
          items:
            $ref: '#/components/schemas/InferredCve'
        domains:
          type: array
          items:
            $ref: '#/components/schemas/RecentDomain'
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/RecentCertificate'
        tlsVersions:
          type: array
          items:
            $ref: '#/components/schemas/RecentTlsVersion'
        classifications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceClassification'
        firstObserved:
          type: string
          format: date-time
        lastObserved:
          type: string
          format: date-time
        annotations:
          $ref: '#/components/schemas/Annotations'
        assets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AssetReference'
        discoveryInfo:
          $ref: '#/components/schemas/DiscoveryInfo'
        cloudManagementStatus:
          $ref: '#/components/schemas/CloudManagementStatus'
        networkType:
          $ref: '#/components/schemas/NetworkType'
        hostingEnvironment:
          $ref: '#/components/schemas/HostingEnvironment'
        serviceType:
          type: string
        lastIp:
          $ref: '#/components/schemas/RecentIp'
        lastDomain:
          $ref: '#/components/schemas/RecentDomain'
        lastCertificate:
          $ref: '#/components/schemas/RecentCertificate'
        lastTlsVersion:
          $ref: '#/components/schemas/RecentTlsVersion'
    ServiceClassification:
      required:
        - details
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/Detail'
        firstObserved:
          type: string
          format: date-time
        lastObserved:
          type: string
          format: date-time
        activityStatus:
          type: string
    SourceReference:
      required:
        - name
        - value
      type: object
      properties:
        name:
          type: string
        value:
          uniqueItems: true
          type: array
          items:
            type: string
    TagReference:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    ServicesCount:
      required:
        - count
        - overflow
      type: object
      properties:
        count:
          type: integer
          format: int32
        overflow:
          type: boolean
    BulkCount:
      required:
        - count
        - fieldName
        - fieldValue
        - overflow
      type: object
      properties:
        fieldName:
          type: string
        fieldValue:
          type: string
        overflow:
          type: boolean
        count:
          type: integer
          format: int32
    BulkCounts:
      required:
        - counts
      type: object
      properties:
        counts:
          type: array
          items:
            $ref: '#/components/schemas/BulkCount'
    CsvField:
      type: object
      properties:
        fieldPath:
          type: string
        headerName:
          type: string
        converter:
          type: object
    FileDownloadResponseEntityCsvService:
      type: object
      properties:
        data:
          type: object
        filename:
          type: string
        fieldMappings:
          type: array
          items:
            $ref: '#/components/schemas/CsvField'
    PageServiceUpdateEntry:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ServiceUpdateEntry'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    ServiceUpdate:
      required:
        - created
        - id
        - updateTime
        - updateType
      type: object
      properties:
        id:
          type: string
          format: uuid
        updateType:
          type: string
        value:
          type: string
        previousValue:
          type: string
        updateTime:
          type: string
          format: date-time
        created:
          type: string
          format: date-time
    ServiceUpdateEntry:
      required:
        - serviceUpdate
      type: object
      properties:
        serviceUpdate:
          $ref: '#/components/schemas/ServiceUpdate'
        service:
          $ref: '#/components/schemas/Service'
    FilterParameters:
      type: object
      properties:
        businessUnits:
          $ref: '#/components/schemas/ValueWithNameUUID'
        tags:
          $ref: '#/components/schemas/ValueWithNameUUID'
        providers:
          $ref: '#/components/schemas/ValueWithNameString'
        certificateSha1s:
          $ref: '#/components/schemas/ValueString'
        classifications:
          $ref: '#/components/schemas/ValueString'
        ipRanges:
          $ref: '#/components/schemas/ValueIpRange'
        domains:
          $ref: '#/components/schemas/ValueString'
        countryCodes:
          $ref: '#/components/schemas/ValueString'
        activityStatus:
          $ref: '#/components/schemas/ValueString'
        content:
          type: string
    ValueIpRange:
      type: object
      properties:
        values:
          uniqueItems: true
          type: array
          items:
            type: string
        exclude:
          type: boolean
    ValueString:
      type: object
      properties:
        values:
          uniqueItems: true
          type: array
          items:
            type: string
        exclude:
          type: boolean
    ValueWithNameString:
      type: object
      properties:
        names:
          uniqueItems: true
          type: array
          items:
            type: string
        values:
          uniqueItems: true
          type: array
          items:
            type: string
        exclude:
          type: boolean
    ValueWithNameUUID:
      type: object
      properties:
        names:
          uniqueItems: true
          type: array
          items:
            type: string
        values:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        exclude:
          type: boolean
    StoredQuery:
      required:
        - expires
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        expires:
          type: string
          format: date-time
  securitySchemes:
    ClientCredentials:
      type: oauth2
      description: |-
        For more information on how to retrieve client credentials, visit the Xpanse [TechDocs](https://docs.paloaltonetworks.com/cortex/cortex-xpanse/cortex-xpanse-user-guide/apis-and-integrations-main/expander-apis-and-integrations/expander-apis.html#expander-apis). This is the preferred method for retrieving a JWT for Xpanse APIs. There will be significant customer communications and a lengthy migration period before refresh token support is removed in favor of the client credentials flow.

        Exchange a `client_id` and `client_secret` for an `access_token` (JWT) that can be passed to all Xpanse APIs. See [Get Access Token from Client Credentials](#operation/getAccessToken) for more info.
      flows:
        clientCredentials:
          tokenUrl: /api/oauth2/RequestToken
          scopes:
            scope-xpanse: access Xpanse APIs
    RefreshToken-Deprecated:
      type: apiKey
      description: |-
        Xpanse APIs continue to support this JWT retrieval method alongside the preferred client credentials flow. There will be significant customer communications and a lengthy migration period before refresh token support is removed in favor of the client credentials flow.

        Provide a valid Xpanse-provided refresh token to access `/api/v1/idToken/ This route will generate a JWT token that can be used with the other api endpoints.

        Example: `Authorization: Bearer <refreshToken>`
      name: Authorization
      in: header
    Bearer:
      type: http
      description: |-
        To access Xpanse APIs, a valid access token (JWT) must be included in every request
        in the `Authorization` header, which is retrieved by going through the client credentials flow (preferred method of JWT retrieval).

        The value for this header should be `Bearer <access_token>`, where the token is the base64-encoded JSON Web Token returned as the `access_token` field in the client credentials flow.
      name: Authorization
      in: header
      scheme: bearer
      bearerFormat: JWT
