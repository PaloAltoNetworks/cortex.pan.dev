openapi: 3.0.1
info:
  title: Targeted IPs API
  description: An API to get all targeted IPs.
  termsOfService: https://www.expanse.co/master-service-agreement/
  contact:
    name: API Support
    url: https://expander-support.expanse.co
    email: expander-support@expanseinc.com
  version: 2.0.0
servers:
- url: https://expander.expanse.co
security:
- JWT: []
paths:
  /api/v1/idToken/:
    get:
      tags:
      - Tokens
      summary: Get ID token
      description: |-
        This route can be accessed with an Expanse-provided refresh
        token to generate a valid JWT Token to be used with the other api
        endpoints.

        Example: `Authorization: Bearer refreshtoken`
      operationId: getIdToken
      responses:
        200:
          description: |-
            Response token can be used as JWT in future requests to other endpoints

            Example: `Authorization: JWT token`
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
      security:
      - Bearer: []
  /api/v1/targetedIps:
    get:
      tags:
        - Targeted IPs
      description: Get all targeted IPs.
      operationId: getTargetedIps
      responses:
        200:
          description: default response
          content:
            application/json:
              schema:
                type: object
components:
  securitySchemes:
    JWT:
      type: apiKey
      description: |-
        To access the API a valid JWT token must be included in every request
        in the ''Authorization'' header. A valid JWT token is generated by the
        API and returned via the `/api/v1/idToken/` route. The value for this header
        should be `JWT <token>`, where the token is the base64-encoded JSON Web
        Token.

        Example: `Authorization: JWT <token>`
      name: Authorization
      in: header
    Bearer:
      type: apiKey
      description: |-
        Provide a valid Expanse-provided refresh token to access `/api/v1/idToken/`.
        This route will generate a JWT token that can be used with the other api
        endpoints.

        Example: `Authorization: Bearer <refreshToken>`
      name: Authorization
      in: header
