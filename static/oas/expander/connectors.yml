# This file was generated by OpenAPIDocsIT::writeUpdatedOpenApi at 2021-11-05T23:49:42.961Z. Do not modify.
openapi: 3.0.1
info:
  title: Entrusted Attribution Sources API
  description: API for creating data source integrations
  termsOfService: https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/legal/palo-alto-networks-end-user-license-agreement-eula.pdf
  contact:
    name: API Support
    url: https://docs.paloaltonetworks.com/cortex/cortex-xpanse/cortex-xpanse-user-guide/apis-and-integrations-main/expander-apis-and-integrations/expander-apis.html#expander-apis
    email: expanse-support@paloaltonetworks.com
  version: 1.0.0
servers:
- url: https://expander.expanse.co
security:
- JWT: []
paths:
  /api/v1/idToken/:
    get:
      tags:
      - Tokens
      summary: Get ID token
      description: |-
        This route can be accessed with an Expanse-provided refresh
        token to generate a valid JWT Token to be used with the other api
        endpoints.

        Example: `Authorization: Bearer refreshtoken`
      operationId: getIdToken
      responses:
        "200":
          description: |-
            Response token can be used as JWT in future requests to other endpoints

            Example: `Authorization: JWT token`
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
      security:
      - Bearer: []
  /api/v1/connectors/accounts:
    get:
      tags:
      - Connector Accounts
      summary: Get all Connector Instances/Accounts
      description: Get all Connector Instances/Accounts.
      operationId: getDataSourceInstances
      parameters:
      - name: limit
        in: query
        description: Maximum page size limit.
        required: false
        schema:
          type: integer
          format: int32
          default: 100
      - name: pageToken
        in: query
        description: Page token used for pagination.
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageConnectorAccount'
    post:
      tags:
      - Connector Accounts
      summary: Create a Connector Account
      description: Create a Connector Account by passing in credentials. The credentials
        should be in JSON format withcontent that is dependent on the Connector Service
      operationId: createDataSourceInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: Path to created resource
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountResponse'
  /api/v1/connectors/accounts/{id}:
    get:
      tags:
      - Connector Accounts
      summary: Get Connector Instance/Account by Id
      description: Get Connector Instance/Account by Id
      operationId: getDataSourceInstanceById
      parameters:
      - name: id
        in: path
        description: Id of asset
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorAccount'
    put:
      tags:
      - Connector Accounts
      summary: Update a Connector Account
      description: Update an existing Connector Account with new credentials and other
        information.
      operationId: updateDataSourceInstance
      parameters:
      - name: id
        in: path
        description: Id of asset
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccount'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountResponse'
    delete:
      tags:
      - Connector Accounts
      summary: Delete an existing Connector Account
      description: Delete a Connector Account
      operationId: deleteDataSourceInstance
      parameters:
      - name: id
        in: path
        description: Id of asset
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: No Content
  /api/v1/connectors/services:
    get:
      tags:
      - Connector Services
      summary: Get all Connector Services
      description: Get all Connector Services.
      operationId: getConnectorServices
      parameters:
      - name: limit
        in: query
        description: Maximum page size limit.
        required: false
        schema:
          type: integer
          format: int32
          default: 100
      - name: pageToken
        in: query
        description: Page token used for pagination.
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageConnectorService'
components:
  schemas:
    CollectionJobStatus:
      required:
      - collectionJobTimestamp
      - id
      - status
      - statusDetails
      type: object
      properties:
        id:
          type: string
          format: uuid
        collectionJobTimestamp:
          type: string
          format: date-time
        status:
          type: string
        statusDetails:
          type: string
    ConnectorAccount:
      required:
      - businessUnitId
      - businessUnitName
      - created
      - dataSourceId
      - dataSourceName
      - id
      - modified
      - modifiedByUser
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
        businessUnitId:
          type: string
          format: uuid
        businessUnitName:
          type: string
        dataSourceId:
          type: string
          format: uuid
        dataSourceName:
          type: string
        name:
          type: string
        modifiedByUser:
          type: string
        collectionJobStatus:
          $ref: '#/components/schemas/CollectionJobStatus'
    Meta:
      type: object
      properties:
        nextPageToken:
          type: string
        prevPageToken:
          type: string
    PageConnectorAccount:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorAccount'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    Pagination:
      type: object
      properties:
        next:
          type: string
        prev:
          type: string
    CreateAccount:
      required:
      - businessUnitId
      - credentials
      - dataSourceId
      - name
      type: object
      properties:
        businessUnitId:
          type: string
          format: uuid
        name:
          type: string
        dataSourceId:
          type: string
          format: uuid
        credentials:
          type: object
    AccountVerificationResponse:
      required:
      - responseBody
      - responseCode
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
        responseBody:
          type: string
    CreateAccountResponse:
      required:
      - connectorAccount
      type: object
      properties:
        connectorAccount:
          $ref: '#/components/schemas/ConnectorAccount'
        verificationResponse:
          $ref: '#/components/schemas/AccountVerificationResponse'
    UpdateAccount:
      required:
      - businessUnitId
      - name
      type: object
      properties:
        businessUnitId:
          type: string
          format: uuid
        name:
          type: string
    ConnectorService:
      required:
      - description
      - id
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
    PageConnectorService:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorService'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
  securitySchemes:
    JWT:
      type: apiKey
      description: |-
        To access the API a valid JWT token must be included in every request
        in the ''Authorization'' header. A valid JWT token is generated by the
        API and returned via the `/api/v1/idToken/` route. The value for this header
        should be `JWT <token>`, where the token is the base64-encoded JSON Web
        Token.

        Example: `Authorization: JWT <token>`
      name: Authorization
      in: header
    Bearer:
      type: apiKey
      description: |-
        Provide a valid Xpanse-provided refresh token to access `/api/v1/idToken/`.
        This route will generate a JWT token that can be used with the other api
        endpoints.

        Example: `Authorization: Bearer <refreshToken>`
      name: Authorization
      in: header
