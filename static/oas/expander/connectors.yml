# This file was generated by OpenAPIDocsIT::writeUpdatedOpenApi at 2021-11-30T21:03:26.306Z. Do not modify.
openapi: 3.0.1
info:
  title: Entrusted Attribution Sources
  description: API for configuring external integrations
  termsOfService: https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/legal/palo-alto-networks-end-user-license-agreement-eula.pdf
  contact:
    name: API Support
    url: https://docs.paloaltonetworks.com/cortex/cortex-xpanse/cortex-xpanse-user-guide/apis-and-integrations-main/expander-apis-and-integrations/expander-apis.html#expander-apis
    email: expanse-support@paloaltonetworks.com
  version: 1.0.0
servers:
  - url: https://expander.expanse.co
security:
  - Bearer: []
paths:
  /api/oauth2/RequestToken:
    post:
      tags:
        - Tokens
      summary: Get Access Token from Client Credentials
      description: "This route can be accessed with a `client_id` and `client_secret`\
        \ to generate a valid `access_token` to be used with the other Xpanse api\
        \ endpoints. For more information on how to retrieve client credentials, visit\
        \ the Xpanse [TechDocs](https://docs.paloaltonetworks.com/cortex/cortex-xpanse/cortex-xpanse-user-guide/apis-and-integrations-main/expander-apis-and-integrations/expander-apis.html#expander-apis).\
        \  \n\nExample: `Authorization: Bearer access_token`"
      operationId: getAccessToken
      requestBody:
        description: scope should be `scope-xpanse`, grant_type should be `client_credentials`
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                client_secret:
                  type: string
                scope:
                  type: string
                  example: scope-xpanse
                grant_type:
                  type: string
                  example: client_credentials
      responses:
        "200":
          description: |-
            Response field `access_token` can be used as the Bearer token in future requests to other Xpanse endpoints.

            Example: `Authorization: Bearer access_token`
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                  expires_in:
                    type: integer
                    example: 3599
      security:
        - ClientCredentials: []
      servers:
        - url: https://api.paloaltonetworks.com
  /api/v1/idToken/:
    get:
      tags:
        - Tokens
      summary: Get ID token from refresh token (Deprecated)
      description: |-
        This route can be accessed with an Xpanse-provided refresh
        token to generate a valid JWT Token to be used with the other api
        endpoints.

        Example: `Authorization: Bearer refreshtoken`
      operationId: getIdToken
      responses:
        "200":
          description: |-
            Response token can be used as JWT in future requests to other endpoints

            Example: `Authorization: JWT token`
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
      security:
        - RefreshToken-Deprecated: []
  /api/v1/connectors/accounts:
    get:
      tags:
        - Connector Accounts
      summary: Get all Connector Instances/Accounts
      description: Get all Connector Instances/Accounts.
      operationId: getDataSourceInstances
      parameters:
        - name: limit
          in: query
          description: Maximum page size limit.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token used for pagination.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageConnectorAccount'
    post:
      tags:
        - Connector Accounts
      summary: Create a Connector Account
      description: Create a Connector Account by passing in credentials. The credentials
        should be in JSON format withcontent that is dependent on the Connector Service
      operationId: createDataSourceInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: Path to created resource
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountResponse'
  /api/v1/connectors/accounts/{id}:
    get:
      tags:
        - Connector Accounts
      summary: Get Connector Instance/Account by Id
      description: Get Connector Instance/Account by Id
      operationId: getDataSourceInstanceById
      parameters:
        - name: id
          in: path
          description: Id of asset
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorAccount'
    put:
      tags:
        - Connector Accounts
      summary: Update a Connector Account
      description: Update an existing Connector Account with new credentials and other
        information.
      operationId: updateDataSourceInstance
      parameters:
        - name: id
          in: path
          description: Id of asset
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccount'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountResponse'
    delete:
      tags:
        - Connector Accounts
      summary: Delete an existing Connector Account
      description: Delete a Connector Account
      operationId: deleteDataSourceInstance
      parameters:
        - name: id
          in: path
          description: Id of asset
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No Content
  /api/v1/connectors/services:
    get:
      tags:
        - Connector Services
      summary: Get all Connector Services
      description: Get all Connector Services.
      operationId: getConnectorServices
      parameters:
        - name: limit
          in: query
          description: Maximum page size limit.
          required: false
          schema:
            type: integer
            format: int32
            default: 100
        - name: pageToken
          in: query
          description: Page token used for pagination.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageConnectorService'
components:
  schemas:
    CollectionJobStatus:
      required:
        - collectionJobTimestamp
        - id
        - status
        - statusDetails
      type: object
      properties:
        id:
          type: string
          format: uuid
        collectionJobTimestamp:
          type: string
          format: date-time
        status:
          type: string
        statusDetails:
          type: string
    ConnectorAccount:
      required:
        - businessUnitId
        - businessUnitName
        - created
        - dataSourceId
        - dataSourceName
        - id
        - modified
        - modifiedByUser
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
        businessUnitId:
          type: string
          format: uuid
        businessUnitName:
          type: string
        dataSourceId:
          type: string
          format: uuid
        dataSourceName:
          type: string
        name:
          type: string
        modifiedByUser:
          type: string
        collectionJobStatus:
          $ref: '#/components/schemas/CollectionJobStatus'
    Meta:
      type: object
      properties:
        nextPageToken:
          type: string
        prevPageToken:
          type: string
    PageConnectorAccount:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorAccount'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
    Pagination:
      type: object
      properties:
        next:
          type: string
        prev:
          type: string
        current:
          type: string
    CreateAccount:
      required:
        - businessUnitId
        - credentials
        - dataSourceId
        - name
      type: object
      properties:
        businessUnitId:
          type: string
          format: uuid
        name:
          type: string
        dataSourceId:
          type: string
          format: uuid
        credentials:
          type: object
    AccountVerificationResponse:
      required:
        - responseBody
        - responseCode
      type: object
      properties:
        responseCode:
          type: integer
          format: int32
        responseBody:
          type: string
    CreateAccountResponse:
      required:
        - connectorAccount
      type: object
      properties:
        connectorAccount:
          $ref: '#/components/schemas/ConnectorAccount'
        verificationResponse:
          $ref: '#/components/schemas/AccountVerificationResponse'
    UpdateAccount:
      required:
        - businessUnitId
        - name
      type: object
      properties:
        businessUnitId:
          type: string
          format: uuid
        name:
          type: string
    ConnectorService:
      required:
        - description
        - id
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
    PageConnectorService:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorService'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/Meta'
  securitySchemes:
    ClientCredentials:
      type: oauth2
      description: |-
        For more information on how to retrieve client credentials, visit the Xpanse [TechDocs](https://docs.paloaltonetworks.com/cortex/cortex-xpanse/cortex-xpanse-user-guide/apis-and-integrations-main/expander-apis-and-integrations/expander-apis.html#expander-apis). This is the preferred method for retrieving a JWT for Xpanse APIs. There will be significant customer communications and a lengthy migration period before refresh token support is removed in favor of the client credentials flow.

        Exchange a `client_id` and `client_secret` for an `access_token` (JWT) that can be passed to all Xpanse APIs. See [Get Access Token from Client Credentials](#operation/getAccessToken) for more info.
      flows:
        clientCredentials:
          tokenUrl: /api/oauth2/RequestToken
          scopes:
            scope-xpanse: access Xpanse APIs
    RefreshToken-Deprecated:
      type: apiKey
      description: |-
        Xpanse APIs continue to support this JWT retrieval method alongside the preferred client credentials flow. There will be significant customer communications and a lengthy migration period before refresh token support is removed in favor of the client credentials flow.

        Provide a valid Xpanse-provided refresh token to access `/api/v1/idToken/`. This route will generate a JWT token that can be used with the other api endpoints.

        Example: `Authorization: Bearer <refreshToken>`
      name: Authorization
      in: header
    Bearer:
      type: http
      description: |-
        To access Xpanse APIs, a valid access token (JWT) must be included in every request
        in the `Authorization` header, which is retrieved by going through the client credentials flow (preferred method of JWT retrieval).

        The value for this header should be `Bearer <access_token>`, where the token is the base64-encoded JSON Web Token returned as the `access_token` field in the client credentials flow.
      name: Authorization
      in: header
      scheme: bearer
      bearerFormat: JWT
